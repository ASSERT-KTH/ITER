bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[start  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	currentByte  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  while(currentByte  <  0  &&  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  &&  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  &&  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  trailer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  trailer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '9')  {  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '9')  {  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '9')  {  currentByte  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  while(currentByte  >=  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >=  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >=  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '9')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[start  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '9')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[start  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '9')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  }	  continue;    while(currentByte    <    0    ||    currentByte    >    '9')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[start  -  1];  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[start  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[start  -  1];  }	  continue;    while(currentByte    <    0    ||    currentByte    >    '9')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  while(currentByte  <  0  &&  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  &&  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  &&  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '9')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte),  currentByte);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte),  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte),  currentByte);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte),    currentByte);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
15	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  equal  to  ' "  +  currentByte  + "' ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  equal  to  ' "  +  currentByte  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  equal  to  ' "  +  currentByte  + "' ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte),    currentByte);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
16	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  equal  to  ' "  +  currentByte  + "' ");  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  equal  to  ' "  +  currentByte  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  equal  to  ' "  +  currentByte  + "' ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte),    currentByte);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
17	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  equal  to  ' "  +  currentByte  + "'. ");  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  equal  to  ' "  +  currentByte  + "'. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  equal  to  ' "  +  currentByte  + "'. ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte),    currentByte);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
18	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  equal  to  ' "  +  currentByte  + "'. ");  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  equal  to  ' "  +  currentByte  + "'. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  equal  to  ' "  +  currentByte  + "'. ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte),    currentByte);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
19	[BUG]  [BUGGY]  while(currentByte  <  length)  {  currentByte  =  trailer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  length)  {  currentByte  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  length)  {  currentByte  =  trailer[end  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
20	[BUG]  [BUGGY]  while(currentByte  <  length)  {  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  length)  {  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  length)  {  currentByte  =  buffer[end  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
21	[BUG]  [BUGGY]  while(currentByte  <  length)  {  currentByte  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  length)  {  currentByte  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  length)  {  currentByte  =  buffer[start  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  buffer[end  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	add	continue;  while(currentByte  <  length)  {  currentByte  =  buffer[end  -  1];  }	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[end    -    1];    	compilable	  [FE]  AssertionError  	32	17	replace
23	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  buffer[end  -  1];  }  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  buffer[end  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  length)  {  currentByte  =  buffer[end  -  1];  }	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[end    -    1];    	compilable	  [FE]  AssertionError  	32	17	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	add	continue;  while(currentByte  <  length)  {  currentByte  =  trailer[end  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[end    -    1];    	compilable	  [FE]  AssertionError  	32	17	replace
25	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  trailer[end  -  1];  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  length)  {  currentByte  =  trailer[end  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[end    -    1];    	compilable	  [FE]  AssertionError  	32	17	replace
26	[BUG]  [BUGGY]  while(currentByte  <  end)  {  currentByte  =  buffer[end  -  1];  [CE]  cannot  find  symbol  result  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  end)  {  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  end)  {  currentByte  =  buffer[end  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  cannot  find  symbol  result	32	None	replace
27	[BUG]  [BUGGY]  while(currentByte  <  length)  {  currentByte  =  trailer[start  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  length)  {  currentByte  =  trailer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  length)  {  currentByte  =  trailer[start  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
28	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  buffer[start  -  1];  }  [CE]  cannot  find  symbol  result  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  buffer[start  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  length)  {  currentByte  =  buffer[start  -  1];  }	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  cannot  find  symbol  result	31	None	replace
29	[BUG]  [BUGGY]  currentByte  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  currentByte  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	currentByte  =  buffer[start  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
30	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  trailer[start  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  currentByte  =  trailer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  length)  {  currentByte  =  trailer[start  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
31	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + ",  currentByte] ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + ",  currentByte] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + ",  currentByte] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    loadClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
32	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    loadClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
33	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().toString()  + "] ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().toString()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().toString()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    loadClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
34	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "]. ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "]. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "]. ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    loadClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
35	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ",  currentByte);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ",  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ",  currentByte);	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    loadClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
36	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ");	  Throwables.throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
37	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer  + "] ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer  + "] ");	  Throwables.throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
38	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte);	  Throwables.throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
39	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "]. ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "]. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "]. ");	  Throwables.throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
40	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ");  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ");	  Throwables.throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
41	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  trailer);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  trailer);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  trailer);	  Throwables.throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
42	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",  currentByte] ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",  currentByte] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",  currentByte] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "]. ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "]. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "]. ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ",  currentByte);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ",  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ",  currentByte);	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "CurrentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "CurrentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "CurrentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass()  + "] ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
48	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(currentByte);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ").printStackTrace(currentByte);	  throw    new    IllegalArgumentException(   "   ").equals(currentByte);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
49	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equalsIgnoreCase(currentByte);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equalsIgnoreCase(currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ").equalsIgnoreCase(currentByte);	  throw    new    IllegalArgumentException(   "   ").equals(currentByte);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
50	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").append(currentByte);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").append(currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ").append(currentByte);	  throw    new    IllegalArgumentException(   "   ").equals(currentByte);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
51	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ").equals(currentByte));	  throw    new    IllegalArgumentException(   "   ").equals(currentByte);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
52	[BUG]  [BUGGY]  while(currentByte  <  length)  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  length)  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  length)  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
53	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  buffer[end  -  1];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  buffer[end  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  length)  {  trailer  =  buffer[end  -  1];  }	  continue;    while(currentByte    <    length)    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
54	[BUG]  [BUGGY]  while(currentByte  <  length)  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  length)  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  length)  {  trailer  =  buffer[start  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
55	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  buffer[start  -  1];  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  buffer[start  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  length)  {  trailer  =  buffer[start  -  1];  }	  continue;    while(currentByte    <    length)    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
56	[BUG]  [BUGGY]  while(currentByte  <  length)  {  trailer  =  currentByte[end  -  1];  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  length)  {  trailer  =  currentByte[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  length)  {  trailer  =  currentByte[end  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
57	[BUG]  [BUGGY]  while(currentByte  >=  length)  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >=  length)  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >=  length)  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
58	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.toString());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.toString());  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte.toString());	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(trailer));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
59	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.getMessage());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.getMessage());  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte.getMessage());	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(trailer));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
60	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.equals(TRUE_ENCODING));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.equals(TRUE_ENCODING));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte.equals(TRUE_ENCODING));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(trailer));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
61	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  currentByte] ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  currentByte] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  currentByte] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",    currentByte]   ");    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
62	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ",  currentByte] ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ",  currentByte] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ",  currentByte] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",    currentByte]   ");    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
63	[BUG]  [BUGGY]  if(trailer  ==''  ||  trailer  ==  '-')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  empty  character  literal  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(trailer  ==''  ||  trailer  ==  '-')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(trailer  ==''  ||  trailer  ==  '-')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  continue;    continue;    	non-compiled	[CE]  empty  character  literal	1	None	replace
64	[BUG]  [BUGGY]  if(currentByte  ==  0)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  currentByte  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(currentByte  ==  0)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(currentByte  ==  0)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  continue;    continue;    	non-compiled	[CE]  cannot  find  symbol  currentByte	1	None	replace
65	[BUG]  [BUGGY]  if(length  <  =  0)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(length  <  =  0)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(length  <  =  0)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
66	[BUG]  [BUGGY]  if(trailer  =='')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(trailer  =='')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(trailer  =='')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
67	[BUG]  [BUGGY]  if(length  >  3)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(length  >  3)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(length  >  3)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
68	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte,  currentByte));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte,  currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte,  currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    currentByte));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
69	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  currentByte));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    currentByte));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
70	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  trailer));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  trailer));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  trailer));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    currentByte));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
71	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  end  + "] ");  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  end  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  end  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
72	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
73	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  length  + "] ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  length  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  length  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
74	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  <  <  3)+(currentByte  -  '0');  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(length  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(length  <  <  3)+(currentByte  -  '0');	  continue;    if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
75	[BUG]  [BUGGY]  result  =(length  <  <  3)+(currentByte  -  '0');  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(length  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(length  <  <  3)+(currentByte  -  '0');	  continue;    if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
76	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  +  '0');  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  +  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  +  '0');	  continue;    if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
77	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  }	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
80	[BUG]  [BUGGY]  while(currentByte  <  0  &&  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  &&  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  &&  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
81	[BUG]  [BUGGY]  while(trailer  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
82	[BUG]  [BUGGY]  while(currentByte  >=  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >=  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >=  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
83	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  -  1];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	final  byte  currentByte  =  trailer[end  -  1];	  continue;    final    byte    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
84	[BUG]  [BUGGY]  continue;  final  byte  currentByte  =  trailer[end  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  final  byte  currentByte  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  final  byte  currentByte  =  trailer[end  -  1];	  continue;    final    byte    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
85	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	final  byte  currentByte  =  buffer[start  -  1];	  continue;    final    byte    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
86	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  final  byte  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	final  byte  currentByte  =  buffer[end  -  1];	  continue;    final    byte    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
87	[BUG]  [BUGGY]  continue;  final  byte  currentByte  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  final  byte  currentByte  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  final  byte  currentByte  =  buffer[start  -  1];	  continue;    final    byte    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
88	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  1];  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	final  byte  currentByte  =  trailer[start  -  1];	  continue;    final    byte    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
89	[BUG]  [BUGGY]  while(trailer  <  length  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  length  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  length  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
90	[BUG]  [BUGGY]  while(currentByte  <  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
91	[BUG]  [BUGGY]  while(trailer  <  0  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  0  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  0  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
92	[BUG]  [BUGGY]  continue;  while(trailer  <  length  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(trailer  <  length  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(trailer  <  length  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
93	[BUG]  [BUGGY]  while(currentByte  <  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
94	[BUG]  [BUGGY]  while(trailer  <  length  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  length  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  length  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
95	[BUG]  [BUGGY]  while(start  <  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(start  <  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(start  <  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
96	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  ' "  +  getClass().getName()  + "' ");  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  ' "  +  getClass().getName()  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  ' "  +  getClass().getName()  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
97	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  trailer.getName()  + "' ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  trailer.getName()  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  trailer.getName()  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
98	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "' ",  currentByte);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "' ",  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "' ",  currentByte);	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
99	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "' ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
100	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "'. ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "'. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "'. ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
101	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  trailer  + "' ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  trailer  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  trailer  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
102	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  trailer  + "' ");  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  trailer  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  trailer  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    not    followed    by    '   "    +    currentByte    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
103	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "'. ");  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "'. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "'. ");	  throw    new    IllegalArgumentException(   "currentByte    not    followed    by    '   "    +    currentByte    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
104	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "' ",  trailer);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "' ",  trailer);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "' ",  trailer);	  throw    new    IllegalArgumentException(   "currentByte    not    followed    by    '   "    +    currentByte    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
105	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "' ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    not    followed    by    '   "    +    currentByte    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
106	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + ",' ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + ",' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  currentByte  + ",' ");	  throw    new    IllegalArgumentException(   "currentByte    not    followed    by    '   "    +    currentByte    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
107	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');	  continue;    result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
108	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  continue;    result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
109	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '9'?  currentByte  -  '0'  :  currentByte);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '9'?  currentByte  -  '0'  :  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  >  '9'?  currentByte  -  '0'  :  currentByte);	  continue;    result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
110	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  *  '0');  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  *  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  *  '0');	  continue;    result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
111	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  -  '0');  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(currentByte  <  <  3)+(currentByte  -  '0');	  continue;    result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
112	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  -  '0');  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  1)+(currentByte  -  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  1)+(currentByte  -  '0');	  continue;    result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
113	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
114	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "]. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "]. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "]. ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
115	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ",  currentByte);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ",  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ",  currentByte);	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
116	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getSize()  + "] ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getSize()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getSize()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
117	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getPosition()  + "] ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getPosition()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getPosition()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
118	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
119	[BUG]  [BUGGY]  while(currentByte  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
120	[BUG]  [BUGGY]  while(trailer  >=  start  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  start  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  start  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
121	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
122	[BUG]  [BUGGY]  while(start  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(start  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(start  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
123	[BUG]  [BUGGY]  while(trailer!=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer!=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer!=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
124	[BUG]  [BUGGY]  while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
125	[BUG]  [BUGGY]  while(currentByte  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
126	[BUG]  [BUGGY]  continue;  while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
127	[BUG]  [BUGGY]  while(trailer  <  0  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  0  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  0  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
128	[BUG]  [BUGGY]  while(start  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(start  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(start  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
129	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
130	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
131	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "], ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "], ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "], ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",   ");    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
132	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  trailer);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  trailer);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  trailer);	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",   ");    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
133	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte,   ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte,   ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte,   ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",   ");    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
134	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
135	[BUG]  [BUGGY]  while(currentByte  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
136	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
137	[BUG]  [BUGGY]  while(start  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(start  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(start  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
138	[BUG]  [BUGGY]  while(trailer!=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer!=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer!=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
139	[BUG]  [BUGGY]  while(end  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(end  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(end  >=  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
140	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  -  '0')+(currentByte  -  '7');  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  1)+(currentByte  -  '0')+(currentByte  -  '7');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  1)+(currentByte  -  '0')+(currentByte  -  '7');	  result    =(result    <    <    3)+(currentByte    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
141	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  -  '0')+(currentByte  -  '7');  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  -  '0')+(currentByte  -  '7');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(currentByte  <  <  3)+(currentByte  -  '0')+(currentByte  -  '7');	  result    =(result    <    <    3)+(currentByte    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
142	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >  '7'?  1  :  0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >  '7'?  1  :  0);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >  '7'?  1  :  0);	  result    =(result    <    <    3)+(currentByte    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
143	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >  '7'?  currentByte  :  '0');  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >  '7'?  currentByte  :  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >  '7'?  currentByte  :  '0');	  result    =(result    <    <    3)+(currentByte    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
144	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  +  '7');  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  +  '7');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  +  '7');	  result    =(result    <    <    3)+(currentByte    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
145	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  *  '7');  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  *  '7');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  *  '7');	  result    =(result    <    <    3)+(currentByte    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
146	[BUG]  [BUGGY]  result  =(result  -  3)+(currentByte  -  '0')+(currentByte  -  '7');  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  -  3)+(currentByte  -  '0')+(currentByte  -  '7');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  -  3)+(currentByte  -  '0')+(currentByte  -  '7');	  result    =(result    <    <    3)+(currentByte    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
147	[BUG]  [BUGGY]  currentByte  =  currentByte;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  currentByte  =  currentByte;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	currentByte  =  currentByte;	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    currentByte;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
148	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  trailer;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  trailer;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  trailer;	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    currentByte;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
149	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    currentByte;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
150	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '9')  {  currentByte  =  currentByte;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '9')  {  currentByte  =  currentByte;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '9')  {  currentByte  =  currentByte;	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    currentByte;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
151	[BUG]  [BUGGY]  while(currentByte  <  0  &&  currentByte  >  '7')  {  currentByte  =  currentByte;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  &&  currentByte  >  '7')  {  currentByte  =  currentByte;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  &&  currentByte  >  '7')  {  currentByte  =  currentByte;	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    currentByte;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
152	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[currentByte;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[currentByte;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[currentByte;	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    currentByte;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
153	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte  +  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte  +  1;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte  +  1;	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    currentByte;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
154	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
155	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  +   ") ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  +   ") ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  +   ") ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
156	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ",  currentByte);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ",  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ",  currentByte);	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
157	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  end  [ "  +  currentByte  + "] ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  end  [ "  +  currentByte  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  end  [ "  +  currentByte  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",    end    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
158	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  end  [ "  +  start  + "] ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  end  [ "  +  start  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  end  [ "  +  start  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",    end    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
159	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  end  [ "  +  currentByte  + "] ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  end  [ "  +  currentByte  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  end  [ "  +  currentByte  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",    end    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
160	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "], "  +  trailer  + "],  end  [ "  +  start  + "] ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "], "  +  trailer  + "],  end  [ "  +  start  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "], "  +  trailer  + "],  end  [ "  +  start  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",    end    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
161	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer),  currentByte);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer),  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer),  currentByte);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    trailer));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
162	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte,  trailer));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte,  trailer));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte,  trailer));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    trailer));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
163	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer,  currentByte));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer,  currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ".equals(trailer,  currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    trailer));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
164	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer,  currentByte));  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer,  currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer,  currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    trailer));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
165	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer,  length));  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer,  length));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer,  length));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    trailer));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
166	[BUG]  [BUGGY]  while(currentByte  <  length)  {  trailer  =  trailer[end  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  length)  {  trailer  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  length)  {  trailer  =  trailer[end  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
167	[BUG]  [BUGGY]  while(currentByte  <  length)  {  trailer  =  trailer[start  -  1];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  length)  {  trailer  =  trailer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  length)  {  trailer  =  trailer[start  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
168	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  trailer[end  -  1];  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  trailer[end  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  length)  {  trailer  =  trailer[end  -  1];  }	  continue;    while(currentByte    <    length)    {    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
169	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  trailer[start  -  1];  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  trailer[start  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  length)  {  trailer  =  trailer[start  -  1];  }	  continue;    while(currentByte    <    length)    {    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
170	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  trailer[start  -  1];  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  trailer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  length)  {  trailer  =  trailer[start  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
171	[BUG]  [BUGGY]  result  =(result  -  3)+(currentByte  -  '0');  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  -  3)+(currentByte  -  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  -  3)+(currentByte  -  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
172	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte));  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalStateException( " ".equals(currentByte));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
173	[BUG]  [BUGGY]  throw  new  IllegalStateException( "currentByte  can  not  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "currentByte  can  not  be  deprecated. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalStateException( "currentByte  can  not  be  deprecated. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
174	[BUG]  [BUGGY]  throw  new  IllegalStateException( "currentByte  is  null. ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "currentByte  is  null. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalStateException( "currentByte  is  null. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
175	[BUG]  [BUGGY]  throw  new  IllegalStateException( "currentByte  cannot  be  null. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "currentByte  cannot  be  null. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalStateException( "currentByte  cannot  be  null. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
176	[BUG]  [BUGGY]  throw  new  IllegalStateException( "currentByte  can  not  be  deprecated: "  +  currentByte);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "currentByte  can  not  be  deprecated: "  +  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalStateException( "currentByte  can  not  be  deprecated: "  +  currentByte);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
177	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte)+ ", ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte)+ ", ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte)+ ", ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)+   ",   ");    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
178	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte.equals(currentByte)+ ", ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte.equals(currentByte)+ ", ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte.equals(currentByte)+ ", ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)+   ",   ");    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
179	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  start  of  expression: "  +  currentByte  + ", ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  start  of  expression: "  +  currentByte  + ", ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Invalid  start  of  expression: "  +  currentByte  + ", ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)+   ",   ");    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
180	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte,  trailer);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte,  trailer);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte,  trailer);	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ",    currentByte);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
181	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.toString().equals(currentByte));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.toString().equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte.toString().equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
182	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.length().equals(currentByte));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.length().equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte.length().equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
183	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "' "  +  trailer.equals(currentByte));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "' "  +  trailer.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "' "  +  trailer.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
184	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte):  null;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte):  null;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte):  null;	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
185	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte):  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte):  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte):  new  IllegalArgumentException( " ");	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
186	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte): " ";  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte): " ";  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte): " ";	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
187	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte):  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte):  null;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte):  null;	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
188	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte):  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte):  1;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(length  >  0)?  exceptionMessage(buffer,  offset,  length,  start,  currentByte):  1;	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
189	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  final  byte  currentByte  =  buffer[start];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	final  byte  currentByte  =  buffer[start];	  continue;    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
190	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  final  byte  currentByte  =  trailer[start];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	final  byte  currentByte  =  trailer[start];	  continue;    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
191	[BUG]  [BUGGY]  continue;  final  byte  currentByte  =  trailer[start];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  final  byte  currentByte  =  trailer[start];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  final  byte  currentByte  =  trailer[start];	  continue;    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
192	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	final  byte  currentByte  =  buffer[start  +  1];	  continue;    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
193	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  final  byte  currentByte  =  buffer[end];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	final  byte  currentByte  =  buffer[end];	  continue;    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
194	[BUG]  [BUGGY]  final  byte  currentByte  =  container[start];  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  final  byte  currentByte  =  container[start];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	final  byte  currentByte  =  container[start];	  continue;    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
195	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[offset];  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  final  byte  currentByte  =  buffer[offset];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	final  byte  currentByte  =  buffer[offset];	  continue;    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
196	[BUG]  [BUGGY]  while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  empty  character  literal  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  empty  character  literal	38	None	replace
197	[BUG]  [BUGGY]  continue;  while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  empty  character  literal  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(trailer  <  length  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  empty  character  literal	38	None	replace
198	[BUG]  [BUGGY]  while(currentByte  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
199	[BUG]  [BUGGY]  while(start  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(start  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(start  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
200	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
201	[BUG]  [BUGGY]  while(end  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  empty  character  literal  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(end  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(end  <  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  empty  character  literal	38	None	replace
202	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.trim().equals(currentByte));  [CE]  byte  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.trim().equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer.trim().equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    trailer.equals(currentByte));    	non-compiled	[CE]  byte  cannot  be  dereferenced	9	None	replace
203	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.trailer.equals(currentByte));  [CE]  byte  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.trailer.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer.trailer.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    trailer.equals(currentByte));    	non-compiled	[CE]  byte  cannot  be  dereferenced	9	None	replace
204	[BUG]  [BUGGY]  while(currentByte  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  empty  character  literal  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte!='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  empty  character  literal	30	None	replace
205	[BUG]  [BUGGY]  while(trailer  >=  start  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  empty  character  literal  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  start  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  start  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte!='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  empty  character  literal	30	None	replace
206	[BUG]  [BUGGY]  while(trailer!=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  empty  character  literal  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer!=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer!=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte!='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  empty  character  literal	30	None	replace
207	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte!='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
208	[BUG]  [BUGGY]  while(start  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  empty  character  literal  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(start  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(start  >=  end  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte!='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  empty  character  literal	30	None	replace
209	[BUG]  [BUGGY]  while(currentByte  <  0  &&  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  &&  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  &&  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
210	[BUG]  [BUGGY]  while(trailer  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
211	[BUG]  [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  }	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  ')'  expected	3	None	replace
212	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  length));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  length));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  length));	  throw    new    IllegalArgumentException(   "   "    +   "currentByte    equals(currentByte));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
213	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte),  trailer);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte),  trailer);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte),  trailer);	  throw    new    IllegalArgumentException(   "   "    +   "currentByte    equals(currentByte));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
214	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  offset));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  offset));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  offset));	  throw    new    IllegalArgumentException(   "   "    +   "currentByte    equals(currentByte));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
215	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  0));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  0));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  0));	  throw    new    IllegalArgumentException(   "   "    +   "currentByte    equals(currentByte));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
216	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >  '7');  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >  '7');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >  '7');	  result    =(result    <    <    3)+(currentByte    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
217	[BUG]  [BUGGY]  result  =(result  -  start)+(currentByte  -  '0')+(currentByte  -  '7');  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  -  start)+(currentByte  -  '0')+(currentByte  -  '7');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  -  start)+(currentByte  -  '0')+(currentByte  -  '7');	  result    =(result    <    <    3)+(currentByte    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
218	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')/(currentByte  -  '7');  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')/(currentByte  -  '7');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0')/(currentByte  -  '7');	  result    =(result    <    <    3)+(currentByte    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
219	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >=  '7');  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >=  '7');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0')+(currentByte  >=  '7');	  result    =(result    <    <    3)+(currentByte    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
220	[BUG]  [BUGGY]  while(currentByte  >  0  &&  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >  0  &&  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >  0  &&  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
221	[BUG]  [BUGGY]  while(currentByte  >=  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >=  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >=  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
222	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage());  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  getMessage());	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    currentByte));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
223	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  buffer));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  buffer));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ".equals(currentByte,  buffer));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    currentByte));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
224	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  current  block: "  +  currentByte);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  current  block: "  +  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalStateException( "Failed  to  parse  current  block: "  +  currentByte);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
225	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
226	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
227	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '9')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '9')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  <  =  '9')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
228	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  <  '0')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  <  '0')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  <  '0')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
229	[BUG]  [BUGGY]  while(currentByte  >  0)  {  trailer  =  trailer[end  -  1];  [CE]  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >  0)  {  trailer  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >  0)  {  trailer  =  trailer[end  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  	41	None	replace
230	[BUG]  [BUGGY]  while(currentByte  <  =  length)  {  trailer  =  trailer[end  -  1];  [CE]  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  =  length)  {  trailer  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  =  length)  {  trailer  =  trailer[end  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  	41	None	replace
231	[BUG]  [BUGGY]  while(currentByte  >  0)  {  currentByte  =  buffer[end  -  1];  [CE]  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >  0)  {  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >  0)  {  currentByte  =  buffer[end  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  	32	None	replace
232	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + ",' ");  [CE]  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + ",' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + ",' ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  	23	None	replace
233	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  buffer  ' "  +  getClass().getName()  + "' ");  [CE]  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  buffer  ' "  +  getClass().getName()  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  buffer  ' "  +  getClass().getName()  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  	23	None	replace
234	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "': ");  [CE]  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "': ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "': ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  	23	None	replace
235	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "',  but  was  expecting  ' "+currentByte  + "' ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "',  but  was  expecting  ' "+currentByte  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  getClass().getName()  + "',  but  was  expecting  ' "+currentByte  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
236	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer)+ ", ");  [CE]  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer)+ ", ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ".equals(currentByte,  trailer)+ ", ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    trailer));    	non-compiled	[CE]  	12	None	replace
237	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  expected  ' "  +  currentByte  + "'] ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  expected  ' "  +  currentByte  + "'] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  expected  ' "  +  currentByte  + "'] ");	  Throwables.throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
238	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  start  + "] ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  start  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  start  + "] ");	  Throwables.throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
239	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  currentByte  + "] ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  currentByte  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  currentByte  + "] ");	  Throwables.throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
240	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.getLength()  +  trailer.equals(currentByte));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.getLength()  +  trailer.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte.getLength()  +  trailer.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(trailer));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
241	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.getMean());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.getMean());  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte.getMean());	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(trailer));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
242	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.substring(start,  currentByte));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.substring(start,  currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte.substring(start,  currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(trailer));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
243	[BUG]  [BUGGY]  while(trailer  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '9')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
244	[BUG]  [BUGGY]  while(currentByte  >=  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >=  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >=  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '9')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
245	[BUG]  [BUGGY]  while(trailer  <  start  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  start  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  start  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
246	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
247	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
248	[BUG]  [BUGGY]  result  =(result  -  start)+(currentByte  -  '0');  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  -  start)+(currentByte  -  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  -  start)+(currentByte  -  '0');	  continue;    result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
249	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+  1;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0')+  1;	  continue;    result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
250	[BUG]  [BUGGY]  continue;  final  byte  currentByte  =  buffer[end  -  1]  +  trailer;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  final  byte  currentByte  =  buffer[end  -  1]  +  trailer;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  final  byte  currentByte  =  buffer[end  -  1]  +  trailer;	  continue;    final    byte    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
251	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ",  end] ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ",  end] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ",  end] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
252	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ", ");  [CE]  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ", ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ", ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getName()    +   "]   ");    	non-compiled	[CE]  	13	None	replace
253	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(start);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(start);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ").printStackTrace(start);	  throw    new    IllegalArgumentException(   "   ").equals(currentByte);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
254	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").println(currentByte);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").println(currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ").println(currentByte);	  throw    new    IllegalArgumentException(   "   ").equals(currentByte);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
255	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(result);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(result);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ").printStackTrace(result);	  throw    new    IllegalArgumentException(   "   ").equals(currentByte);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
256	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", "  +  start  + "],  end  [ "  +  currentByte  + "] ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", "  +  start  + "],  end  [ "  +  currentByte  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", "  +  start  + "],  end  [ "  +  currentByte  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",    end    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
257	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "], "  +  start  + "],  end  [ "  +  currentByte  + "] ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "], "  +  start  + "],  end  [ "  +  currentByte  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "], "  +  start  + "],  end  [ "  +  currentByte  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",    end    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
258	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ",  currentByte);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ",  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ",  currentByte);	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ",    currentByte);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
259	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  start);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  start);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  start);	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ",    currentByte);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
260	[BUG]  [BUGGY]  continue;  final  byte  currentByte  =  buffer[start  +  1];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  final  byte  currentByte  =  buffer[start  +  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  final  byte  currentByte  =  buffer[start  +  1];	  continue;    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
261	[BUG]  [BUGGY]  continue;  final  byte  currentByte  =  buffer[end];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  final  byte  currentByte  =  buffer[end];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  final  byte  currentByte  =  buffer[end];	  continue;    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
262	[BUG]  [BUGGY]  continue;  final  byte  currentByte  =  buffer[offset];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  final  byte  currentByte  =  buffer[offset];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  final  byte  currentByte  =  buffer[offset];	  continue;    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
263	[BUG]  [BUGGY]  while(currentByte  <  =  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  =  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  =  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    currentByte;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
264	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '1')  {  currentByte  =  currentByte;  [CE]  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '1')  {  currentByte  =  currentByte;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '1')  {  currentByte  =  currentByte;	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    currentByte;    	non-compiled	[CE]  	8	None	replace
265	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  not  followed  by  ' "  +  currentByte  + "' ");  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Byte  not  followed  by  ' "  +  currentByte  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Byte  not  followed  by  ' "  +  currentByte  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    not    followed    by    '   "    +    currentByte    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
266	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  start  + "' ");  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  start  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  not  followed  by  ' "  +  start  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    not    followed    by    '   "    +    currentByte    +   "'   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
267	[BUG]  [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(currentByte  <  length)  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(currentByte  <  length)  {  trailer  =  buffer[start  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
268	[BUG]  [BUGGY]  while(currentByte  <  end)  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  end)  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  end)  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
269	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",] ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
270	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  this.trailer.getClass().getName()  + "] ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  this.trailer.getClass().getName()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  this.trailer.getClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
271	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",  end] ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",  end] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",  end] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
272	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "' "  +  currentByte.equals(currentByte));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "' "  +  currentByte.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "' "  +  currentByte.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
273	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.length.equals(currentByte));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.length.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte.length.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
274	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + ", ");  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + ", ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + ", ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
275	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ",  currentByte);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ",  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ",  currentByte);	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
276	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "],  trailer  must  be  in  the  range  [ "  +  currentByte  + "] ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "],  trailer  must  be  in  the  range  [ "  +  currentByte  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "],  trailer  must  be  in  the  range  [ "  +  currentByte  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
277	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte  + ": "  +  currentByte);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte  + ": "  +  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  currentByte  + ": "  +  currentByte);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte),    currentByte);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
278	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "' "  +  currentByte  + "'  has  wrong  arguments. ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "' "  +  currentByte  + "'  has  wrong  arguments. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "' "  +  currentByte  + "'  has  wrong  arguments. ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte),    currentByte);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
279	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "' "  +  currentByte  + "'  is  not  supported. ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "' "  +  currentByte  + "'  is  not  supported. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "' "  +  currentByte  + "'  is  not  supported. ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte),    currentByte);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
280	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "' "  +  currentByte  + "'  is  not  a  string  value. ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "' "  +  currentByte  + "'  is  not  a  string  value. ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "' "  +  currentByte  + "'  is  not  a  string  value. ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte),    currentByte);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
281	[BUG]  [BUGGY]  continue  null;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue  null;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue  null;	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
282	[BUG]  [BUGGY]  continue  NUMBER_BYTE;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue  NUMBER_BYTE;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue  NUMBER_BYTE;	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
283	[BUG]  [BUGGY]  continue  NUMBER_INT;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue  NUMBER_INT;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue  NUMBER_INT;	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
284	[BUG]  [BUGGY]  continue  LAST_VALID;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue  LAST_VALID;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue  LAST_VALID;	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
285	[BUG]  [BUGGY]  continue  NUMBER_TRY;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue  NUMBER_TRY;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue  NUMBER_TRY;	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
286	[BUG]  [BUGGY]  continue  NUMBER_INTEGER;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue  NUMBER_INTEGER;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue  NUMBER_INTEGER;	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
287	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "' "  +  currentByte  + "',' ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "' "  +  currentByte  + "',' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "' "  +  currentByte  + "',' ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)+   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
288	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  currentByte  + ",' ");  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  currentByte  + ",' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  offset  ' "  +  currentByte  + ",' ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)+   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
289	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  start  of  expression: "  +  currentByte  + ",  expected  length: "  +  length);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  start  of  expression: "  +  currentByte  + ",  expected  length: "  +  length);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Invalid  start  of  expression: "  +  currentByte  + ",  expected  length: "  +  length);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)+   ",   ");    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
290	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  '0';  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  '0';  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  '0';	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
291	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte);	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
292	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  currentByte,  '0');  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  currentByte,  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =  exceptionMessage(buffer,  offset,  length,  currentByte,  '0');	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
293	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte));	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
294	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  currentByte,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  currentByte,  0);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =  exceptionMessage(buffer,  offset,  length,  currentByte,  0);	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
295	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '1')  {  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '1')  {  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '1')  {  currentByte  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
296	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
297	[BUG]  [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(trailer  <  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
298	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
299	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
300	[BUG]  [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(trailer  <  end  &&  currentByte  >=  '.')  {  trailer  =  buffer[end  -  1];  }	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
301	[BUG]  [BUGGY]  continue;  while(trailer  >=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(trailer  >=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(trailer  >=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte!='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
302	[BUG]  [BUGGY]  while(trailer!=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer!=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer!=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte!='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
303	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
304	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
305	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '9')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '9')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  <  =  '9')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
306	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  <  '0')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  <  '0')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  <  '0')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
307	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte!=  '.')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
308	[BUG]  [BUGGY]  continue;  while(trailer  >=  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(trailer  >=  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(trailer  >=  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
309	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  start));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  start));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  start));	  throw    new    IllegalArgumentException(   "   "    +   "currentByte    equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
310	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte)+ ", ");  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte)+ ", ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte)+ ", ");	  throw    new    IllegalArgumentException(   "   "    +   "currentByte    equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
311	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  end));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  end));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte,  end));	  throw    new    IllegalArgumentException(   "   "    +   "currentByte    equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
312	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte)+ "  - ");  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte)+ "  - ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte)+ "  - ");	  throw    new    IllegalArgumentException(   "   "    +   "currentByte    equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
313	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  this.trailer.equals(currentByte));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  this.trailer.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  this.trailer.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    trailer.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
314	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  Trailer.equals(currentByte));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  Trailer.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  Trailer.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    trailer.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
315	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  TrailerUtils.equals(currentByte));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  TrailerUtils.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  TrailerUtils.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    trailer.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
316	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + ", ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + ", ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + ", ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    loadClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
317	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  expected  ' "  +  currentByte  + "'] ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  expected  ' "  +  currentByte  + "'] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  expected  ' "  +  currentByte  + "'] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    loadClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
318	[BUG]  [BUGGY]  allowNull(currentByte);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  allowNull(currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	allowNull(currentByte);	  continue;    if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
319	[BUG]  [BUGGY]  allowNonEscapedChar(start)  {  continue;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  allowNonEscapedChar(start)  {  continue;  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	allowNonEscapedChar(start)  {  continue;	  continue;    if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
320	[BUG]  [BUGGY]  allowNegatives(false);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  allowNegatives(false);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	allowNegatives(false);	  continue;    if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
321	[BUG]  [BUGGY]  allowNonEscapedChar(start)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  allowNonEscapedChar(start)  {  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	allowNonEscapedChar(start)  {	  continue;    if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
322	[BUG]  [BUGGY]  allowNegatives(false)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  allowNegatives(false)  {  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	allowNegatives(false)  {	  continue;    if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
323	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
324	[BUG]  [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  continue;  while(trailer  <  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	continue;  while(trailer  <  end  &&  currentByte  ==  '.')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
325	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte  <  =  '0')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
326	[BUG]  [BUGGY]  while(currentByte  <  end)  {  currentByte  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  end)  {  currentByte  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  end)  {  currentByte  =  buffer[start  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
327	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "CurrentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "CurrentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "CurrentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
328	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
329	[BUG]  [BUGGY]  while(currentByte  >  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '9')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
330	[BUG]  [BUGGY]  while(currentByte  <  =  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  =  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  =  0  ||  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '9')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
331	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte!=  '-')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte!=  '-')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte!=  '-')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte!='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
332	[BUG]  [BUGGY]  while(trailer  >=  0  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  0  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  0  &&  currentByte!=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte!='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
333	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte!=  ',')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte!=  ',')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte!=  ',')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte!='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
334	[BUG]  [BUGGY]  result;  final  byte  currentByte  =  buffer[start];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result;  final  byte  currentByte  =  buffer[start];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result;  final  byte  currentByte  =  buffer[start];	  continue;    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
335	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ",  currentByte);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ",  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ",  currentByte);	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ",    currentByte);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
336	[BUG]  [BUGGY]  if(currentByte  <  0)  {  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(currentByte  <  0)  {  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(currentByte  <  0)  {  while(currentByte  <  0  ||  currentByte  >  '7')  {  currentByte  =  currentByte;  }	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    currentByte;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
337	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
338	[BUG]  [BUGGY]  while(trailer  >  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
339	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  container.equals(currentByte));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  container.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  container.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
340	[BUG]  [BUGGY]  result;  final  byte  currentByte  =  trailer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result;  final  byte  currentByte  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result;  final  byte  currentByte  =  trailer[end  -  1];	  continue;    final    byte    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
341	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  trailer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  trailer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
342	[BUG]  [BUGGY]  while(currentByte  >  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >  0  ||  currentByte  >  '7')  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
343	[BUG]  [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  trailer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  trailer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  0  ||  currentByte  >  '7')  {  trailer  =  trailer[start  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
344	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0',  currentByte);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0',  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0',  currentByte);	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
345	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0'  +  trailer);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0'  +  trailer);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0'  +  trailer);	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
346	[BUG]  [BUGGY]  result  =(result  <  <  4)+(currentByte  -  '0');  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  4)+(currentByte  -  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  4)+(currentByte  -  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
347	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  <  <  1)+(currentByte  -  '0');  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(length  <  <  1)+(currentByte  -  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(length  <  <  1)+(currentByte  -  '0');	  continue;    if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
348	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0'));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0'));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(currentByte  -  '0'));	  continue;    if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
349	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  <  <  1)?  1  :  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  3)+(length  <  <  1)?  1  :  0);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  3)+(length  <  <  1)?  1  :  0);	  continue;    if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
350	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  not  followed  by  ' "  +  trailer  + "' ");  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Byte  not  followed  by  ' "  +  trailer  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Byte  not  followed  by  ' "  +  trailer  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    not    followed    by    '   "    +    currentByte    +   "'   ");    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
351	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Current  block  not  followed  by  ' "  +  currentByte  + "' ");  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Current  block  not  followed  by  ' "  +  currentByte  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Current  block  not  followed  by  ' "  +  currentByte  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    not    followed    by    '   "    +    currentByte    +   "'   ");    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
352	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.equals(currentByte));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(trailer));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
353	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer: "  +  trailer.equals(currentByte));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer: "  +  trailer.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Unexpected  length  of  trailer: "  +  trailer.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(trailer));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
354	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Can  not  instantiate  trailer: "  +  trailer.equals(currentByte));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Can  not  instantiate  trailer: "  +  trailer.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Can  not  instantiate  trailer: "  +  trailer.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(trailer));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
355	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer.equals(currentByte));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer.equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer.equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(trailer));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
356	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte.getClass().getName()  + "] ");  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte.getClass().getName()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte.getClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "   "    +    currentByte.equals(trailer));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
357	[BUG]  [BUGGY]  while(trailer  <  =  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  =  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  =  end  &&  currentByte  ==  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
358	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
359	[BUG]  [BUGGY]  while(currentByte  >  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >  0  ||  currentByte  >  '7')  {  trailer  =  buffer[start  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
360	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.toString());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.toString());  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer.toString());	  throw    new    IllegalArgumentException(   "   "    +    trailer.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
361	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.name().equals(currentByte));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.name().equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer.name().equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    trailer.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
362	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.substring(start,  currentByte));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.substring(start,  currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer.substring(start,  currentByte));	  throw    new    IllegalArgumentException(   "   "    +    trailer.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
363	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.substring(start,  currentByte).equals(currentByte));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.substring(start,  currentByte).equals(currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer.substring(start,  currentByte).equals(currentByte));	  throw    new    IllegalArgumentException(   "   "    +    trailer.equals(currentByte));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
364	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  cannot  be  in  the  range  [ "  +  currentByte  + "] ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  cannot  be  in  the  range  [ "  +  currentByte  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  cannot  be  in  the  range  [ "  +  currentByte  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    loadClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
365	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Current  block  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Current  block  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Current  block  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    loadClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
366	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  cannot  be  in  the  range  [ "  +  trailer  + "] ");  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  cannot  be  in  the  range  [ "  +  trailer  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  cannot  be  in  the  range  [ "  +  trailer  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    loadClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
367	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  cannot  be  in  the  range  [ "  +  buffer.length  + "] ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  cannot  be  in  the  range  [ "  +  buffer.length  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + "],  cannot  be  in  the  range  [ "  +  buffer.length  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    loadClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
368	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  output  ' "  +  getClass().getName()  + "' ");  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  output  ' "  +  getClass().getName()  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  output  ' "  +  getClass().getName()  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
369	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  exception  ' "  +  getClass().getName()  + "' ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  exception  ' "  +  getClass().getName()  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  exception  ' "  +  getClass().getName()  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
370	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  block  ' "  +  getClass().getName()  + "' ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  does  not  support  block  ' "  +  getClass().getName()  + "' ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  does  not  support  block  ' "  +  getClass().getName()  + "' ");	  throw    new    IllegalArgumentException(   "currentByte    does    not    support    offset    '   "    +    getClass().getName()    +   "'   ");    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
371	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + ") ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + ") ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loadClass().getName()  + ") ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
372	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ") ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ") ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ") ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
373	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Current  block  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Current  block  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "Current  block  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
374	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
375	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ",  start] ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ",  start] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getName()  + ",  start] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
376	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
377	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",  bounds  [ "  +  start  + "] ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",  bounds  [ "  +  start  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + ",  bounds  [ "  +  start  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer.getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
378	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9')  {  continue;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9')  {  continue;  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(currentByte  <  '0'  ||  currentByte  >  '9')  {  continue;  }	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
379	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  continue;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  continue;  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(currentByte  <  '0'  ||  currentByte  >  '7')  {  continue;  }	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
380	[BUG]  [BUGGY]  if(trailer  ==  0)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(trailer  ==  0)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(trailer  ==  0)  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  continue;    continue;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
381	[BUG]  [BUGGY]  if(trailer  ==  0  ||  currentByte  ==  '.')  {  continue;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(trailer  ==  0  ||  currentByte  ==  '.')  {  continue;  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(trailer  ==  0  ||  currentByte  ==  '.')  {  continue;  }	  continue;    continue;    	non-compiled	[CE]  ';'  expected	1	None	replace
382	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '8')  {  continue;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '8')  {  continue;  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(currentByte  <  '0'  ||  currentByte  >  '8')  {  continue;  }	  continue;    continue;    	non-compiled	[CE]  ';'  expected	1	None	replace
383	[BUG]  [BUGGY]  if(trailer  ==''  ||  currentByte  ==  '-')  {  continue;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  if(trailer  ==''  ||  currentByte  ==  '-')  {  continue;  }  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	if(trailer  ==''  ||  currentByte  ==  '-')  {  continue;  }	  continue;    continue;    	non-compiled	[CE]  ';'  expected	1	None	replace
384	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "],  trailer  [ "  +  currentByte  + "] ");  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "],  trailer  [ "  +  currentByte  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  start  + "],  trailer  [ "  +  currentByte  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    start    +   "]   ");    	non-compiled	[CE]  ';'  expected	43	None	replace
385	[BUG]  [BUGGY]  while(trailer  <  =  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  =  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  =  end  &&  currentByte  ==  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  ';'  expected	38	None	replace
386	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte!=  '')  {  trailer  =  buffer[start  -  1];  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte!=  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte!=  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  ';'  expected	38	None	replace
387	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[start  -  1];  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    <    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  ';'  expected	38	None	replace
388	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));  [CE]  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
389	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  null));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  null));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  null));	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
390	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  '0'));  [CE]  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  '0'));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  '0'));	  continue;    if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
391	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte)+ ", ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte)+ ", ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ").equals(currentByte)+ ", ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)+   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
392	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte,  trailer));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte,  trailer));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ").equals(currentByte,  trailer));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    currentByte));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
393	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte,  currentByte));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte,  currentByte));  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ").equals(currentByte,  currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte,    currentByte));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
394	[BUG]  [BUGGY]  while(currentByte  <  =  length)  {  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  =  length)  {  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  =  length)  {  currentByte  =  buffer[end  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
395	[BUG]  [BUGGY]  while(currentByte  >  0)  {  currentByte  =  buffer[start  -  1];  [CE]  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >  0)  {  currentByte  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >  0)  {  currentByte  =  buffer[start  -  1];	  continue;    while(currentByte    <    length)    {    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  	31	None	replace
396	[BUG]  [BUGGY]  while(currentByte  <  =  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  =  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  =  0  ||  currentByte  >  '7')  {  currentByte  =  buffer[end  -  1];	  continue;    while(currentByte    <    0    ||    currentByte    >    '7')    {    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
397	[BUG]  [BUGGY]  result  =(result  <  <  7)+(currentByte  -  '0');  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  result  =(result  <  <  7)+(currentByte  -  '0');  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	result  =(result  <  <  7)+(currentByte  -  '0');	  continue;    result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
398	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", "  +  start  + "] ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", "  +  start  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ", "  +  start  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",    end    [   "    +    start    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
399	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loader  + "] ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loader  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  loader  + "] ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    trailer    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
400	[BUG]  [BUGGY]  while(currentByte  >  0)  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  >  0)  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  >  0)  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
401	[BUG]  [BUGGY]  while(currentByte  <  =  length)  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  =  length)  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  =  length)  {  trailer  =  buffer[end  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
402	[BUG]  [BUGGY]  while(currentByte  <  end)  {  trailer  =  trailer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(currentByte  <  end)  {  trailer  =  trailer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(currentByte  <  end)  {  trailer  =  trailer[end  -  1];	  continue;    while(currentByte    <    length)    {    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
403	[BUG]  [BUGGY]  while(trailer  <  =  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  =  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  =  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
404	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
405	[BUG]  [BUGGY]  while(trailer  <  end  &&  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  end  &&  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  end  &&  currentByte  >  '9')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
406	[BUG]  [BUGGY]  while(trailer  <  start  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  <  start  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  <  start  &&  currentByte  >=  '')  {  trailer  =  buffer[end  -  1];	  continue;    while(trailer    <    end    &&    currentByte    >='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
407	[BUG]  [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  while(trailer  >=  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[start  -  1];  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	while(trailer  >=  end  &&  currentByte  <  =  '')  {  trailer  =  buffer[start  -  1];	  continue;    while(trailer    >=    end    &&    currentByte    =='')    {    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
408	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer  + ", ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer  + ", ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  trailer  + ", ");	  throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
409	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer,  currentByte);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer,  currentByte);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " "  +  trailer,  currentByte);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte),    currentByte);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
410	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte),  trailer);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte),  trailer);  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalArgumentException( " ".equals(currentByte),  trailer);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte),    currentByte);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
411	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  expecting  a  value ");  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  expecting  a  value ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	Throwables.throw  new  IllegalArgumentException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  expecting  a  value ");	  Throwables.throw    new    IllegalArgumentException(   "currentByte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
412	[BUG]  [BUGGY]  throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
413	[BUG]  [BUGGY]  throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ");  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  start  + "] ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
414	[BUG]  [BUGGY]  throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  currentByte  + "] ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  currentByte  + "] ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  currentByte  + "] ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
415	[BUG]  [BUGGY]  throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [BUGGY]      }  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	136	136	2	replace	throw  new  IllegalStateException( "currentByte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
