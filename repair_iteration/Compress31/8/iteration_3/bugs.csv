bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  -  1)?  0L  :  buffer[offset  +  1];	  long    result    =(length    -    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
2	[BUG]  [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  -  1)?  0L  :  buffer[start];	  long    result    =(length    -    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
3	[BUG]  [BUGGY]  int  result  =(length  -  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  -  1)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  -  1)?  0L  :  buffer[offset];	  long    result    =(length    -    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
4	[BUG]  [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  -  1)?  0L  :  buffer[offset  +  length];	  long    result    =(length    -    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
5	[BUG]  [BUGGY]  long  result  =(length  -  1)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  -  1)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  -  1)?  1L  :  buffer[offset];	  long    result    =(length    -    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
6	[BUG]  [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[offset],  length;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[offset],  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  -  1)?  0L  :  buffer[offset],  length;	  long    result    =(length    -    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
7	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  /  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  length;	  long    result    =    System.currentTimeMillis()    -    length;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
8	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis()  -  length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  System.currentTimeMillis()  -  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis()  -  length;	  long    result    =    System.currentTimeMillis()    -    length;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
9	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  *  length;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  *  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  *  length;	  long    result    =    System.currentTimeMillis()    -    length;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
10	[BUG]  [BUGGY]  long  result  =  length  -  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  length  -  System.currentTimeMillis();  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  length  -  System.currentTimeMillis();	  long    result    =    System.currentTimeMillis()    -    length;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
11	[BUG]  [BUGGY]  int  result  =(length  -  1)?  0L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  -  1)?  0L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  -  1)?  0L  :  buffer.length;	  int    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer.length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  0L  :  buffer.length  +  1;	  int    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer.length  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  0L  :  buffer.length  +  length;	  int    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  0L  :  buffer[start];	  int    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  int  result  =(offset  <  <  1)?  0L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  <  <  1)?  0L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  <  <  1)?  0L  :  buffer.length;	  int    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length];	  int    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  buffer[offset  +  offset];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
18	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  1L  :  buffer[offset  +  length];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
19	[BUG]  [BUGGY]  int  result  =(offset  <  0)?  -1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  <  0)?  -1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  <  0)?  -1L  :  buffer[offset  +  length];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
20	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  offset];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  offset];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
21	[BUG]  [BUGGY]  long  result  =(end  <  0)?  -1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(end  <  0)?  -1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(end  <  0)?  -1L  :  buffer[offset  +  length];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
22	[BUG]  [BUGGY]  result  =(length  >  0)?  buffer[start]  :  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  buffer[start]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  buffer[start]  :  0;	  result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
23	[BUG]  [BUGGY]  result  =(length  <  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  buffer[offset]  :  0;	  result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
24	[BUG]  [BUGGY]  result  =(length  >  0)?  buffer[offset  +  1]  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  buffer[offset  +  1]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  buffer[offset  +  1]  :  0;	  result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
25	[BUG]  [BUGGY]  result  =(length  >  0)?  buffer[offset  +  length]  :  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  buffer[offset  +  length]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  buffer[offset  +  length]  :  0;	  result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
26	[BUG]  [BUGGY]  result  =(offset  >  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(offset  >  0)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(offset  >  0)?  buffer[offset]  :  0;	  result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
27	[BUG]  [BUGGY]  result  =(length  <  2)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  buffer[offset]  :  0;	  result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
28	[BUG]  [BUGGY]  result  =(length  <  1)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  buffer[offset]  :  0;	  result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
29	[BUG]  [BUGGY]  result  =(length  ==  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  ==  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  ==  0)?  0L  :  buffer[start];	  result    =(length    <    =    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
30	[BUG]  [BUGGY]  result  =(length  >=  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >=  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >=  0)?  0L  :  buffer[start];	  result    =(length    <    =    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
31	[BUG]  [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];	  result    =(length    <    =    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
32	[BUG]  [BUGGY]  result  =(length  <  1)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  0L  :  buffer[start];	  result    =(length    <    =    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
33	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis()  *  offset;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  System.currentTimeMillis()  *  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis()  *  offset;	  long    result    =    System.currentTimeMillis()    *    offset;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
34	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  *  buffer.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  *  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  *  buffer.length;	  long    result    =    System.currentTimeMillis()    *    offset;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
35	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  *  offset  +  length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  *  offset  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  *  offset  +  length;	  long    result    =    System.currentTimeMillis()    *    offset;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
36	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  *  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  *  BYTE_MASK;	  long    result    =    System.currentTimeMillis()    *    offset;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
37	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  +  length  -  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  +  length  -  1;	  long    result    =    System.currentTimeMillis()    +    length;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
38	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  +  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  +  buffer.length;	  long    result    =    System.currentTimeMillis()    +    length;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
39	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  +  length  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  +  length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  +  length  +  1;	  long    result    =    System.currentTimeMillis()    +    length;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
40	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  [Delete]  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	[Delete]	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
41	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSurrogate(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtExceptionHandler.throwAsSurrogate(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtExceptionHandler.throwAsSurrogate(buffer,  offset,  length);	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
42	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
43	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtExceptionHandler.throwAsIgnoredException( " ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
44	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSlot(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtExceptionHandler.throwAsSlot(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtExceptionHandler.throwAsSlot(buffer,  offset,  length);	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
45	[BUG]  [BUGGY]  allowNull(buffer);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  allowNull(buffer);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	allowNull(buffer);	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
46	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSortedException( " ");  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtExceptionHandler.throwAsSortedException( " ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtExceptionHandler.throwAsSortedException( " ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
47	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  1]  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  1]  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  1]  +  1;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start  +  1]  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start  +  1]  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[start  +  1]  +  1;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer.length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  -  1)?  0L  :  buffer.length  +  1;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length  +  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length  +  1];	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer.length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  1L  :  buffer.length  +  1;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  buffer[offset];	  result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
53	[BUG]  [BUGGY]  result  =(offset  <  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(offset  <  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(offset  <  0)?  0L  :  buffer[offset];	  result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
54	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[offset  +  1];	  result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
55	[BUG]  [BUGGY]  long  result  =  0L  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  +  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  buffer.length;	  long    result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  long  result  =  0L  +  length  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  +  length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  length  +  1;	  long    result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
57	[BUG]  [BUGGY]  long  result  =  offset  +  length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  offset  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  offset  +  length;	  long    result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  long  result  =  0L  +  offset;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  +  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  offset;	  long    result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  int  result  =  0L  +  length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  0L  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  0L  +  length;	  long    result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  long  result  =  0L  +  length  +  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  +  length  +  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  length  +  2;	  long    result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  length  +  1;	  long    result    =    System.currentTimeMillis()    -    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
62	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  -  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  length  -  1;	  long    result    =    System.currentTimeMillis()    -    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
63	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  *  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  *  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  length  *  2;	  long    result    =    System.currentTimeMillis()    -    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
64	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  +  offset  +  length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  +  offset  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  +  offset  +  length;	  long    result    =    System.currentTimeMillis()    -    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
65	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  offset  +  length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  /  offset  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  offset  +  length;	  long    result    =    System.currentTimeMillis()    -    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
66	[BUG]  [BUGGY]  result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  1;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    1;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
67	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  1L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  1L;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    1;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
68	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  1;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    1;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
69	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  +  1):  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  +  1):  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length  +  1):  1;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    1;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
70	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  2;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  2;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    1;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
71	[BUG]  [BUGGY]  result  =(length  <  1)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  0L  :  buffer[offset  +  1];	  result    =(length    <    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
72	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[start  +  length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  buffer[start  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[start  +  length];	  result    =(length    <    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
73	[BUG]  [BUGGY]  result  =(length  <  1)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  0L  :  buffer[offset  +  length];	  result    =(length    <    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
74	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length  +  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[offset  +  length  +  1];	  result    =(length    <    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
75	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  buffer.length  +  1;	  long    result    =    System.currentTimeMillis()    -    offset    +    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
76	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  2;	  long    result    =    System.currentTimeMillis()    -    offset    +    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
77	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  1L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  1L;	  long    result    =    System.currentTimeMillis()    -    offset    +    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
78	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  offset  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  /  offset  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  offset  +  1;	  long    result    =    System.currentTimeMillis()    -    offset    +    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
79	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  *  offset  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  *  offset  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  *  offset  +  1;	  long    result    =    System.currentTimeMillis()    -    offset    +    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
80	[BUG]  [BUGGY]  long  result  =(length  <  0)?  buffer[offset  +  length  -  1]  :  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  buffer[offset  +  length  -  1]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  buffer[offset  +  length  -  1]  :  0;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
81	[BUG]  [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  -  2]  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  -  2]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  buffer[offset  +  length  -  2]  :  0;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
82	[BUG]  [BUGGY]  int  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
83	[BUG]  [BUGGY]  long  result  =(length  >  1)?  buffer[offset  +  length  -  1]  :  0;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  1)?  buffer[offset  +  length  -  1]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  1)?  buffer[offset  +  length  -  1]  :  0;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
84	[BUG]  [BUGGY]  long  result  =(length  <  1)?  buffer[offset  +  length  -  1]  :  0;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1)?  buffer[offset  +  length  -  1]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  buffer[offset  +  length  -  1]  :  0;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
85	[BUG]  [BUGGY]  long  result  =(length  <  <  3)?  0L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  3)?  0L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  3)?  0L  :  buffer.length;	  long    result    =(length    <    <    2)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
86	[BUG]  [BUGGY]  int  result  =(length  <  <  2)?  0L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  2)?  0L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  2)?  0L  :  buffer.length;	  long    result    =(length    <    <    2)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
87	[BUG]  [BUGGY]  long  result  =(length  <  <  6)?  0L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  6)?  0L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  6)?  0L  :  buffer.length;	  long    result    =(length    <    <    2)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
88	[BUG]  [BUGGY]  long  result  =(length  <  <  4)?  0L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  4)?  0L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  4)?  0L  :  buffer.length;	  long    result    =(length    <    <    2)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
89	[BUG]  [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer.length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  2)?  0L  :  buffer.length  +  1;	  long    result    =(length    <    <    2)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
90	[BUG]  [BUGGY]  result  =(length  <  1)?  1L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  1L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  1L  :  BYTE_MASK;	  result    =(length    >    0)?    1L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
91	[BUG]  [BUGGY]  result  =(length  >  1)?  1L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  1)?  1L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  1)?  1L  :  BYTE_MASK;	  result    =(length    >    0)?    1L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
92	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  1L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  :  buffer.length;	  result    =(length    >    0)?    1L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
93	[BUG]  [BUGGY]  result  =(length  <  0)?  1L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  1L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  1L  :  BYTE_MASK;	  result    =(length    >    0)?    1L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
94	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  :  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  1L  :  BYTE_MASK  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  :  BYTE_MASK  +  1;	  result    =(length    >    0)?    1L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
95	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  buffer[start];	  result    =(length    <    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
96	[BUG]  [BUGGY]  long  result  =  0L  /  BYTE_MASK  +  length;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  /  BYTE_MASK  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  /  BYTE_MASK  +  length;	  long    result    =    0L    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
97	[BUG]  [BUGGY]  long  result  =  0L  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  *  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  *  BYTE_MASK;	  long    result    =    0L    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
98	[BUG]  [BUGGY]  long  result  =  0L  /  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  /  BYTE_MASK  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  /  BYTE_MASK  +  1;	  long    result    =    0L    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
99	[BUG]  [BUGGY]  long  result  =  0L  /  length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  /  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  /  length;	  long    result    =    0L    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
100	[BUG]  [BUGGY]  int  result  =  0L  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  0L  /  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  0L  /  BYTE_MASK;	  long    result    =    0L    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
101	[BUG]  [BUGGY]  long  result  =  offset  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  offset  /  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  offset  /  BYTE_MASK;	  long    result    =    0L    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
102	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  start;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  /  start;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  start;	  long    result    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
103	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  start  +  length;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  start  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  start  +  length;	  long    result    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
104	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  start  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  start  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  start  +  1;	  long    result    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
105	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  *  start;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  *  start;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  *  start;	  long    result    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
106	[BUG]  [BUGGY]  int  result  =(length  >=  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  >=  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >=  0)?  0L  :  buffer[offset];	  long    result    =(length    >=    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
107	[BUG]  [BUGGY]  long  result  =(length  >=  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >=  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >=  0)?  0L  :  buffer[start];	  long    result    =(length    >=    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
108	[BUG]  [BUGGY]  long  result  =(length  <  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  0L  :  buffer[start];	  long    result    =(length    >=    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
109	[BUG]  [BUGGY]  long  result  =(length  <  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  0L  :  buffer[offset];	  long    result    =(length    >=    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
110	[BUG]  [BUGGY]  result  =(offset  <  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(offset  <  1)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(offset  <  1)?  0L  :  buffer[offset];	  result    =(length    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
111	[BUG]  [BUGGY]  result  =(length  <  1?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1?  0L  :  buffer[offset];	  result    =(length    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
112	[BUG]  [BUGGY]  int  result  =(length  <  2)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  2)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  2)?  0L  :  buffer[offset];	  int    result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
113	[BUG]  [BUGGY]  int  result  =(offset  <  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  <  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  <  0)?  0L  :  buffer[offset];	  int    result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
114	[BUG]  [BUGGY]  int  result  =(length  <  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  0)?  0L  :  buffer[start];	  int    result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
115	[BUG]  [BUGGY]  int  result  =(length  <  3)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  3)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  3)?  0L  :  buffer[offset];	  int    result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
116	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  0L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  0L;	  result    =(length    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
117	[BUG]  [BUGGY]  result  =(length  <  1)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  0L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  0L  :  0L;	  result    =(length    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
118	[BUG]  [BUGGY]  result  =(offset  <  0)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(offset  <  0)?  0L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(offset  <  0)?  0L  :  0L;	  result    =(length    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
119	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  buffer[start];	  long    result    =(length    <    0)?    -1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
120	[BUG]  [BUGGY]  long  result  =(length  <  2)?  -1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2)?  -1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  -1L  :  buffer[offset];	  long    result    =(length    <    0)?    -1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
121	[BUG]  [BUGGY]  long  result  =(length  <  1)?  -1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1)?  -1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  -1L  :  buffer[offset];	  long    result    =(length    <    0)?    -1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
122	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  buffer[offset  +  1];	  long    result    =(length    <    0)?    -1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
123	[BUG]  [BUGGY]  int  result  =(length  <  0)?  -1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  0)?  -1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  0)?  -1L  :  buffer[offset];	  long    result    =(length    <    0)?    -1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
124	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length  +  1);	  result    =    JsonStringEncoder.getInstance().quoteAsLong(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
125	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsLong(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsLong(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().parseAsLong(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsLong(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
126	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length  -  1);	  result    =    JsonStringEncoder.getInstance().quoteAsLong(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
127	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length,  buffer.length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length,  buffer.length);	  result    =    JsonStringEncoder.getInstance().quoteAsLong(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
128	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsInt(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsInt(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().quoteAsInt(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsLong(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
129	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length,  0);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length,  0);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length,  0);	  result    =    JsonStringEncoder.getInstance().quoteAsLong(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
130	[BUG]  [BUGGY]  long  result  =(offset  <  <  1)?  0L  :  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  <  1)?  0L  :  buffer.length  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  <  1)?  0L  :  buffer.length  +  length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
131	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer.length  +  offset;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer.length  +  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  0L  :  buffer.length  +  offset;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
132	[BUG]  [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer.length  +  offset;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer.length  +  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  -  1)?  0L  :  buffer.length  +  offset;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
133	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start  +  offset]  +  length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start  +  offset]  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[start  +  offset]  +  length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
134	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length,  buffer.length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length,  buffer.length);	  result    =    JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
135	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  +  1);	  result    =    JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
136	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  -  1);	  result    =    JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
137	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsSimpleOctal(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsSimpleOctal(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().parseAsSimpleOctal(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
138	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length,  0);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length,  0);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length,  0);	  result    =    JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
139	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  +  2);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  +  2);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  +  2);	  result    =    JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
140	[BUG]  [BUGGY]  result  =  parseByte(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  parseByte(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseByte(buffer,  offset,  length);	  result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
141	[BUG]  [BUGGY]  result  =(length  <  1)?  1L  :  1L;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  1L  :  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  1L  :  1L;	  result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
142	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  :  buffer[start  +  length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  1L  :  buffer[start  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  :  buffer[start  +  length];	  result    =(length    >    0)?    1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
143	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  :  buffer[offset  +  length  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  1L  :  buffer[offset  +  length  -  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  :  buffer[offset  +  length  -  1];	  result    =(length    >    0)?    1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
144	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  :  buffer[offset  +  offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  1L  :  buffer[offset  +  offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  :  buffer[offset  +  offset];	  result    =(length    >    0)?    1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
145	[BUG]  [BUGGY]  result  =(length  <  0)?  1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  1L  :  buffer[offset  +  length];	  result    =(length    >    0)?    1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
146	[BUG]  [BUGGY]  result  =(length  <  1)?  1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  1L  :  buffer[offset  +  length];	  result    =(length    >    0)?    1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
147	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  :  buffer[offset  +  start];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  1L  :  buffer[offset  +  start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  :  buffer[offset  +  start];	  result    =(length    >    0)?    1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
148	[BUG]  [BUGGY]  int  result  =(length  <  1)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  1)?  0L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  1)?  0L  :  1;	  long    result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
149	[BUG]  [BUGGY]  long  result  =(length  <  2)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2)?  0L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  0L  :  1;	  long    result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
150	[BUG]  [BUGGY]  long  result  =(length  <  1)?  0L  :  1L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1)?  0L  :  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  0L  :  1L;	  long    result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
151	[BUG]  [BUGGY]  long  result  =(length  <  1  ||  length  >  buffer.length)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1  ||  length  >  buffer.length)?  0L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1  ||  length  >  buffer.length)?  0L  :  1;	  long    result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
152	[BUG]  [BUGGY]  long  result  =(offset  <  1)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  1)?  0L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  1)?  0L  :  1;	  long    result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
153	[BUG]  [BUGGY]  long  result  =(length  <  1)?  0L  :  2;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1)?  0L  :  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  0L  :  2;	  long    result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
154	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  1];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
155	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  buffer[start];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
156	[BUG]  [BUGGY]  int  result  =(offset  <  0)?  -1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  <  0)?  -1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  <  0)?  -1L  :  buffer[offset];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
157	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  1L  :  buffer[offset];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
158	[BUG]  [BUGGY]  long  result  =(length  >  0)?  1L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  1L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  1L  :  buffer[start];	  long    result    =(length    >    0)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
159	[BUG]  [BUGGY]  long  result  =(length  >  0)?  1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  1L  :  buffer[offset  +  length];	  long    result    =(length    >    0)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
160	[BUG]  [BUGGY]  int  result  =(length  >  0)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  >  0)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >  0)?  1L  :  buffer[offset];	  long    result    =(length    >    0)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
161	[BUG]  [BUGGY]  long  result  =(length  <  0)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  1L  :  buffer[offset];	  long    result    =(length    >    0)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
162	[BUG]  [BUGGY]  long  result  =(length  <  1)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  1L  :  buffer[offset];	  long    result    =(length    >    0)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
163	[BUG]  [BUGGY]  long  result  =(length  >  1)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  1)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  1)?  1L  :  buffer[offset];	  long    result    =(length    >    0)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
164	[BUG]  [BUGGY]  long  result  =  -1L  +  length;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  -1L  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  -1L  +  length;	  long    result    =    -1L;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
165	[BUG]  [BUGGY]  long  result  =  -1L  *  length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  -1L  *  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  -1L  *  length;	  long    result    =    -1L;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
166	[BUG]  [BUGGY]  long  result  =  -1L  <  <  length;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  -1L  <  <  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  -1L  <  <  length;	  long    result    =    -1L;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
167	[BUG]  [BUGGY]  final  int  length  =  buffer.length  -  offset;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length  -  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length  -  offset;	  final    int    length    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
168	[BUG]  [BUGGY]  final  int  length  =  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length  -  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length  -  1;	  final    int    length    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
169	[BUG]  [BUGGY]  final  int  length  =  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length  +  1;	  final    int    length    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
170	[BUG]  [BUGGY]  final  int  length  =  buffer.length  -  2;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length  -  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length  -  2;	  final    int    length    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
171	[BUG]  [BUGGY]  final  int  length  =  buffer.length  -  offset  +  length;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length  -  offset  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length  -  offset  +  length;	  final    int    length    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
172	[BUG]  [BUGGY]  final  int  length  =  buffer.length  /  2;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length  /  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length  /  2;	  final    int    length    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
173	[BUG]  [BUGGY]  int  result  =(length  <  2)?  0L  :  buffer[offset  +  offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  2)?  0L  :  buffer[offset  +  offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  2)?  0L  :  buffer[offset  +  offset];	  int    result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
174	[BUG]  [BUGGY]  int  result  =(length  <  2?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  2?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  2?  0L  :  buffer[offset  +  length];	  int    result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
175	[BUG]  [BUGGY]  int  result  =(length  <  2)?  0L  :  buffer[offset  +  length  +  1];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  2)?  0L  :  buffer[offset  +  length  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  2)?  0L  :  buffer[offset  +  length  +  1];	  int    result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
176	[BUG]  [BUGGY]  int  result  =(offset  <  2)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  <  2)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  <  2)?  0L  :  buffer[offset  +  length];	  int    result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
177	[BUG]  [BUGGY]  int  result  =(length  <  3)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  3)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  3)?  0L  :  buffer[offset  +  length];	  int    result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
178	[BUG]  [BUGGY]  long  result  =(length  <  2)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  0L  :  buffer[offset  +  length];	  int    result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
179	[BUG]  [BUGGY]  int  result  =(length  <  1)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  1)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  1)?  0L  :  buffer[offset  +  1];	  int    result    =(length    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
180	[BUG]  [BUGGY]  int  result  =(offset  <  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  <  1)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  <  1)?  0L  :  buffer[offset];	  int    result    =(length    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
181	[BUG]  [BUGGY]  int  result  =(length  <  1)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  1)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  1)?  0L  :  buffer[offset  +  length];	  int    result    =(length    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
182	[BUG]  [BUGGY]  int  result  =(length  <  1)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  1)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  1)?  0L  :  buffer[start];	  int    result    =(length    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
183	[BUG]  [BUGGY]  int  result  =(length  <  1?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  1?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  1?  0L  :  buffer[offset];	  int    result    =(length    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
184	[BUG]  [BUGGY]  int  result  =(offset  <  <  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  <  <  1)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  <  <  1)?  0L  :  buffer[offset];	  int    result    =(length    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
185	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  0L  :  buffer[offset  +  1];	  int    result    =(length    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
186	[BUG]  [BUGGY]  int  result  =(length  <  <  3)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  3)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  3)?  0L  :  buffer[offset];	  int    result    =(length    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
187	[BUG]  [BUGGY]  long  result  =(length  <  0)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  0L  :  buffer[offset  +  1];	  long    result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
188	[BUG]  [BUGGY]  long  result  =(length  <  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  0L  :  buffer[offset  +  length];	  long    result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
189	[BUG]  [BUGGY]  result  =(length  >  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  0L  :  buffer[offset];	  result    =(length    >    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
190	[BUG]  [BUGGY]  result  =(length  >  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  0L  :  buffer[offset  +  length];	  result    =(length    >    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
191	[BUG]  [BUGGY]  result  =(length  >  0)?  0L  :  buffer[offset,  length];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  0L  :  buffer[offset,  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  0L  :  buffer[offset,  length];	  result    =(length    >    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
192	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  1L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  :  buffer[start];	  result    =(length    >    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
193	[BUG]  [BUGGY]  result  =(length  >  0)?  0L  :  buffer[offset],  length;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  0L  :  buffer[offset],  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  0L  :  buffer[offset],  length;	  result    =(length    >    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
194	[BUG]  [BUGGY]  int  result  =  1L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  1L;	  long    result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
195	[BUG]  [BUGGY]  long  result  =  1L  +  length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  1L  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  1L  +  length;	  long    result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
196	[BUG]  [BUGGY]  long  result  =  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  2;	  long    result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
197	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length]  +  length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length]  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length]  +  length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    length;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
198	[BUG]  [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer.length  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  -  1)?  0L  :  buffer.length  +  length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    length;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
199	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer.length  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  1L  :  buffer.length  +  length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    length;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
200	[BUG]  [BUGGY]  int  result  =(offset  <  =  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  <  =  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  <  =  0)?  0L  :  buffer[offset];	  int    result    =(length    <    =    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
201	[BUG]  [BUGGY]  int  result  =(length  ==  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  ==  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  ==  0)?  0L  :  buffer[offset];	  int    result    =(length    <    =    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
202	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  /  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  1;	  long    result    =    System.currentTimeMillis()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
203	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  System.currentTimeMillis()  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis()  +  1;	  long    result    =    System.currentTimeMillis()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
204	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  1;	  long    result    =    System.currentTimeMillis()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
205	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  +  1L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  +  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  +  1L;	  long    result    =    System.currentTimeMillis()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
206	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  *  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  *  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  *  1;	  long    result    =    System.currentTimeMillis()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
207	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  buffer.length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  buffer.length);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
208	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length  +  1);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
209	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length  -  1);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
210	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  0);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  0);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  0);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
211	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  BYTE_MASK);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  BYTE_MASK);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  BYTE_MASK);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
212	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length,  1);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
213	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  end  =  offset  +  length  -  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  offset  +  length  -  1;	  int    end    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
214	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  end  =  offset  +  length  -  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  offset  +  length  -  BYTE_MASK;	  int    end    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
215	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  2;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  end  =  offset  +  length  -  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  offset  +  length  -  2;	  int    end    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
216	[BUG]  [BUGGY]  int  end  =  buffer.length  +  offset;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  end  =  buffer.length  +  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  buffer.length  +  offset;	  int    end    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
217	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  buffer.length;  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  end  =  offset  +  length  -  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  offset  +  length  -  buffer.length;	  int    end    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
218	[BUG]  [BUGGY]  int  end  =  offset  +  length  +  1;  [CE]  illegal  start  of  expression  [FE]                                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  end  =  offset  +  length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  offset  +  length  +  1;	  int    end    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
219	[BUG]  [BUGGY]  long  result  =  0L  +  1L;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  +  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  1L;	  long    result    =    0L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
220	[BUG]  [BUGGY]  long  result  =  offset  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  offset  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  offset  +  1;	  long    result    =    0L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
221	[BUG]  [BUGGY]  int  result  =  0L  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  0L  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  0L  +  1;	  long    result    =    0L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
222	[BUG]  [BUGGY]  long  result  =  0L  +  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  +  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  2;	  long    result    =    0L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
223	[BUG]  [BUGGY]  result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
224	[BUG]  [BUGGY]  result  =(length  <  1?  parseOctal(buffer,  offset,  length):  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1?  parseOctal(buffer,  offset,  length):  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1?  parseOctal(buffer,  offset,  length):  BYTE_MASK;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
225	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  BYTE_MASK  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  BYTE_MASK  +  1;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
226	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  BYTE_MASK;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
227	[BUG]  [BUGGY]  result  =(offset  <  1)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(offset  <  1)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(offset  <  1)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
228	[BUG]  [BUGGY]  short  result  =  0L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =  0L;	  short    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
229	[BUG]  [BUGGY]  result  =  System.currentTimeMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  System.currentTimeMillis()  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  System.currentTimeMillis()  +  1;	  result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
230	[BUG]  [BUGGY]  result  =  System.currentTimeMillis()  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  System.currentTimeMillis()  /  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  System.currentTimeMillis()  /  BYTE_MASK;	  result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
231	[BUG]  [BUGGY]  result  =  System.currentTimeMillis()  -  offset;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  System.currentTimeMillis()  -  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  System.currentTimeMillis()  -  offset;	  result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
232	[BUG]  [BUGGY]  result  =  System.currentTimeMillis()  +  length;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  System.currentTimeMillis()  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  System.currentTimeMillis()  +  length;	  result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
233	[BUG]  [BUGGY]  result  =  System.currentTimeMillis()  -  buffer.length;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  System.currentTimeMillis()  -  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  System.currentTimeMillis()  -  buffer.length;	  result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
234	[BUG]  [BUGGY]  result  =  System.currentTimeMillis()  /  2;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  System.currentTimeMillis()  /  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  System.currentTimeMillis()  /  2;	  result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
235	[BUG]  [BUGGY]  byte  result  =  0L;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =  0L;	  int    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
236	[BUG]  [BUGGY]  double  result  =  0L;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  double  result  =  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	double  result  =  0L;	  int    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
237	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis()  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  System.currentTimeMillis()  /  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis()  /  BYTE_MASK;	  int    result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
238	[BUG]  [BUGGY]  byte  result  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =  System.currentTimeMillis();  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =  System.currentTimeMillis();	  int    result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
239	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis()  -  buffer.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  System.currentTimeMillis()  -  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis()  -  buffer.length;	  int    result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
240	[BUG]  [BUGGY]  long  result  =  0L  -  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer.length  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer.length  +  length;	  long    result    =    0L    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
241	[BUG]  [BUGGY]  long  result  =  0L  /  buffer.length;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  /  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  /  buffer.length;	  long    result    =    0L    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
242	[BUG]  [BUGGY]  long  result  =  0L  -  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer.length  -  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer.length  -  1;	  long    result    =    0L    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
243	[BUG]  [BUGGY]  long  result  =  0L  -  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer.length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer.length  +  1;	  long    result    =    0L    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
244	[BUG]  [BUGGY]  long  result  =  0L  -  buffer[start];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer[start];	  long    result    =    0L    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
245	[BUG]  [BUGGY]  long  result  =  0L  -  buffer[start].length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer[start].length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer[start].length;	  long    result    =    0L    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
246	[BUG]  [BUGGY]  long  result  =  0L  -  buffer.length  -  offset;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer.length  -  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer.length  -  offset;	  long    result    =    0L    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
247	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length,  length);	  System.arraycopy(buffer,    0,    buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
248	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length  +  1);	  System.arraycopy(buffer,    0,    buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
249	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length  -  1);	  System.arraycopy(buffer,    0,    buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
250	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length  -  start);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length  -  start);	  System.arraycopy(buffer,    0,    buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
251	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  0);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  0);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length,  0);	  System.arraycopy(buffer,    0,    buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
252	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length  +  2);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length  +  2);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length  +  2);	  System.arraycopy(buffer,    0,    buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
253	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  size);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  size);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length,  size);	  System.arraycopy(buffer,    0,    buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
254	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  -1L;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1L  :  -1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  -1L;	  long    result    =(offset    <    0)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
255	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  1L;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1L  :  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  1L;	  long    result    =(offset    <    0)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
256	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  -1L  +  1L;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1L  :  -1L  +  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  -1L  +  1L;	  long    result    =(offset    <    0)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
257	[BUG]  [BUGGY]  int  result  =(offset  <  0)?  -1L  :  -1L;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  <  0)?  -1L  :  -1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  <  0)?  -1L  :  -1L;	  long    result    =(offset    <    0)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
258	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  -1L  +  length;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1L  :  -1L  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  -1L  +  length;	  long    result    =(offset    <    0)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
259	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  1L  :  -1L;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  1L  :  -1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  1L  :  -1L;	  long    result    =(offset    <    0)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
260	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( " ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
261	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
262	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  +  1L  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  1L  +  1L  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  +  1L  :  0;	  result    =(length    >    0)?    1L    :    0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
263	[BUG]  [BUGGY]  result  =(length  <  1)?  1L  :  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  1L  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  1L  :  0;	  result    =(length    >    0)?    1L    :    0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
264	[BUG]  [BUGGY]  result  =(length  <  0)?  1L  :  0;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  1L  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  1L  :  0;	  result    =(length    >    0)?    1L    :    0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
265	[BUG]  [BUGGY]  result  =(length  >  2)?  1L  :  0;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  2)?  1L  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  2)?  1L  :  0;	  result    =(length    >    0)?    1L    :    0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
266	[BUG]  [BUGGY]  result  =(length  >  1)?  1L  :  0;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  1)?  1L  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  1)?  1L  :  0;	  result    =(length    >    0)?    1L    :    0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
267	[BUG]  [BUGGY]  byte  result  =  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =  1;	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
268	[BUG]  [BUGGY]  byte  result  =(length  <  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =(length  <  1)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =(length  <  1)?  0L  :  buffer[offset];	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
269	[BUG]  [BUGGY]  byte  result  =(length  <  1)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =(length  <  1)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =(length  <  1)?  0L  :  buffer[offset  +  length];	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
270	[BUG]  [BUGGY]  byte  result  =(length  <  2)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =(length  <  2)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =(length  <  2)?  0L  :  buffer[offset  +  length];	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
271	[BUG]  [BUGGY]  int  result  =(length  >  0)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  >  0)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >  0)?  0L  :  buffer[offset  +  1];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
272	[BUG]  [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[start  +  1];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[start  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  0L  :  buffer[start  +  1];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
273	[BUG]  [BUGGY]  long  result  =(length  >  0)?  1L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  1L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  1L  :  buffer[offset  +  1];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
274	[BUG]  [BUGGY]  long  result  =(length  >  1)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  1)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  1)?  0L  :  buffer[offset  +  1];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
275	[BUG]  [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  2];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  2];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  0L  :  buffer[offset  +  2];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
276	[BUG]  [BUGGY]  long  result  =(offset  <  <  1)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  <  1)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  <  1)?  0L  :  buffer[offset  +  1];	  long    result    =(offset    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
277	[BUG]  [BUGGY]  long  result  =(offset  <  <  1)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  <  1)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  <  1)?  0L  :  buffer[offset  +  length];	  long    result    =(offset    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
278	[BUG]  [BUGGY]  long  result  =(offset  <  <  3)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  <  3)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  <  3)?  0L  :  buffer[offset];	  long    result    =(offset    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
279	[BUG]  [BUGGY]  long  result  =(offset  <  <  8)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  <  8)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  <  8)?  0L  :  buffer[offset];	  long    result    =(offset    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
280	[BUG]  [BUGGY]  long  result  =  0L  -  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer[offset  +  1];	  long    result    =    0L    -    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
281	[BUG]  [BUGGY]  long  result  =  0L  -  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer[offset  +  length];	  long    result    =    0L    -    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
282	[BUG]  [BUGGY]  long  result  =  0L  -  buffer[offset,  length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer[offset,  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer[offset,  length];	  long    result    =    0L    -    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
283	[BUG]  [BUGGY]  long  result  =  0L  -  buffer[offset],  length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer[offset],  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer[offset],  length;	  long    result    =    0L    -    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
284	[BUG]  [BUGGY]  long  result  =  0L  -  buffer[offset],  length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer[offset],  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer[offset],  length);	  long    result    =    0L    -    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
285	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  offset];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  buffer[offset  +  offset];	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
286	[BUG]  [BUGGY]  result  =(length  <  2?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2?  0L  :  buffer[offset  +  length];	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
287	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  length  +  1];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  length  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  buffer[offset  +  length  +  1];	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
288	[BUG]  [BUGGY]  result  =(length  <  2)?  1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  1L  :  buffer[offset  +  length];	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
289	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  buffer[start  +  length];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  0L  :  buffer[start  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  buffer[start  +  length];	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
290	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  buffer[offset  +  1];	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
291	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis()  +  offset;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  System.currentTimeMillis()  +  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis()  +  offset;	  long    result    =    System.currentTimeMillis()    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
292	[BUG]  [BUGGY]  result  =(length  ==  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  ==  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  ==  0)?  0L  :  buffer[offset];	  result    =(length    <    =    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
293	[BUG]  [BUGGY]  result  =(offset  <  =  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(offset  <  =  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(offset  <  =  0)?  0L  :  buffer[offset];	  result    =(length    <    =    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
294	[BUG]  [BUGGY]  result  =(length  >=  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >=  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >=  0)?  0L  :  buffer[offset];	  result    =(length    <    =    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
295	[BUG]  [BUGGY]  long  result  =(length  ==  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  ==  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  ==  0)?  0L  :  buffer[start];	  long    result    =(length    ==    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
296	[BUG]  [BUGGY]  long  result  =(length  ==  0)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  ==  0)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  ==  0)?  0L  :  buffer[offset  +  1];	  long    result    =(length    ==    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
297	[BUG]  [BUGGY]  long  result  =(length  ==  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  ==  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  ==  0)?  0L  :  buffer[offset  +  length];	  long    result    =(length    ==    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
298	[BUG]  [BUGGY]  long  result  =(length  ==  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  ==  1)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  ==  1)?  0L  :  buffer[offset];	  long    result    =(length    ==    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
299	[BUG]  [BUGGY]  long  result  =(length  ==  0)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  ==  0)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  ==  0)?  1L  :  buffer[offset];	  long    result    =(length    ==    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
300	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  start);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  -  start);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
301	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
302	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
303	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
304	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  offset,  buffer,  0,  start);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
305	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  2);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  2);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  +  2);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
306	[BUG]  [BUGGY]  long  result  =(length  <  offset)?  -1L  :  -1L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  offset)?  -1L  :  -1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  offset)?  -1L  :  -1L;	  long    result    =(offset    <    length)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
307	[BUG]  [BUGGY]  long  result  =(offset  <  length)?  -1L  :  -1L  +  1L;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  length)?  -1L  :  -1L  +  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  length)?  -1L  :  -1L  +  1L;	  long    result    =(offset    <    length)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
308	[BUG]  [BUGGY]  long  result  =(offset  <  length)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  length)?  0L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  length)?  0L  :  0L;	  long    result    =(offset    <    length)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
309	[BUG]  [BUGGY]  long  result  =(offset  <  length)?  -1L  :  1L;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  length)?  -1L  :  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  length)?  -1L  :  1L;	  long    result    =(offset    <    length)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
310	[BUG]  [BUGGY]  long  result  =(offset  <  length)?  -1L  :  0L;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  length)?  -1L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  length)?  -1L  :  0L;	  long    result    =(offset    <    length)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
311	[BUG]  [BUGGY]  long  result  =(offset  <  length)?  -1L  :  -1L  +  1;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  length)?  -1L  :  -1L  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  length)?  -1L  :  -1L  +  1;	  long    result    =(offset    <    length)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
312	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
313	[BUG]  [BUGGY]  aughtException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
314	[BUG]  [BUGGY]  aughtInvalidOctalException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtInvalidOctalException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtInvalidOctalException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
315	[BUG]  [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
316	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
317	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  1  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  1  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  1  :  buffer.length;	  long    result    =(length    <    <    1)?    1L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
318	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  1L  :  buffer[offset  +  length];	  long    result    =(length    <    <    1)?    1L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
319	[BUG]  [BUGGY]  long  result  =(length  -  1)?  1L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  -  1)?  1L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  -  1)?  1L  :  buffer.length;	  long    result    =(length    <    <    1)?    1L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
320	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  1L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  1)?  1L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  1L  :  buffer.length;	  long    result    =(length    <    <    1)?    1L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
321	[BUG]  [BUGGY]  result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  0;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0;    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
322	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  0;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0;    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
323	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  +  1):  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  +  1):  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length  +  1):  0;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0;    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
324	[BUG]  [BUGGY]  result  =(length  <  1?  parseOctal(buffer,  offset,  length):  0L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1?  parseOctal(buffer,  offset,  length):  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1?  parseOctal(buffer,  offset,  length):  0L;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0;    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
325	[BUG]  [BUGGY]  long  result  =(length  <  <  3)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  3)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  3)?  0L  :  buffer[offset];	  long    result    =(length    <    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
326	[BUG]  [BUGGY]  int  result  =(length  <  <  2)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  2)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  2)?  0L  :  buffer[offset];	  long    result    =(length    <    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
327	[BUG]  [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  2)?  0L  :  buffer[offset  +  1];	  long    result    =(length    <    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
328	[BUG]  [BUGGY]  long  result  =(length  <  <  6)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  6)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  6)?  0L  :  buffer[offset];	  long    result    =(length    <    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
329	[BUG]  [BUGGY]  long  result  =(length  <  <  8)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  8)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  8)?  0L  :  buffer[offset];	  long    result    =(length    <    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
330	[BUG]  [BUGGY]  long  result  =(length  <  <  4)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  4)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  4)?  0L  :  buffer[offset];	  long    result    =(length    <    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
331	[BUG]  [BUGGY]  long  result  =(length  <  0)?  buffer[offset  +  length  -  1]  :  0L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  buffer[offset  +  length  -  1]  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  buffer[offset  +  length  -  1]  :  0L;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
332	[BUG]  [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  -  2]  :  0L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  -  2]  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  buffer[offset  +  length  -  2]  :  0L;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
333	[BUG]  [BUGGY]  long  result  =(length  >  1)?  buffer[offset  +  length  -  1]  :  0L;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  1)?  buffer[offset  +  length  -  1]  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  1)?  buffer[offset  +  length  -  1]  :  0L;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
334	[BUG]  [BUGGY]  int  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0L;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0L;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
335	[BUG]  [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  /  1]  :  0L;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  /  1]  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  buffer[offset  +  length  /  1]  :  0L;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
336	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset,  length];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset,  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset,  length];	  long    result    =(length    <    <    1)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
337	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  1L  :  buffer[start];	  long    result    =(length    <    <    1)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
338	[BUG]  [BUGGY]  result  =(length  >  0)?  buffer[offset]  :  Integer.MIN_VALUE;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  buffer[offset]  :  Integer.MIN_VALUE;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  buffer[offset]  :  Integer.MIN_VALUE;	  result    =(length    >    0)?    buffer[offset]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
339	[BUG]  [BUGGY]  result  =(length  <  0)?  buffer[offset]  :  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  buffer[offset]  :  Integer.MAX_VALUE;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  buffer[offset]  :  Integer.MAX_VALUE;	  result    =(length    >    0)?    buffer[offset]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
340	[BUG]  [BUGGY]  result  =(length  >  0)?  buffer[start]  :  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  buffer[start]  :  Integer.MAX_VALUE;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  buffer[start]  :  Integer.MAX_VALUE;	  result    =(length    >    0)?    buffer[offset]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
341	[BUG]  [BUGGY]  result  =(length  >  0)?  buffer[offset  +  1]  :  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  buffer[offset  +  1]  :  Integer.MAX_VALUE;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  buffer[offset  +  1]  :  Integer.MAX_VALUE;	  result    =(length    >    0)?    buffer[offset]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
342	[BUG]  [BUGGY]  result  =(length  <  2)?  buffer[offset]  :  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  buffer[offset]  :  Integer.MAX_VALUE;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  buffer[offset]  :  Integer.MAX_VALUE;	  result    =(length    >    0)?    buffer[offset]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
343	[BUG]  [BUGGY]  result  =(length  <  1)?  buffer[offset]  :  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  buffer[offset]  :  Integer.MAX_VALUE;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  buffer[offset]  :  Integer.MAX_VALUE;	  result    =(length    >    0)?    buffer[offset]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
344	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  buffer.length;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  /  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  buffer.length;	  long    result    =    System.currentTimeMillis()    /    offset;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
345	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis()  /  offset;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  System.currentTimeMillis()  /  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis()  /  offset;	  long    result    =    System.currentTimeMillis()    /    offset;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
346	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  1L  :  buffer[offset  +  1];	  long    result    =(length    <    <    1)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
347	[BUG]  [BUGGY]  long  result  =(offset  <  <  1)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  <  1)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  <  1)?  1L  :  buffer[offset];	  long    result    =(length    <    <    1)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
348	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  1)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  1L  :  buffer[offset];	  long    result    =(length    <    <    1)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
349	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  1  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  1  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  1  :  buffer[offset];	  long    result    =(length    <    <    1)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
350	[BUG]  [BUGGY]  int  start  =  offset  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  start  =  offset  +  length  -  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  start  =  offset  +  length  -  1;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
351	[BUG]  [BUGGY]  int  start  =  offset  +  length  -  2;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  start  =  offset  +  length  -  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  start  =  offset  +  length  -  2;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
352	[BUG]  [BUGGY]  int  start  =  offset  +  length  -  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  start  =  offset  +  length  -  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  start  =  offset  +  length  -  BYTE_MASK;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
353	[BUG]  [BUGGY]  int  start  =  offset  +  length  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  start  =  offset  +  length  /  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  start  =  offset  +  length  /  BYTE_MASK;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
354	[BUG]  [BUGGY]  int  start  =  offset  +  length  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  start  =  offset  +  length  *  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  start  =  offset  +  length  *  BYTE_MASK;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
355	[BUG]  [BUGGY]  int  start  =  offset  +  length  +  1;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  start  =  offset  +  length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  start  =  offset  +  length  +  1;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
356	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  BYTE_MASK  +  length;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  /  BYTE_MASK  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  BYTE_MASK  +  length;	  long    result    =    System.currentTimeMillis()    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
357	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  /  BYTE_MASK  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  BYTE_MASK  +  1;	  long    result    =    System.currentTimeMillis()    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
358	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  BYTE_MASK  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  /  BYTE_MASK  +  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  BYTE_MASK  +  2;	  long    result    =    System.currentTimeMillis()    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
359	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  +  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  +  BYTE_MASK;	  long    result    =    System.currentTimeMillis()    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
360	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  buffer.length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseOctal(buffer,  offset,  length,  buffer.length);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
361	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  parseOctal(buffer,  offset,  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseOctal(buffer,  offset,  length  -  1);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
362	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  parseOctal(buffer,  offset,  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseOctal(buffer,  offset,  length  +  1);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
363	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  0);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseOctal(buffer,  offset,  length,  0);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
364	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  parseOctal(buffer,  offset,  length  -  start);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseOctal(buffer,  offset,  length  -  start);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
365	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseOctal(buffer,  offset,  length,  1);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
366	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  0,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  0,  buffer.length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseOctal(buffer,  offset,  length,  0,  buffer.length);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
367	[BUG]  [BUGGY]  long  result  =  0L  &&  length  >  buffer[start];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  &&  length  >  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  &&  length  >  buffer[start];	  long    result    =    0L    ||    length    >    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
368	[BUG]  [BUGGY]  long  result  =  0L  ||  length  >  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  length  >  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  >  buffer[offset];	  long    result    =    0L    ||    length    >    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
369	[BUG]  [BUGGY]  long  result  =  0L  ||  length  <  buffer[start];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  length  <  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  <  buffer[start];	  long    result    =    0L    ||    length    >    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
370	[BUG]  [BUGGY]  long  result  =  0L  ||  length  >=  buffer[start];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  length  >=  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  >=  buffer[start];	  long    result    =    0L    ||    length    >    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
371	[BUG]  [BUGGY]  int  result  =  0L  ||  length  >  buffer[start];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  0L  ||  length  >  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  0L  ||  length  >  buffer[start];	  long    result    =    0L    ||    length    >    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
372	[BUG]  [BUGGY]  long  result  =  0L  ||  length  ==  buffer[start];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  length  ==  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  ==  buffer[start];	  long    result    =    0L    ||    length    >    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
373	[BUG]  [BUGGY]  long  result  =  0L  ||  end  >  buffer[start];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  end  >  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  end  >  buffer[start];	  long    result    =    0L    ||    length    >    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
374	[BUG]  [BUGGY]  result  =  offset  +  length;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  offset  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  offset  +  length;	  result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
375	[BUG]  [BUGGY]  result  =  0L  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  0L  +  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  0L  +  buffer.length;	  result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
376	[BUG]  [BUGGY]  result  =  0L  +  length  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  0L  +  length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  0L  +  length  +  1;	  result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
377	[BUG]  [BUGGY]  result  =  0L  +  offset;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  0L  +  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  0L  +  offset;	  result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
378	[BUG]  [BUGGY]  result  =  0L  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  0L  +  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  0L  +  BYTE_MASK;	  result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
379	[BUG]  [BUGGY]  result  =  0L  +  length  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  0L  +  length  *  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  0L  +  length  *  BYTE_MASK;	  result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
380	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  buffer[offset  +  length);	  result    =(length    <    0)?    0L    :    buffer[offset    +    length);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
381	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[offset  +  length  +  1);	  result    =(length    <    0)?    0L    :    buffer[offset    +    length);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
382	[BUG]  [BUGGY]  result  =(length  <  1)?  0L  :  buffer[offset  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  0L  :  buffer[offset  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  0L  :  buffer[offset  +  1);	  result    =(length    <    0)?    0L    :    buffer[offset    +    length);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
383	[BUG]  [BUGGY]  result  =(length  <  1)?  0L  :  buffer[offset  +  length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  0L  :  buffer[offset  +  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  0L  :  buffer[offset  +  length);	  result    =(length    <    0)?    0L    :    buffer[offset    +    length);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
384	[BUG]  [BUGGY]  result  =(length  <  0)?  1L  :  buffer[offset  +  length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  1L  :  buffer[offset  +  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  1L  :  buffer[offset  +  length);	  result    =(length    <    0)?    0L    :    buffer[offset    +    length);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
385	[BUG]  [BUGGY]  long  result  =(length  <  2)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  0L  :  buffer[offset  +  1];	  long    result    =(length    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
386	[BUG]  [BUGGY]  long  result  =(length  <  2)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  0L  :  buffer[start];	  long    result    =(length    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
387	[BUG]  [BUGGY]  long  result  =(length  <  2?  0L  :  buffer[offset  +  length]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2?  0L  :  buffer[offset  +  length]);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2?  0L  :  buffer[offset  +  length]);	  long    result    =(length    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
388	[BUG]  [BUGGY]  long  result  =(length  <  3)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  3)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  3)?  0L  :  buffer[offset];	  long    result    =(length    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
389	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  buffer.length));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  buffer.length));  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  buffer.length));	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
390	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  +  1));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  +  1));  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  +  1));	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
391	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  1));  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  1));  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  1));	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
392	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  0));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  0));  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  0));	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
393	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  +  2));  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  +  2));  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  +  2));	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
394	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseOctal(buffer,  offset,  length));  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseOctal(buffer,  offset,  length));  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().parseOctal(buffer,  offset,  length));	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
395	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  start));  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  start));  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  start));	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
396	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis()  -  offset  +  length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  System.currentTimeMillis()  -  offset  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis()  -  offset  +  length;	  int    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
397	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis()  -  offset  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  System.currentTimeMillis()  -  offset  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis()  -  offset  +  1;	  int    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
398	[BUG]  [BUGGY]  result  =(length  <  0L)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0L)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0L)?  0L  :  buffer[start];	  result    =(length    <    =    0L)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
399	[BUG]  [BUGGY]  result  =(length  ==  0L)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  ==  0L)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  ==  0L)?  0L  :  buffer[start];	  result    =(length    <    =    0L)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
400	[BUG]  [BUGGY]  result  =(length  <  =  0L)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  0L)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0L)?  0L  :  buffer[offset];	  result    =(length    <    =    0L)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
401	[BUG]  [BUGGY]  short  result  =  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =  1;	  int    result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
402	[BUG]  [BUGGY]  byte  result  =  1L;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =  1L;	  int    result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
403	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  buffer;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  /  buffer;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  buffer;	  long    result    =    System.currentTimeMillis()    -    buffer;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
404	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  *  buffer;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  *  buffer;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  *  buffer;	  long    result    =    System.currentTimeMillis()    -    buffer;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
405	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis()  -  buffer;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  System.currentTimeMillis()  -  buffer;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis()  -  buffer;	  long    result    =    System.currentTimeMillis()    -    buffer;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
406	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1  :  1;	  long    result    =(offset    <    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
407	[BUG]  [BUGGY]  int  result  =(offset  <  0)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  <  0)?  -1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  <  0)?  -1  :  1;	  long    result    =(offset    <    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
408	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1  :  1L;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1  :  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1  :  1L;	  long    result    =(offset    <    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
409	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  1  :  1;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  1  :  1;	  long    result    =(offset    <    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
410	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  1L  :  1;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  1L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  1L  :  1;	  long    result    =(offset    <    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
411	[BUG]  [BUGGY]  int  result  =(length  >  0)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  >  0)?  -1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >  0)?  -1  :  1;	  long    result    =(length    >    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
412	[BUG]  [BUGGY]  long  result  =(length  >  1)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  1)?  -1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  1)?  -1  :  1;	  long    result    =(length    >    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
413	[BUG]  [BUGGY]  long  result  =(length  >  0)?  -1  :  1L;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  -1  :  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  -1  :  1L;	  long    result    =(length    >    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
414	[BUG]  [BUGGY]  long  result  =(length  <  1)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1)?  -1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  -1  :  1;	  long    result    =(length    >    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
415	[BUG]  [BUGGY]  long  result  =(length  <  2)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2)?  -1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  -1  :  1;	  long    result    =(length    >    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
416	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  BYTE_MASK;	  result    =(length    >    0)?    0L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
417	[BUG]  [BUGGY]  result  =(length  >  0)?  0L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  0L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  0L  :  buffer.length;	  result    =(length    >    0)?    0L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
418	[BUG]  [BUGGY]  result  =(length  >  1)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  1)?  0L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  1)?  0L  :  BYTE_MASK;	  result    =(length    >    0)?    0L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
419	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  0L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  BYTE_MASK;	  result    =(length    >    0)?    0L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
420	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
421	[BUG]  [BUGGY]  aughtException( "Length "+length+ "  should  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtException( "Length "+length+ "  should  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtException( "Length "+length+ "  should  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
422	[BUG]  [BUGGY]  aughtInvalidOctalException( "Length "+length+ "  should  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtInvalidOctalException( "Length "+length+ "  should  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtInvalidOctalException( "Length "+length+ "  should  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
423	[BUG]  [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
424	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
425	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  offset];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  offset];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
426	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  1;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  1;	  long    result    =(offset    <    0)?    -1L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
427	[BUG]  [BUGGY]  int  result  =(offset  <  0)?  -1L  :  1;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  <  0)?  -1L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  <  0)?  -1L  :  1;	  long    result    =(offset    <    0)?    -1L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
428	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  2;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1L  :  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  2;	  long    result    =(offset    <    0)?    -1L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
429	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  +  1L  :  1;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1L  +  1L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  +  1L  :  1;	  long    result    =(offset    <    0)?    -1L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
430	[BUG]  [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  length  -  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  length  -  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  0L  :  buffer[offset  +  length  -  1];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
431	[BUG]  [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  offset];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  0L  :  buffer[offset  +  offset];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
432	[BUG]  [BUGGY]  int  result  =(length  >  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  >  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >  0)?  0L  :  buffer[offset  +  length];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
433	[BUG]  [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[start  +  length];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[start  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  0L  :  buffer[start  +  length];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
434	[BUG]  [BUGGY]  long  result  =(length  <  2)?  -1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2)?  -1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  -1L  :  buffer[offset  +  length];	  long    result    =(length    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
435	[BUG]  [BUGGY]  long  result  =(length  <  1)?  -1L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1)?  -1L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  -1L  :  buffer[offset  +  1];	  long    result    =(length    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
436	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  length  -  1];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  length  -  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  buffer[offset  +  length  -  1];	  long    result    =(length    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
437	[BUG]  [BUGGY]  long  result  =(length  <  0)?  1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  1L  :  buffer[offset  +  length];	  long    result    =(length    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
438	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  length  +  1];  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  length  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  buffer[offset  +  length  +  1];	  long    result    =(length    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
439	[BUG]  [BUGGY]  int  result  =  -1L;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  -1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  -1L;	  int    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
440	[BUG]  [BUGGY]  byte  result  =  -1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =  -1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =  -1;	  int    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
441	[BUG]  [BUGGY]  int  result  =  0,  length  =  buffer.length  -  offset;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  0,  length  =  buffer.length  -  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  0,  length  =  buffer.length  -  offset;	  int    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
442	[BUG]  [BUGGY]  short  result  =  -1;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =  -1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =  -1;	  int    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
443	[BUG]  [BUGGY]  result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  0L;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  parseOctal(buffer,  offset,  length):  0L;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0L;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
444	[BUG]  [BUGGY]  result  =(length  <  1?  parseOctal(buffer,  offset,  length):  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1?  parseOctal(buffer,  offset,  length):  0);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1?  parseOctal(buffer,  offset,  length):  0);	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0L;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
445	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  0L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length  -  1):  0L;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0L;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
446	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  +  1):  0L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length  +  1):  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length  +  1):  0L;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0L;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
447	[BUG]  [BUGGY]  long  result  =  0L  -  offset;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  offset;	  long    result    =    0L    -    start;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
448	[BUG]  [BUGGY]  long  result  =  0L  -  length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  length;	  long    result    =    0L    -    start;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
449	[BUG]  [BUGGY]  long  result  =  0L  /  start;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  /  start;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  /  start;	  long    result    =    0L    -    start;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
450	[BUG]  [BUGGY]  long  result  =  0L  -  start  +  length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  start  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  start  +  length;	  long    result    =    0L    -    start;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
451	[BUG]  [BUGGY]  long  result  =  0L  -  buffer[start;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer[start;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer[start;	  long    result    =    0L    -    start;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
452	[BUG]  [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parse(buffer,  offset,  length  +  1);	  byte[]    buffer    =    parse(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
453	[BUG]  [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length,  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length,  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parse(buffer,  offset,  length,  1);	  byte[]    buffer    =    parse(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
454	[BUG]  [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length,  2);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length,  2);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parse(buffer,  offset,  length,  2);	  byte[]    buffer    =    parse(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
455	[BUG]  [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length,  buffer.length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parse(buffer,  offset,  length,  buffer.length);	  byte[]    buffer    =    parse(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
456	[BUG]  [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length,  false);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length,  false);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parse(buffer,  offset,  length,  false);	  byte[]    buffer    =    parse(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
457	[BUG]  [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  0,  length);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  0,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parse(buffer,  offset,  0,  length);	  byte[]    buffer    =    parse(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
458	[BUG]  [BUGGY]  final  int  length  =  buffer.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length()  -  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length()  -  1;	  final    int    length    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
459	[BUG]  [BUGGY]  final  int  length  =  buffer.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length()  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length()  +  1;	  final    int    length    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
460	[BUG]  [BUGGY]  final  int  length  =  buffer.length()  -  offset;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length()  -  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length()  -  offset;	  final    int    length    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
461	[BUG]  [BUGGY]  final  int  length  =  buffer.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length()  -  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length()  -  2;	  final    int    length    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
462	[BUG]  [BUGGY]  final  int  length  =  buffer.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length()  *  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length()  *  2;	  final    int    length    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
463	[BUG]  [BUGGY]  final  int  length  =  buffer.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length()  +  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length()  +  2;	  final    int    length    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
464	[BUG]  [BUGGY]  result  =(length  <  2?  0L  :  0L);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2?  0L  :  0L);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2?  0L  :  0L);	  result    =(length    <    3)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
465	[BUG]  [BUGGY]  result  =(length  <  1L)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1L)?  0L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1L)?  0L  :  0L;	  result    =(length    <    3)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
466	[BUG]  [BUGGY]  result  =(length  <  2  ||  length  <  3)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2  ||  length  <  3)?  0L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2  ||  length  <  3)?  0L  :  0L;	  result    =(length    <    3)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
467	[BUG]  [BUGGY]  long  result  =  0,  end  =  buffer.length  -  offset;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0,  end  =  buffer.length  -  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0,  end  =  buffer.length  -  offset;	  long    result    =    0,    length    =    buffer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
468	[BUG]  [BUGGY]  long  result  =  0,  length  =  buffer.length  -  offset  +  length;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0,  length  =  buffer.length  -  offset  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0,  length  =  buffer.length  -  offset  +  length;	  long    result    =    0,    length    =    buffer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
469	[BUG]  [BUGGY]  long  result  =  0,  length  =  buffer.length  -  start;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0,  length  =  buffer.length  -  start;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0,  length  =  buffer.length  -  start;	  long    result    =    0,    length    =    buffer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
470	[BUG]  [BUGGY]  long  result  =  0,  length  =  buffer[offset  +  length]  -  offset;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0,  length  =  buffer[offset  +  length]  -  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0,  length  =  buffer[offset  +  length]  -  offset;	  long    result    =    0,    length    =    buffer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
471	[BUG]  [BUGGY]  long  result  =  0,  length  =  offset  -  buffer.length;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0,  length  =  offset  -  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0,  length  =  offset  -  buffer.length;	  long    result    =    0,    length    =    buffer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
472	[BUG]  [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseOctal(buffer,  offset,  length  +  1);	  byte[]    buffer    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
473	[BUG]  [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length,  buffer.length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseOctal(buffer,  offset,  length,  buffer.length);	  byte[]    buffer    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
474	[BUG]  [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length,  2);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length,  2);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseOctal(buffer,  offset,  length,  2);	  byte[]    buffer    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
475	[BUG]  [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length,  1);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length,  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseOctal(buffer,  offset,  length,  1);	  byte[]    buffer    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
476	[BUG]  [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length,  false);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length,  false);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseOctal(buffer,  offset,  length,  false);	  byte[]    buffer    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
477	[BUG]  [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length,  true);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length,  true);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseOctal(buffer,  offset,  length,  true);	  byte[]    buffer    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
478	[BUG]  [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  0,  length);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  0,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseOctal(buffer,  offset,  0,  length);	  byte[]    buffer    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
479	[BUG]  [BUGGY]  long  result  =(length  +  1)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  +  1)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  +  1)?  0L  :  buffer[offset  +  1];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset    +    1];    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
480	[BUG]  [BUGGY]  long  result  =(length  &  1)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  &  1)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  &  1)?  0L  :  buffer[offset  +  1];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset    +    1];    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
481	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  buffer.length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  buffer.length);	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
482	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  +  1);	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
483	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  1);	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
484	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseOctal(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseOctal(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().parseOctal(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
485	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  0);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  0);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  0);	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
486	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsOctal(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsOctal(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().parseAsOctal(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
487	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  1);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  1);	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
488	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length  +  1);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
489	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  1);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
490	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  size);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  size);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  size);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
491	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buff,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseByte(buff,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buff,  offset,  length);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
492	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  2);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  2);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  2);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
493	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  false);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  false);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  false);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
494	[BUG]  [BUGGY]  int  result  =(length  >  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  >  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >  0)?  0L  :  buffer[start];	  int    result    =(length    >    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
495	[BUG]  [BUGGY]  int  result  =(offset  >  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(offset  >  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(offset  >  0)?  0L  :  buffer[offset];	  int    result    =(length    >    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
496	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.length  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  buffer.length  +  length;	  long    result    =    System.currentTimeMillis()    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
497	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.length  -  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  buffer.length  -  1;	  long    result    =    System.currentTimeMillis()    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
498	[BUG]  [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset,  length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset,  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  0L  :  buffer[offset,  length];	  long    result    =(length    >    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
499	[BUG]  [BUGGY]  long  result  =(length  >  1)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  1)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  1)?  0L  :  buffer[start];	  long    result    =(length    >    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
500	[BUG]  [BUGGY]  long  result  =(length  <  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  buffer[offset]  :  0;	  long    result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
501	[BUG]  [BUGGY]  int  result  =(length  >  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  >  0)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >  0)?  buffer[offset]  :  0;	  long    result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
502	[BUG]  [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  1]  :  0;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  1]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  buffer[offset  +  1]  :  0;	  long    result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
503	[BUG]  [BUGGY]  long  result  =(length  >  0)?  buffer[start]  :  0;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  buffer[start]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  buffer[start]  :  0;	  long    result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
504	[BUG]  [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length]  :  0;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  buffer[offset  +  length]  :  0;	  long    result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
505	[BUG]  [BUGGY]  long  result  =(length  <  1)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  buffer[offset]  :  0;	  long    result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
506	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  0L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  1;	  result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
507	[BUG]  [BUGGY]  result  =(length  <  1)?  0L  :  1L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  0L  :  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  0L  :  1L;	  result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
508	[BUG]  [BUGGY]  result  =(length  <  1  ||  length  >  buffer.length)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1  ||  length  >  buffer.length)?  0L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1  ||  length  >  buffer.length)?  0L  :  1;	  result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
509	[BUG]  [BUGGY]  result  =(offset  <  1)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(offset  <  1)?  0L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(offset  <  1)?  0L  :  1;	  result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
510	[BUG]  [BUGGY]  result  =(length  <  1?  0L  :  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1?  0L  :  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1?  0L  :  1);	  result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
511	[BUG]  [BUGGY]  long  result  =  0L  &&  length  >  buffer.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  &&  length  >  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  &&  length  >  buffer.length;	  long    result    =    0L    ||    length    >    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
512	[BUG]  [BUGGY]  long  result  =  0L  ||  length  >  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  length  >  buffer.length  -  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  >  buffer.length  -  1;	  long    result    =    0L    ||    length    >    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
513	[BUG]  [BUGGY]  long  result  =  0L  ||  length  <  buffer.length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  length  <  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  <  buffer.length;	  long    result    =    0L    ||    length    >    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
514	[BUG]  [BUGGY]  int  result  =  0L  ||  length  >  buffer.length;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =  0L  ||  length  >  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  0L  ||  length  >  buffer.length;	  long    result    =    0L    ||    length    >    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
515	[BUG]  [BUGGY]  long  result  =  0L  ||  length  >=  buffer.length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  length  >=  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  >=  buffer.length;	  long    result    =    0L    ||    length    >    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
516	[BUG]  [BUGGY]  long  result  =  0L  ||  length  ==  buffer.length;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  length  ==  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  ==  buffer.length;	  long    result    =    0L    ||    length    >    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
517	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  offset);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  offset);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  offset);	  System.arraycopy(buffer,    0,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
518	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length  -  offset);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length  -  offset);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  length  -  offset);	  System.arraycopy(buffer,    0,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
519	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  length  -  1);	  System.arraycopy(buffer,    0,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
520	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  length  +  1);	  System.arraycopy(buffer,    0,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
521	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length  +  2);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length  +  2);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  length  +  2);	  System.arraycopy(buffer,    0,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
522	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length  -  start);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  length  -  start);	  System.arraycopy(buffer,    0,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
523	[BUG]  [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
524	[BUG]  [BUGGY]  ||(length  <  =  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  ||(length  <  =  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	||(length  <  =  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
525	[BUG]  [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
526	[BUG]  [BUGGY]  ||(length  <  0  &&  buffer[start]!=  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  ||(length  <  0  &&  buffer[start]!=  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	||(length  <  0  &&  buffer[start]!=  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
527	[BUG]  [BUGGY]  ||(length  <  =  0  &&  buffer[start]  ==  null))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  ||(length  <  =  0  &&  buffer[start]  ==  null))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	||(length  <  =  0  &&  buffer[start]  ==  null))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
528	[BUG]  [BUGGY]  ||(length  <  =  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  ||(length  <  =  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	||(length  <  =  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
529	[BUG]  [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0))  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0))  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	||(length  <  0  &&  buffer[start]  ==  0))  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
530	[BUG]  [BUGGY]  result  =(length  <  1  ||  buffer.length  >  0)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1  ||  buffer.length  >  0)?  0L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1  ||  buffer.length  >  0)?  0L  :  1;	  result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
531	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  1;	  result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
532	[BUG]  [BUGGY]  long  result  =  1L  <  <  length?  buffer[offset]  :  1L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  1L  <  <  length?  buffer[offset]  :  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  1L  <  <  length?  buffer[offset]  :  1L;	  long    result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
533	[BUG]  [BUGGY]  long  result  =  1L  <  <  length?  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  1L  <  <  length?  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  1L  <  <  length?  System.arraycopy(buffer,  offset,  buffer,  0,  length);	  long    result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
534	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer[offset];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  buffer[offset];	  long    result    =    System.currentTimeMillis()    -    buffer;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
535	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer,  offset  +  length;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer,  offset  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  buffer,  offset  +  length;	  long    result    =    System.currentTimeMillis()    -    buffer;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
536	[BUG]  [BUGGY]  long  result  =  0L  /  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  /  FALLBACK_ENCODING;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  /  FALLBACK_ENCODING;	  long    result    =    0L    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
537	[BUG]  [BUGGY]  long  result  =  0L  /  BYTE_MASK  +  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  /  BYTE_MASK  +  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  /  BYTE_MASK  +  2;	  long    result    =    0L    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
538	[BUG]  [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0)?  0L  :  buffer[offset  +  1];	  result    =(length    <    =    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
539	[BUG]  [BUGGY]  int  start  =  offset  +  length  -  buffer.length;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  start  =  offset  +  length  -  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  start  =  offset  +  length  -  buffer.length;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
540	[BUG]  [BUGGY]  final  int  length  =  buffer.length  +  offset;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length  +  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length  +  offset;	  final    int    length    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
541	[BUG]  [BUGGY]  final  int  length  =  buffer.length  -  start;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length  -  start;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length  -  start;	  final    int    length    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
542	[BUG]  [BUGGY]  parent  ==  if(length  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  parent  ==  if(length  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	parent  ==  if(length  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
543	[BUG]  [BUGGY]  allowNonEmpty(length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  allowNonEmpty(length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	allowNonEmpty(length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
544	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  allowNonLocalFunction(length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	allowNonLocalFunction(length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
545	[BUG]  [BUGGY]  parent  ==  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  parent  ==  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	parent  ==  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
546	[BUG]  [BUGGY]  cast(buffer,  offset  +  length,  0,  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  cast(buffer,  offset  +  length,  0,  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	cast(buffer,  offset  +  length,  0,  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
547	[BUG]  [BUGGY]  result  =(length  <  =  0)?  buffer[offset]  :  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  0)?  buffer[offset]  :  Integer.MAX_VALUE;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0)?  buffer[offset]  :  Integer.MAX_VALUE;	  result    =(length    >    0)?    buffer[offset]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
548	[BUG]  [BUGGY]  result  =(length  >  0)?  buffer[offset]  :  Integer.MAX_VALUE  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  buffer[offset]  :  Integer.MAX_VALUE  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  buffer[offset]  :  Integer.MAX_VALUE  +  1;	  result    =(length    >    0)?    buffer[offset]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
549	[BUG]  [BUGGY]  result  =(length  >  0)?  buffer[offset  +  length  :  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  buffer[offset  +  length  :  Integer.MAX_VALUE;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  buffer[offset  +  length  :  Integer.MAX_VALUE;	  result    =(length    >    0)?    buffer[offset]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
550	[BUG]  [BUGGY]  long  result  =(length  >=  0)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >=  0)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >=  0)?  0L  :  buffer[offset  +  1];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
551	[BUG]  [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parse(buffer,  offset,  length  -  1);	  byte[]    buffer    =    parse(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
552	[BUG]  [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length  +  2);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length  +  2);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parse(buffer,  offset,  length  +  2);	  byte[]    buffer    =    parse(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
553	[BUG]  [BUGGY]  mutableTo(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  mutableTo(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	mutableTo(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
554	[BUG]  [BUGGY]  safeGet(buffer,  offset,  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  safeGet(buffer,  offset,  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	safeGet(buffer,  offset,  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
555	[BUG]  [BUGGY]  mutableTo(buffer,  offset  +  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  mutableTo(buffer,  offset  +  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	mutableTo(buffer,  offset  +  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
556	[BUG]  [BUGGY]  mutableToJava2D(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  mutableToJava2D(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	mutableToJava2D(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
557	[BUG]  [BUGGY]  safeGet(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  safeGet(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	safeGet(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
558	[BUG]  [BUGGY]  mutableToJava2D(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  mutableToJava2D(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	mutableToJava2D(buffer,  offset,  length);	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
559	[BUG]  [BUGGY]  result  =  0L  +  length  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  0L  +  length  +  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  0L  +  length  +  buffer.length;	  result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
560	[BUG]  [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0)?  0L  :  buffer[offset  +  length);	  result    =(length    <    0)?    0L    :    buffer[offset    +    length);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
561	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[start  +  length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  buffer[start  +  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[start  +  length);	  result    =(length    <    0)?    0L    :    buffer[offset    +    length);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
562	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[offset  +  length  -  1);	  result    =(length    <    0)?    0L    :    buffer[offset    +    length);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
563	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[offset  +  1);	  result    =(length    <    0)?    0L    :    buffer[offset    +    length);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
564	[BUG]  [BUGGY]  result  =(length  <  >  0)?  0L  :  buffer[offset  +  length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  >  0)?  0L  :  buffer[offset  +  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  >  0)?  0L  :  buffer[offset  +  length);	  result    =(length    <    0)?    0L    :    buffer[offset    +    length);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
565	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  +  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  +  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  length  +  2;	  long    result    =    System.currentTimeMillis()    -    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
566	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  +  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  length  +  buffer.length;	  long    result    =    System.currentTimeMillis()    -    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
567	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  buffer.length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  buffer.length);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
568	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length  -  1);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
569	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  true);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  true);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  true);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
570	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  start);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  start);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length,  start);	  System.arraycopy(buffer,    0,    buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
571	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length  -  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[offset  +  length  -  1];	  result    =(length    <    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
572	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  start];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[offset  +  start];	  result    =(length    <    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
573	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  parseOctal(buffer,  offset,  length  +  2);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseOctal(buffer,  offset,  length  +  2);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
574	[BUG]  [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer.length  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  2)?  0L  :  buffer.length  +  length;	  long    result    =(length    <    <    2)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
575	[BUG]  [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  2)?  0L  :  buffer[offset  +  length];	  long    result    =(length    <    <    2)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
576	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length  -  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length  -  1];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
577	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  start];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  start];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
578	[BUG]  [BUGGY]  result  =(length  <  =  1)?  parseOctal(buffer,  offset,  length):  0L;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  1)?  parseOctal(buffer,  offset,  length):  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  1)?  parseOctal(buffer,  offset,  length):  0L;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0L;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
579	[BUG]  [BUGGY]  result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  0L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  0L;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0L;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
580	[BUG]  [BUGGY]  long  result  =(offset  <  <  1)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  <  1)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  <  1)?  0L  :  buffer[start];	  long    result    =(offset    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
581	[BUG]  [BUGGY]  result  =(length  <  >  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  >  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  >  0)?  0L  :  buffer[start];	  result    =(length    <    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
582	[BUG]  [BUGGY]  final  int  length  =  buffer.length()  +  offset;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  final  int  length  =  buffer.length()  +  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length()  +  offset;	  final    int    length    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
583	[BUG]  [BUGGY]  long  result  =  0L  +  length  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  +  length  +  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  length  +  buffer.length;	  long    result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
584	[BUG]  [BUGGY]  long  result  =  0L  +  length  *  buffer.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  +  length  *  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  length  *  buffer.length;	  long    result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
585	[BUG]  [BUGGY]  result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  1;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    1;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
586	[BUG]  [BUGGY]  long  result  =  0L  -  start  +  length  >  buffer.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  start  +  length  >  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  start  +  length  >  buffer.length;	  long    result    =    0L    ||    length    >    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
587	[BUG]  [BUGGY]  long  result  =  0L  ||  length  >  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  length  >  buffer.length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  >  buffer.length  +  1;	  long    result    =    0L    ||    length    >    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
588	[BUG]  [BUGGY]  long  result  =  0L  ||  length  >  buffer.length  -  offset;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  length  >  buffer.length  -  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  >  buffer.length  -  offset;	  long    result    =    0L    ||    length    >    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
589	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  -1L  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1L  :  -1L  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  -1L  +  1;	  long    result    =(offset    <    0)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
590	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  start);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  start);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  start);	  System.arraycopy(buffer,    0,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
591	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  offset  +  length);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  offset  +  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  offset  +  length);	  System.arraycopy(buffer,    0,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
592	[BUG]  [BUGGY]  byte  result  =(length  <  =  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =(length  <  =  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =(length  <  =  0)?  0L  :  buffer[offset];	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
593	[BUG]  [BUGGY]  byte  result  =(length  >  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =(length  >  0)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =(length  >  0)?  buffer[offset]  :  0;	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
594	[BUG]  [BUGGY]  byte  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
595	[BUG]  [BUGGY]  byte  result  =(length  <  =  0)?  0L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =(length  <  =  0)?  0L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =(length  <  =  0)?  0L  :  buffer.length;	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
596	[BUG]  [BUGGY]  result  =(length  <  =  1)?  parseOctal(buffer,  offset,  length):  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  1)?  parseOctal(buffer,  offset,  length):  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  1)?  parseOctal(buffer,  offset,  length):  0;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0;    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
597	[BUG]  [BUGGY]  result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  0;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    0;    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
598	[BUG]  [BUGGY]  long  result  =(length  <  =  0)?  -1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  =  0)?  -1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  =  0)?  -1L  :  buffer[offset];	  long    result    =(length    <    0)?    -1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
599	[BUG]  [BUGGY]  long  result  =  0L  -  buffer;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer;	  long    result    =    0L    -    start;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
600	[BUG]  [BUGGY]  mutableTo(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  mutableTo(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	mutableTo(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
601	[BUG]  [BUGGY]  mutableToJava2D(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  mutableToJava2D(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	mutableToJava2D(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
602	[BUG]  [BUGGY]  readFully(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  readFully(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	readFully(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
603	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer.length  +  offset;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer.length  +  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  1L  :  buffer.length  +  offset;	  long    result    =(length    <    <    1)?    1L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
604	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parse(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().parse(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().parse(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsLong(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
605	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length  -  start);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length  -  start);	  result    =    JsonStringEncoder.getInstance().quoteAsLong(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
606	[BUG]  [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[offset  +  start];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[offset  +  start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  -  1)?  0L  :  buffer[offset  +  start];	  long    result    =(length    -    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
607	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  1L;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1L  :  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  1L;	  long    result    =(offset    <    0)?    -1L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
608	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  +  length  :  1;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1L  +  length  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  +  length  :  1;	  long    result    =(offset    <    0)?    -1L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
609	[BUG]  [BUGGY]  result  =(length  <  1)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  1L  :  buffer[offset];	  result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
610	[BUG]  [BUGGY]  result  =  1L  +  length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  1L  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  1L  +  length;	  result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
611	[BUG]  [BUGGY]  result  =(length  <  1)?  1L  :  0L;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  1L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  1L  :  0L;	  result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
612	[BUG]  [BUGGY]  result  =(length  <  =  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  0)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0)?  buffer[offset]  :  0;	  result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
613	[BUG]  [BUGGY]  result  =(length  >  0)?  buffer[offset  +  length  :  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  buffer[offset  +  length  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  buffer[offset  +  length  :  0;	  result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
614	[BUG]  [BUGGY]  result  =(length  ==  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  ==  0)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  ==  0)?  buffer[offset]  :  0;	  result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
615	[BUG]  [BUGGY]  result  =(length  >=  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >=  0)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >=  0)?  buffer[offset]  :  0;	  result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
616	[BUG]  [BUGGY]  float  result  =  0L;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  float  result  =  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	float  result  =  0L;	  int    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
617	[BUG]  [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  2)?  0L  :  buffer[start];	  long    result    =(length    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
618	[BUG]  [BUGGY]  long  result  =  0,  length  =  buffer.length  /  offset;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0,  length  =  buffer.length  /  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0,  length  =  buffer.length  /  offset;	  long    result    =    0,    length    =    buffer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
619	[BUG]  [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length  -  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseOctal(buffer,  offset,  length  -  1);	  byte[]    buffer    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
620	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length  *  length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length  *  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer.length  *  length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    length;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
621	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  start);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length  -  start);	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
622	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsOctal(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsOctal(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().decodeAsOctal(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
623	[BUG]  [BUGGY]  result  =(length  ==  0)?  1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  ==  0)?  1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  ==  0)?  1L  :  buffer[offset  +  length];	  result    =(length    >    0)?    1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
624	[BUG]  [BUGGY]  long  result  =(length  <  =  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  =  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  =  0)?  0L  :  buffer[offset];	  long    result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
625	[BUG]  [BUGGY]  result  =(length  ==  0)?  1L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  ==  0)?  1L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  ==  0)?  1L  :  BYTE_MASK;	  result    =(length    >    0)?    1L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
626	[BUG]  [BUGGY]  result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
627	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  FALLBACK_ENCODING;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  FALLBACK_ENCODING;	  result    =(length    <    1)?    parseOctal(buffer,    offset,    length):    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
628	[BUG]  [BUGGY]  result  =(length  <  =  0)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  0)?  0L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0)?  0L  :  BYTE_MASK;	  result    =(length    >    0)?    0L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
629	[BUG]  [BUGGY]  result  =(length  ==  0)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  ==  0)?  0L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  ==  0)?  0L  :  BYTE_MASK;	  result    =(length    >    0)?    0L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
630	[BUG]  [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  start];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  0L  :  buffer[offset  +  start];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
631	[BUG]  [BUGGY]  int  result  =(length  <  0)?  -1  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  0)?  -1  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  0)?  -1  :  buffer[offset];	  int    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
632	[BUG]  [BUGGY]  int  result  =(length  >  0)?  -1  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  >  0)?  -1  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >  0)?  -1  :  buffer[offset];	  int    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
633	[BUG]  [BUGGY]  int  result  =(length  >  buffer.length)?  -1  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  >  buffer.length)?  -1  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >  buffer.length)?  -1  :  buffer[offset];	  int    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
634	[BUG]  [BUGGY]  long  result  =  0L  -  buffer[offset  +  start];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  -  buffer[offset  +  start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer[offset  +  start];	  long    result    =    0L    -    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
635	[BUG]  [BUGGY]  long  result  =  0L  /  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  /  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  /  buffer[offset];	  long    result    =    0L    -    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
636	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[start  +  1];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset    +    1];    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
637	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  2];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  2];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset    +    1];    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
638	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  3;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  3;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  3;	  long    result    =    System.currentTimeMillis()    -    offset    +    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
639	[BUG]  [BUGGY]  int  result  =(length  <  0)?  -1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  0)?  -1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  0)?  -1L  :  buffer[offset  +  length];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
640	[BUG]  [BUGGY]  int  result  =(length  <  0)?  -1L  :  buffer[offset  +  offset];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  0)?  -1L  :  buffer[offset  +  offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  0)?  -1L  :  buffer[offset  +  offset];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
641	[BUG]  [BUGGY]  short  result  =(length  <  0)?  -1L  :  buffer[offset  +  offset];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =(length  <  0)?  -1L  :  buffer[offset  +  offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =(length  <  0)?  -1L  :  buffer[offset  +  offset];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
642	[BUG]  [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  /  1]  :  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  /  1]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  buffer[offset  +  length  /  1]  :  0;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
643	[BUG]  [BUGGY]  long  result  =(length  <  >  0)?  buffer[offset  +  length  -  1]  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  >  0)?  buffer[offset  +  length  -  1]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  >  0)?  buffer[offset  +  length  -  1]  :  0;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
644	[BUG]  [BUGGY]  result  =(length  <  =  0)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  0)?  0L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0)?  0L  :  0L;	  result    =(length    <    3)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
645	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start]  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start]  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[start]  +  1;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
646	[BUG]  [BUGGY]  int  result  =(length  <  0)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  0)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  0)?  0L  :  buffer[offset  +  1];	  int    result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
647	[BUG]  [BUGGY]  int  result  =(length  <  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  0)?  0L  :  buffer[offset  +  length];	  int    result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
648	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer[offset  +  start];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer[offset  +  start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  0L  :  buffer[offset  +  start];	  int    result    =(length    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
649	[BUG]  [BUGGY]  long  result  =(length  <  =  0)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  =  0)?  -1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  =  0)?  -1  :  1;	  long    result    =(length    >    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
650	[BUG]  [BUGGY]  long  result  =(length  ==  0)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  ==  0)?  -1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  ==  0)?  -1  :  1;	  long    result    =(length    >    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
651	[BUG]  [BUGGY]  result  =(length  <  <  1)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  <  1)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  <  1)?  0L  :  buffer[offset  +  1];	  result    =(length    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
652	[BUG]  [BUGGY]  int  end  =  offset  +  length  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  end  =  offset  +  length  +  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  offset  +  length  +  BYTE_MASK;	  int    end    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
653	[BUG]  [BUGGY]  int  end  =  offset  +  length  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  end  =  offset  +  length  +  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  offset  +  length  +  buffer.length;	  int    end    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
654	[BUG]  [BUGGY]  short  result  =(length  <  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =(length  <  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =(length  <  0)?  0L  :  buffer[offset];	  short    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
655	[BUG]  [BUGGY]  short  result  =(length  <  =  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =(length  <  =  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =(length  <  =  0)?  0L  :  buffer[offset];	  short    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
656	[BUG]  [BUGGY]  short  result  =(length  <  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =(length  <  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =(length  <  0)?  0L  :  buffer[offset  +  length];	  short    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
657	[BUG]  [BUGGY]  short  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];	  short    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
658	[BUG]  [BUGGY]  short  result  =(length  <  3)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =(length  <  3)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =(length  <  3)?  0L  :  buffer[offset];	  short    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
659	[BUG]  [BUGGY]  long  result  =(offset  >=  0)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  >=  0)?  -1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  >=  0)?  -1  :  1;	  long    result    =(offset    <    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
660	[BUG]  [BUGGY]  mutableTo(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  mutableTo(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	mutableTo(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
661	[BUG]  [BUGGY]  mutableToJava2D(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  mutableToJava2D(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	mutableToJava2D(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
662	[BUG]  [BUGGY]  mutableTo(buffer,  0,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  mutableTo(buffer,  0,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	mutableTo(buffer,  0,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
663	[BUG]  [BUGGY]  readFully(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  readFully(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	readFully(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  should  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
664	[BUG]  [BUGGY]  long  result  =(length  >=  0)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >=  0)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >=  0)?  1L  :  buffer[offset];	  long    result    =(length    >    0)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
665	[BUG]  [BUGGY]  long  result  =(length  <  >  0)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  >  0)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  >  0)?  1L  :  buffer[offset];	  long    result    =(length    >    0)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
666	[BUG]  [BUGGY]  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  <  1)?  0L  :  buffer[offset  +  length];	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
667	[BUG]  [BUGGY]  result  =(length  <  <  2)?  0L  :  buffer[offset  +  offset];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  <  2)?  0L  :  buffer[offset  +  offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  <  2)?  0L  :  buffer[offset  +  offset];	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
668	[BUG]  [BUGGY]  result  =(length  <  <  2)?  0L  :  buffer[offset  +  length  +  1];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  <  2)?  0L  :  buffer[offset  +  length  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  <  2)?  0L  :  buffer[offset  +  length  +  1];	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
669	[BUG]  [BUGGY]  read()  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  read()  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	read()  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
670	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
671	[BUG]  [BUGGY]  ||(length  <  =  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  ||(length  <  =  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	||(length  <  =  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
672	[BUG]  [BUGGY]  ||(length  <  =  0  &&  buffer[offset  +  start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  ||(length  <  =  0  &&  buffer[offset  +  start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	||(length  <  =  0  &&  buffer[offset  +  start]  ==  0))  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
673	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length  -  start);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length  -  start);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
674	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsObject(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsObject(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().decodeAsObject(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
675	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsObject(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsObject(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().parseAsObject(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
676	[BUG]  [BUGGY]  result  =  System.currentTimeMillis()  +  offset;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  System.currentTimeMillis()  +  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  System.currentTimeMillis()  +  offset;	  result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
677	[BUG]  [BUGGY]  result  =  System.currentTimeMillis()  -  start;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  System.currentTimeMillis()  -  start;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  System.currentTimeMillis()  -  start;	  result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
678	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  -  start);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length  -  start);	  result    =    JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
679	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsSimpleOctal(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsSimpleOctal(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().decodeAsSimpleOctal(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
680	[BUG]  [BUGGY]  long  result  =(length  >>  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >>  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >>  0)?  0L  :  buffer[start];	  long    result    =(length    >=    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
681	[BUG]  [BUGGY]  int  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  =  0)?  0L  :  buffer[offset  +  length];	  int    result    =(length    <    =    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
682	[BUG]  [BUGGY]  int  result  =(length  <  =  0)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  =  0)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  =  0)?  0L  :  buffer[offset  +  1];	  int    result    =(length    <    =    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
683	[BUG]  [BUGGY]  int  result  =(length  <  =  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  =  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  =  0)?  0L  :  buffer[start];	  int    result    =(length    <    =    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
684	[BUG]  [BUGGY]  result  =(length  <  >  0)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  >  0)?  0L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  >  0)?  0L  :  0L;	  result    =(length    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
685	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  0L  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  0L  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  0L  +  1;	  result    =(length    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
686	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[start  +  length];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[start  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  buffer[start  +  length];	  long    result    =(length    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
687	[BUG]  [BUGGY]  long  result  =(length  <  =  0)?  -1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  =  0)?  -1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  =  0)?  -1L  :  buffer[offset  +  length];	  long    result    =(length    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
688	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  start];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  buffer[offset  +  start];	  long    result    =(length    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
689	[BUG]  [BUGGY]  long  result  =(length  <  0)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  0L  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  0L  :  1;	  long    result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
690	[BUG]  [BUGGY]  long  result  =(length  <  1?  0L  :  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1?  0L  :  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1?  0L  :  1);	  long    result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
691	[BUG]  [BUGGY]  result  =(length  ==  0)?  1L  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  ==  0)?  1L  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  ==  0)?  1L  :  0;	  result    =(length    >    0)?    1L    :    0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
692	[BUG]  [BUGGY]  result  =(length  >=  0)?  1L  :  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >=  0)?  1L  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >=  0)?  1L  :  0;	  result    =(length    >    0)?    1L    :    0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
693	[BUG]  [BUGGY]  result  =(length  <  2)?  1L  :  0;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  1L  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  1L  :  0;	  result    =(length    >    0)?    1L    :    0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
694	[BUG]  [BUGGY]  long  result  =(length  <  =  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  =  0)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  =  0)?  buffer[offset]  :  0;	  long    result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
695	[BUG]  [BUGGY]  long  result  =(length  >  0)?  buffer[offset]  :  0L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  buffer[offset]  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  buffer[offset]  :  0L;	  long    result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
696	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length)+  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length)+  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length)+  1);	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
697	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset]  +  length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset]  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset]  +  length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
698	[BUG]  [BUGGY]  byte  result  =  System.currentTimeMillis()  -  offset;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =  System.currentTimeMillis()  -  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =  System.currentTimeMillis()  -  offset;	  int    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
699	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  length  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  length  +  1;	  long    result    =    System.currentTimeMillis()    -    length;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
700	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsObject(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsObject(buffer,  offset,  length,  buffer.length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().decodeAsObject(buffer,  offset,  length,  buffer.length);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
701	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[start  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  0L  :  buffer[start  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[start  +  1];	  result    =(length    <    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
702	[BUG]  [BUGGY]  long  result  =(length  >=  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >=  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >=  0)?  0L  :  buffer[offset  +  length];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
703	[BUG]  [BUGGY]  long  result  =(length  <  >  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  >  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  >  0)?  0L  :  buffer[offset  +  length];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
704	[BUG]  [BUGGY]  result  =(length  <  3)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  3)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  3)?  0L  :  buffer[offset];	  result    =(length    <    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
705	[BUG]  [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[start  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[start  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0)?  0L  :  buffer[start  +  1];	  result    =(length    <    =    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
706	[BUG]  [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[start],  length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[start],  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0)?  0L  :  buffer[start],  length;	  result    =(length    <    =    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
707	[BUG]  [BUGGY]  long  result  =(offset  >=  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  >=  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  >=  0)?  0L  :  buffer[offset];	  long    result    =(length    >=    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
708	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  offset  +  length  /  BYTE_MASK;	  int    end    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
709	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  offset  +  length  *  BYTE_MASK;	  int    end    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
710	[BUG]  [BUGGY]  int  end  =  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  end  =  buffer.length  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  buffer.length  +  length;	  int    end    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
711	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.length  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.length  -  2;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  buffer.length  -  2;	  long    result    =    System.currentTimeMillis()    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
712	[BUG]  [BUGGY]  long  result  =(length  <  3)?  -1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  3)?  -1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  3)?  -1L  :  buffer[offset];	  long    result    =(length    <    0)?    -1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
713	[BUG]  [BUGGY]  result  =(length  <  3)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  3)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  3)?  0L  :  buffer[offset  +  1];	  result    =(length    <    0)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
714	[BUG]  [BUGGY]  int  result  =(length  <  2)?  0L  :  buffer[offset  +  length  -  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  2)?  0L  :  buffer[offset  +  length  -  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  2)?  0L  :  buffer[offset  +  length  -  1];	  int    result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
715	[BUG]  [BUGGY]  int  result  =(length  <  2?  0L  :  buffer[offset  +  length  -  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  2?  0L  :  buffer[offset  +  length  -  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  2?  0L  :  buffer[offset  +  length  -  1];	  int    result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
716	[BUG]  [BUGGY]  int  result  =(length  <  2?  0L  :  buffer[offset  +  length]);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  2?  0L  :  buffer[offset  +  length]);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  2?  0L  :  buffer[offset  +  length]);	  int    result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
717	[BUG]  [BUGGY]  long  result  =(length  <  1)?  1L  :  1L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1)?  1L  :  1L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  1L  :  1L;	  long    result    =(length    <    1)?    0L    :    1;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
718	[BUG]  [BUGGY]  int  result  =(length  <  1)?  0L  :  -1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  1)?  0L  :  -1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  1)?  0L  :  -1;	  int    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
719	[BUG]  [BUGGY]  int  result  =(length  <  0)?  -1  :  -1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  0)?  -1  :  -1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  0)?  -1  :  -1;	  int    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
720	[BUG]  [BUGGY]  int  result  =(length  <  0)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  0)?  -1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  0)?  -1  :  1;	  int    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
721	[BUG]  [BUGGY]  result  =(length  <  0)?  1L  :  0L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  0)?  1L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  1L  :  0L;	  result    =(length    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
722	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  2  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  2  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  2  :  buffer[offset];	  long    result    =(length    <    <    1)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
723	[BUG]  [BUGGY]  long  result  =  0L  +  length  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  +  length  /  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  length  /  BYTE_MASK;	  long    result    =    0L    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
724	[BUG]  [BUGGY]  long  result  =  length  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  length  /  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  length  /  BYTE_MASK;	  long    result    =    0L    /    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
725	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  *  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  length  *  BYTE_MASK;	  long    result    =    System.currentTimeMillis()    -    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
726	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.offset  +  length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.offset  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  buffer.offset  +  length;	  long    result    =    System.currentTimeMillis()    -    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
727	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length  +  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  length  +  BYTE_MASK;	  long    result    =    System.currentTimeMillis()    -    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
728	[BUG]  [BUGGY]  long  result  =(length  <  2)?  buffer[offset  +  length  -  1]  :  0L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2)?  buffer[offset  +  length  -  1]  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  buffer[offset  +  length  -  1]  :  0L;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
729	[BUG]  [BUGGY]  long  result  =(length  <  >  0)?  buffer[offset  +  length  -  1]  :  0L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  >  0)?  buffer[offset  +  length  -  1]  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  >  0)?  buffer[offset  +  length  -  1]  :  0L;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
730	[BUG]  [BUGGY]  result  =(length  >=  0)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >=  0)?  0L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >=  0)?  0L  :  BYTE_MASK;	  result    =(length    >    0)?    0L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
731	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer.length  -  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  0L  :  buffer.length  -  1;	  int    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
732	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.offset  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.offset  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  buffer.offset  +  1;	  long    result    =    System.currentTimeMillis()    -    offset    +    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
733	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  2  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  2  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  2  :  buffer.length;	  long    result    =(length    <    <    1)?    1L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
734	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  1L  +  1L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  1L  +  1L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  1L  +  1L  :  buffer.length;	  long    result    =(length    <    <    1)?    1L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
735	[BUG]  [BUGGY]  result  =(length  >  0)?  0L  :  buffer[start  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  0L  :  buffer[start  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  0L  :  buffer[start  +  1];	  result    =(length    >    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
736	[BUG]  [BUGGY]  long  result  =(length  +  1)?  0L  :  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  +  1)?  0L  :  buffer.length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  +  1)?  0L  :  buffer.length  +  1;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
737	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length  +  1);	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
738	[BUG]  [BUGGY]  long  result  =  0L  ||  length  >  buffer[start]  &  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  ||  length  >  buffer[start]  &  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  >  buffer[start]  &  BYTE_MASK;	  long    result    =    0L    ||    length    >    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
739	[BUG]  [BUGGY]  int  start  =  offset  +  length  -  4;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  int  start  =  offset  +  length  -  4;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  start  =  offset  +  length  -  4;	  int    start    =    offset    +    length;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
740	[BUG]  [BUGGY]  aughtInvalidByteException( "Length "+length+ "  should  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtInvalidByteException( "Length "+length+ "  should  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtInvalidByteException( "Length "+length+ "  should  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
741	[BUG]  [BUGGY]  parent  ==  null?  parent.parseOctal(buffer,  offset,  length):  0L;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  parent  ==  null?  parent.parseOctal(buffer,  offset,  length):  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	parent  ==  null?  parent.parseOctal(buffer,  offset,  length):  0L;	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
742	[BUG]  [BUGGY]  parent  ==  null?  parent.parse(buffer,  offset,  length):  0L;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  parent  ==  null?  parent.parse(buffer,  offset,  length):  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	parent  ==  null?  parent.parse(buffer,  offset,  length):  0L;	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
743	[BUG]  [BUGGY]  parent  ==  null?  parent.parse(buffer,  offset,  length):  0;  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  parent  ==  null?  parent.parse(buffer,  offset,  length):  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	parent  ==  null?  parent.parse(buffer,  offset,  length):  0;	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
744	[BUG]  [BUGGY]  parent  ==  null?  parent.parseOctal(buffer,  offset,  length):  0;  [CE]  illegal  start  of  expression  [FE]                                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  parent  ==  null?  parent.parseOctal(buffer,  offset,  length):  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	parent  ==  null?  parent.parseOctal(buffer,  offset,  length):  0;	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
745	[BUG]  [BUGGY]  parent  ==  null?  parent.parseOctal(buffer,  offset,  length):  0);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  parent  ==  null?  parent.parseOctal(buffer,  offset,  length):  0);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	parent  ==  null?  parent.parseOctal(buffer,  offset,  length):  0);	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    should    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
746	[BUG]  [BUGGY]  long  result  =  0L  +  length  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  +  length  *  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  length  *  BYTE_MASK;	  long    result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
747	[BUG]  [BUGGY]  long  result  =  0L  +  length  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0L  +  length  +  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  length  +  BYTE_MASK;	  long    result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
748	[BUG]  [BUGGY]  result  =(length  <  2)?  1L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  1L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  1L  :  BYTE_MASK;	  result    =(length    >    0)?    1L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
749	[BUG]  [BUGGY]  result  =(length  >=  0)?  1L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >=  0)?  1L  :  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >=  0)?  1L  :  BYTE_MASK;	  result    =(length    >    0)?    1L    :    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
750	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length,  BYTE_MASK);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length,  BYTE_MASK);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length,  BYTE_MASK);	  result    =    JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
751	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  this.currentByte);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  this.currentByte);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  this.currentByte);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
752	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  BYTE_MASK);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  BYTE_MASK);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  BYTE_MASK);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
753	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  loadMillis(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  -  loadMillis(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  loadMillis(buffer,  offset,  length);	  long    result    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
754	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  loadMillis(buffer,  offset);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  /  loadMillis(buffer,  offset);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  loadMillis(buffer,  offset);	  long    result    =    System.currentTimeMillis()    /    offset;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
755	[BUG]  [BUGGY]  long  result  =(length  >  0)?  1  :  1;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  1  :  1;	  long    result    =(length    >    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
756	[BUG]  [BUGGY]  long  result  =(length  <  >  0)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  >  0)?  -1  :  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  >  0)?  -1  :  1;	  long    result    =(length    >    0)?    -1    :    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
757	[BUG]  [BUGGY]  long  result  =(offset  >  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  >  0)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  >  0)?  buffer[offset]  :  0;	  long    result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
758	[BUG]  [BUGGY]  long  result  =(length  <  2)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2)?  buffer[offset]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  buffer[offset]  :  0;	  long    result    =(length    >    0)?    buffer[offset]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
759	[BUG]  [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length,  true);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length,  true);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parse(buffer,  offset,  length,  true);	  byte[]    buffer    =    parse(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
760	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  +  length  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >  0)?  1L  +  length  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  +  length  :  0;	  result    =(length    >    0)?    1L    :    0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
761	[BUG]  [BUGGY]  long  result  =  -result;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  -result;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  -result;	  long    result    =    -1L;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
762	[BUG]  [BUGGY]  result  =(length  <  2  ||  length  <  2)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2  ||  length  <  2)?  0L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2  ||  length  <  2)?  0L  :  0L;	  result    =(length    <    3)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
763	[BUG]  [BUGGY]  result  =(length  <  2  ||  length  >  3)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2  ||  length  >  3)?  0L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2  ||  length  >  3)?  0L  :  0L;	  result    =(length    <    3)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
764	[BUG]  [BUGGY]  result  =(length  <  2?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2?  0L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2?  0L  :  0L;	  result    =(length    <    3)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
765	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  BYTE_MASK);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  BYTE_MASK);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length,  BYTE_MASK);	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
766	[BUG]  [BUGGY]  result  =(length  >=  0)?  1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  >=  0)?  1L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >=  0)?  1L  :  buffer[offset  +  length];	  result    =(length    >    0)?    1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
767	[BUG]  [BUGGY]  result  =(length  <  1?  0L  :  buffer[offset  +  length]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  1?  0L  :  buffer[offset  +  length]);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1?  0L  :  buffer[offset  +  length]);	  result    =(length    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
768	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  +  length  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  System.currentTimeMillis()  +  length  /  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  +  length  /  BYTE_MASK;	  long    result    =    System.currentTimeMillis()    +    length;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
769	[BUG]  [BUGGY]  long  result  =(length  <  2  ||  length  >  buffer[offset])?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2  ||  length  >  buffer[offset])?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2  ||  length  >  buffer[offset])?  0L  :  buffer[offset];	  long    result    =(length    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
770	[BUG]  [BUGGY]  long  result  =  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  buffer.length  +  1;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  buffer.length  +  1;	  long    result    =    0L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
771	[BUG]  [BUGGY]  result  =(length  <  3)?  0L  :  buffer[offset  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  3)?  0L  :  buffer[offset  +  1);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  3)?  0L  :  buffer[offset  +  1);	  result    =(length    <    0)?    0L    :    buffer[offset    +    length);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
772	[BUG]  [BUGGY]  aughtInvalidByteException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtInvalidByteException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtInvalidByteException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
773	[BUG]  [BUGGY]  byte  result  =(offset  <  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =(offset  <  0)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =(offset  <  0)?  0L  :  buffer[offset  +  length];	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
774	[BUG]  [BUGGY]  byte  result  =(offset  <  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =(offset  <  0)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =(offset  <  0)?  0L  :  buffer[offset];	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
775	[BUG]  [BUGGY]  byte  result  =(offset  <  length)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =(offset  <  length)?  0L  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =(offset  <  length)?  0L  :  buffer[offset  +  length];	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
776	[BUG]  [BUGGY]  byte  result  =(offset  <  0)?  0L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  byte  result  =(offset  <  0)?  0L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =(offset  <  0)?  0L  :  buffer.length;	  byte    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
777	[BUG]  [BUGGY]  long  result  =  1L  -  buffer.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  1L  -  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  1L  -  buffer.length;	  long    result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
778	[BUG]  [BUGGY]  long  result  =  1  <  <  length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  1  <  <  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  1  <  <  length;	  long    result    =    1L;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
779	[BUG]  [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[start],  length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[start],  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  0L  :  buffer[start],  length;	  long    result    =(length    >    0)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
780	[BUG]  [BUGGY]  long  result  =(offset  <  <  2)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  <  2)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  <  2)?  0L  :  buffer[offset];	  long    result    =(length    <    <    2)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
781	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  length  -  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  length  -  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  length  -  1];	  long    result    =(offset    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
782	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  buffer.parent)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  parent  ==  null  &&  parent!=  buffer.parent)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	parent  ==  null  &&  parent!=  buffer.parent)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
783	[BUG]  [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
784	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  false);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseOctal(buffer,  offset,  length,  false);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
785	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  2);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseOctal(buffer,  offset,  length,  2);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
786	[BUG]  [BUGGY]  result  =  0L  +  length  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  0L  +  length  +  BYTE_MASK;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  0L  +  length  +  BYTE_MASK;	  result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
787	[BUG]  [BUGGY]  result  -=  0L  +  length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  -=  0L  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  -=  0L  +  length;	  result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
788	[BUG]  [BUGGY]  result  =  length  +  0L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  length  +  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  length  +  0L;	  result    =    0L    +    length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
789	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  +  length  :  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  +  length  :  buffer.length  +  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  +  length  :  buffer.length  +  length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    length;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
790	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length  +  length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length  +  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer.length  +  length);	  long    result    =(length    <    <    1)?    0L    :    buffer.length    +    length;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
791	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start  +  offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start  +  offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[start  +  offset];	  long    result    =(length    <    <    1)?    0L    :    buffer[start];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
792	[BUG]  [BUGGY]  ||(length  <  =  0  &&  buffer[start]  ==  0))  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  ||(length  <  =  0  &&  buffer[start]  ==  0))  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	||(length  <  =  0  &&  buffer[start]  ==  0))  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Byte    length    must    be    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
793	[BUG]  [BUGGY]  long  result  =(length  <  2)?  buffer[offset  +  length  -  1]  :  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2)?  buffer[offset  +  length  -  1]  :  0;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  buffer[offset  +  length  -  1]  :  0;	  long    result    =(length    >    0)?    buffer[offset    +    length    -    1]    :    0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
794	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  BYTE_MASK);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  BYTE_MASK);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length,  BYTE_MASK);	  System.arraycopy(buffer,    0,    buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
795	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  2);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length,  2);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length,  2);	  System.arraycopy(buffer,    0,    buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
796	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length  +  1,  length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length  +  1,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length  +  1,  length);	  System.arraycopy(buffer,    0,    buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
797	[BUG]  [BUGGY]  long  result  =(length  <  2)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  2)?  1L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  1L  :  buffer[offset];	  long    result    =(length    >    0)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
798	[BUG]  [BUGGY]  long  result  =(length  >  0)?  1L  :  buffer[start],  length;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  >  0)?  1L  :  buffer[start],  length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  1L  :  buffer[start],  length;	  long    result    =(length    >    0)?    1L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
799	[BUG]  [BUGGY]  long  result  =(length  <  1)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  1)?  0L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  0L  :  buffer[offset  +  1];	  long    result    =(length    >    0)?    0L    :    buffer[offset    +    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
800	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  0L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  0)?  -1L  :  0L;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  0L;	  long    result    =(offset    <    length)?    -1L    :    -1L;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
801	[BUG]  [BUGGY]  aughtInvalidEOF( "  <  =  0 ")  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtInvalidEOF( "  <  =  0 ")  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtInvalidEOF( "  <  =  0 ")  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
802	[BUG]  [BUGGY]  aughtInvalidByte(byte, "expected  length  ' "+length+ ")  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtInvalidByte(byte, "expected  length  ' "+length+ ")  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtInvalidByte(byte, "expected  length  ' "+length+ ")  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
803	[BUG]  [BUGGY]  aughtInvalidByte(byte, "expected  length  ' "+length+ "'  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtInvalidByte(byte, "expected  length  ' "+length+ "'  must  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtInvalidByte(byte, "expected  length  ' "+length+ "'  must  be  at  least  2 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
804	[BUG]  [BUGGY]  aughtInvalidByte(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtInvalidByte(buffer,  offset,  length);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtInvalidByte(buffer,  offset,  length);	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
805	[BUG]  [BUGGY]  aughtInvalidByte(byte, "expected  length  of  byte[ "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  aughtInvalidByte(byte, "expected  length  of  byte[ "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	aughtInvalidByte(byte, "expected  length  of  byte[ "+length+ "  must  be  at  least  2 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
806	[BUG]  [BUGGY]  long  result  =(length  <  <  2)?  1L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  <  2)?  1L  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  2)?  1L  :  buffer.length;	  long    result    =(length    <    <    2)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
807	[BUG]  [BUGGY]  long  result  =  length  -  buffer.length;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  length  -  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  length  -  buffer.length;	  long    result    =    0L    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
808	[BUG]  [BUGGY]  short  result  =(length  <  0)?  0  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =(length  <  0)?  0  :  buffer.length;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =(length  <  0)?  0  :  buffer.length;	  short    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
809	[BUG]  [BUGGY]  short  result  =(length  <  0)?  0  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =(length  <  0)?  0  :  buffer[offset  +  length];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =(length  <  0)?  0  :  buffer[offset  +  length];	  short    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
810	[BUG]  [BUGGY]  short  result  =(length  <  =  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =(length  <  =  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =(length  <  =  0)?  0L  :  buffer[start];	  short    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
811	[BUG]  [BUGGY]  short  result  =(length  <  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  short  result  =(length  <  0)?  0L  :  buffer[start];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =(length  <  0)?  0L  :  buffer[start];	  short    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
812	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  length  -  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  length  -  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  buffer[offset  +  length  -  1];	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
813	[BUG]  [BUGGY]  result  =(length  <  2?  0L  :  buffer[offset  +  length]);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2?  0L  :  buffer[offset  +  length]);  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2?  0L  :  buffer[offset  +  length]);	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
814	[BUG]  [BUGGY]  result  =(length  <  2?  0L  :  buffer[offset  +  length  +  1];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =(length  <  2?  0L  :  buffer[offset  +  length  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2?  0L  :  buffer[offset  +  length  +  1];	  result    =(length    <    2)?    0L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
815	[BUG]  [BUGGY]  long  result  =  0,  start  =  buffer.length  -  offset;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  0,  start  =  buffer.length  -  offset;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0,  start  =  buffer.length  -  offset;	  long    result    =    0,    length    =    buffer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
816	[BUG]  [BUGGY]  long  result  =(offset  -  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(offset  -  1)?  0L  :  buffer[offset];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  -  1)?  0L  :  buffer[offset];	  long    result    =(length    -    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
817	[BUG]  [BUGGY]  long  result  =(length  <  3)?  -1L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =(length  <  3)?  -1L  :  buffer[offset  +  1];  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  3)?  -1L  :  buffer[offset  +  1];	  long    result    =(length    <    0)?    -1L    :    buffer[offset    +    length];    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
818	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsOctal(buffer,  offset,  length));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsOctal(buffer,  offset,  length));  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().parseAsOctal(buffer,  offset,  length));	  result    =    JsonStringEncoder.getInstance().encodeAsOctal(buffer,    offset,    length));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
819	[BUG]  [BUGGY]  long  result  =  length  -  start;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {      [BUGGY]  long  result  =  length  -  start;  [BUGGY]      int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  length  -  start;	  long    result    =    0L    -    start;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
