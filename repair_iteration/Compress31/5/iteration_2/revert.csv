projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("\0","{NUL}");//ReplaceNULstoallowstringtobeprintedfinalStrings="Invalidbyte"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{0}");//ReplaceNULstoallowstringtobeprintedfinalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{0}");//ReplaceNULstoallowstringtobeprintedfinalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{0}");//replaceNULstoallowstringtobeprintedfinalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{'"+currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u00","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0]","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"'>");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{0}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(".000","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0,","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0]","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u000","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("00","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-00","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("%s","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{0}");//replaceNULstoallowstringtobeprintedfinalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{0}");//replaceNULstoallowstringtobeprintedfinalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toString();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toLowerCase();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=(byte[])current.clone();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.trim();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toCharArray();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=newbyte[current.length()];System.arraycopy(buffer,offset,currentByte,0,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,offset,length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings='0'+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings='0'+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",newString(current));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0'",newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",newString(currentByte+1));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{'"+currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"'len='"+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{'"+currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[0]","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".000","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{1}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-0","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{'"+currentByte+"','"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("Infinity","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("00","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u00","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u000","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".s.IFJDCS".charAt(0));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("u00","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-0",newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0,","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings=string.toString();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247StringcurrentByte=string.toString();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,offset,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{0}");finalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0",newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{0}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("00","{");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",newString(currentByte),current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{'"+currentByte+"'len='"+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{'"+currentByte+"','"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u00","u00"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",current+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0',currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0",currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0000","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("00000","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("%00","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247for(inti=start;i<currentByte;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<length;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbytecurrentByte=string.toByte();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<end;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<size;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<offset;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","<'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==current){for(inti=start;i<currentByte;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<length;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<end;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==current){for(inti=start;i<length;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<size;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<offset;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","<'"+currentByte+"','"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[","{'"+currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{'"+currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("<",">'"+currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(".000","<0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".000","<0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".000","{0}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStringstring=newString(buffer,offset,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,offset,current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,offset,currentByte,length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,offset,currentByte+1);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,offset,size);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{0}");//replaceNULstoallowstringtobeprintedfinalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".000","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[0]","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","<'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".s.IFJDCS");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".s.IFJDCS",".charAt(0));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("/.s.IFJDCS".charAt(0));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".s.IFJDCS",".s.IFJDCS");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".s.IFJDCS","".charAt(0));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("<",">'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0]","<'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(".000","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0]","<'"+currentByte+"'>");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0]","{'"+currentByte+"',current}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(".000","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0000","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("%00","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-0,","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-1","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-0","{0}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0,","{1}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0,1,","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("<"+currentByte+">in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("%s","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("%s","{");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(current,buffer,offset,length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStringstring=newString(buffer,offset,length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(current,offset,length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(current,buffer,length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,current,length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,offset,current.length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","newString(current));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0'","newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","newString(currentByte),current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{1}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".000","{1}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{1}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{'"+currentByte+"'len='"+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","<'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","{");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","{1}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(".000","{");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"','"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("00","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("00:00","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("-00","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.substring(0,current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.trim()+1;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings=string.trim();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.substring(1);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(string==null){for(inti=start;i<currentByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(string==null){for(inti=start;i<length;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(string==null){for(inti=start;i<end;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(string==null){for(inti=start;i<size;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(string==null){for(inti=start;i<actualByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(string==null){for(inti=start;i<lastByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(string==null){for(inti=start;i<size();++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247for(inti=start;i<currentByte;++i){buffer[i]=string.replace('n',current);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.replace('n',current);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<length;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247for(inti=start;i<length;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<length;++i){buffer[i]=string.replace('n',current);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<end;++i){buffer[i]=string.replace('n',current);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247for(inti=start;i<currentByte;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0]","{1}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0]","{0}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("<","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("Invalidbyte"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("<","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("<","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"'in'"+string+"'length='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toLowerCase(current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toUpperCase();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings=string.toLowerCase();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toLowerCase()+1;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toLowerCase(current,current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0000","{");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("00","");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("00","%20{");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{1);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("<"+currentByte+">in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings='0'+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.getBytes();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247s=string.toString();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247byte[]currentByte=(byte[])current.clone();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=(byte[])current.cloneTree();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=(byte[])current.toArray(newbyte[currentByte.size()]);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=(byte[])current.toArray(newbyte[currentByte.length()]);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=(byte[])string.clone();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=(byte[])current.getValue();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0,1,","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0,","<0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0,","{1}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0,0","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","<'"+currentByte+"'>");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","<'"+currentByte+"'>");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("<'"+currentByte+"'>");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("'","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","n"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u000","u000"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("u00","u00"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u000","u00"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","<'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247StringcurrentByte=current.toString();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStringcurrentByte=string.toString();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247StringcurrentByte=string.toCharArray();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247StringcurrentByte=string.toLowerCase();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247bytecurrentByte=string.toString();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247StringcurrentByte=string.toString()+1;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-0",newString(current));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-0",newString(current,currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-0",newString(currentByte),current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-0",newString(currentByte+1));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-0",newString(currentByte,current));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","<0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","[0]");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0",newString(current));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0",newString(currentByte,current));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0",newString(currentByte+1));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("'0'",newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{0}",currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(".000","{0}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[00:00]","{0}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-00","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{0}");//replaceNULstoallowstringtobeprintedfinalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0'",newString(current));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=newbyte[current.length()+1];System.arraycopy(buffer,offset,currentByte,0,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247byte[]currentByte=newbyte[current.length()];System.arraycopy(buffer,offset,currentByte,0,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247System.arraycopy(buffer,offset,currentByte,0,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current.length()>0){finalbyte[]currentByte=newbyte[current.length()];System.arraycopy(buffer,offset,currentByte,0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=newbyte[current.length()*2];System.arraycopy(buffer,offset,currentByte,0,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247byte[]currentByte=newbyte[current.length()+1];System.arraycopy(buffer,offset,currentByte,0,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".000","{'"+currentByte+"','"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247chars=string.toCharArray();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings=string.toCharArray();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toCharArray()+1;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[null]","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("<","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[Null]","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[NUL]","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-00","{");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-00","{1}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("<"+currentByte+">",'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","newString(currentByte+1));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0',newString(currentByte+1));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0'",newString(currentByte+1));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0'",newString(current,currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0'",newString(currentByte),current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("Infinity","{");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("Infinity","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[null]","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("<","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,current);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<length;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,current);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247for(inti=start;i<length;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<end;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",current+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",current+"'",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",current+"'",currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'",current+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0',current+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","<'"+currentByte+"'len='"+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","<'"+currentByte+"'len='"+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings='0'+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings='0'+currentByte+"atoffset"+(current-offset)+"in'"+string+"'length='+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0","{0}",currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[0]","{0}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0,","{0}",currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{'"+currentByte+"'len='"+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings='0'+currentByte+",atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings='0'+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbytecurrentByte=(byte)current.clone();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalintlen=string.length();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbytecurrentByte=string.getBytes();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbytecurrentByte=string.length();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbytecurrentByte=current.getByte();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbytecurrentByte=(byte)current.getValue();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbytecurrentByte=string.getBytes(current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("00","{1}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[0]","{1}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(".000","0");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0',current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",current+1);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",newString(currentByte),length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",newString(currentByte),buffer);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0',newString(currentByte),current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings=string.substring(0,current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings=string.getBytes();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings=string.toString()+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[0],","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0,0,"{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0,1,"{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0,","{0}",currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("Invalid'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",currentByte+"'len="+currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0',currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",currentByte+"'len="+current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",current+"'");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",currentByte+"',");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",currentByte+"'");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",currentByte+"'",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings='"+currentByte+"atoffset"+(current-offset+1)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","0");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0,",currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"'>",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".s.IFJDCS",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".IFJDCS".charAt(0));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".s.IFJDCS",".charAt(0)");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=newbyte[current.length()-1];System.arraycopy(buffer,offset,currentByte,0,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<length;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,current);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<offset;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbytes='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings='['+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("in","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("<","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0]",current+"{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0]","{'"+currentByte+"',current="+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u00","newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","0");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("}","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("{0}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0'",newString(currentByte)+1);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0',",newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0'",newString(currentByte,length));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("<n","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,offset,length+1);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,0,current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toCharArray(current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=current.toCharArray();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","<'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","<'"+currentByte+"'in'"+string+"'length="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0,1,"{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0,0,"{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0],","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0,0,");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<length;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte==null){for(inti=start;i<length;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbytecurrentByte=string.toString();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-1",newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-0,",newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("00","<");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("00","0");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<length;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<end;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<offset;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<size;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<lastByte;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==null){for(inti=start;i<limit;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("%s","<NUL>{");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(current,offset,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0000","{"}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("Infinity","{'"+current+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.getByte();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toString()+"n";
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toString()+1;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==current){for(inti=start;i<currentByte;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==current){for(inti=start;i<end;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("Invalid'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("000","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("u000","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=(byte[])currentByte.clone();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=(byte[])current.toArray(newbyte[currentByte.length]);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<length;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<offset;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<size;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<lastByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<result.length;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(".s.IFJDCS","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("<",">{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".000","[0]{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-00","{10}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",currentByte+"'len='"+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings=string.getByte();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings=string.toString()+"n";
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings=string.substring(current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("<",">{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'","{'"+currentByte+"','"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toLowerCase(currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=current.toLowerCase();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("in","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("-0",newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0",newString(currentByte),current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247StringcurrentByte=string.toByteArray();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("in","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<length;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=string.replace('n',current);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-000","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0000","{1}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("n","{'"+currentByte+"','"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.trim().toLowerCase();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("00","[0]");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("u00","u00"+currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0]",current,"{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,offset,length-current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("[0]",currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings='0'+currentByte+".atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=String.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<actualByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<lastByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(".000","-0");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(".000","[0]");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".s.IFJDCS".charAt(0),"{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".s.IFJDCS".charAt(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".s.IFJDCS","0");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{'"+currentByte+"'len='"+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<actualByte;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current==current){for(inti=start;i<length;++i){buffer[i]=string.toByte();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("in","{'"+currentByte+"'len="+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'",currentByte+"'len='"+length);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.substring(current,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<startByte;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<lastByte;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<offset;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(current.length()>currentByte){finalbyte[]currentByte=newbyte[current.length()];System.arraycopy(buffer,offset,currentByte,0,currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0',current+"'");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u000","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("['"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{0}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.toString()+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("-","{'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<actualByte;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<lastByte;++i){buffer[i]=string.toString();}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","-0");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","1");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","0000");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("u000","u00"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("00","0");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".000","0");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[.000]","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".000","-0");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".000","[0]");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll(".000","");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("['"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("Infinity","{'");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("Infinity","<NUL>");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","<'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0'",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbyte[]currentByte=string.clone();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<length;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<actualByte;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<lastByte;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<size;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("-","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings=string.substring(current,current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","{'"+currentByte+"','"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("-","{'"+currentByte+"','"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("u00","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("%s",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("[","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("['"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u00","<'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Strings='"+currentByte+"atoffset"+(current-offset+1)+"in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","<'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u000","NUL");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalStrings=string.toString()+"in'"+current;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247Stringstring=newString(buffer,offset,length-currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0","{NUL}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("00","[NUL]");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("u000","u000");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(",","{0}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll(".s.IFJDCS".charAt(0));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("-","{'"+currentByte+"'}");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("n","<'"+currentByte+"'>");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("0",newString(currentByte),current,currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0,0,");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","Null");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("000","");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("0",currentByte+"'len="+currentByte);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("<n","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(string!=null){for(inti=start;i<currentByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247finalbytecurrentByte=string.toByteArray();
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(currentByte!=null){for(inti=start;i<actualByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247if(string!=null){for(inti=start;i<actualByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("['"+currentByte+"']");
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("'0'",newString(currentByte,current));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string.replaceAll("'0'",newString(currentByte+1));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-","newString(currentByte));
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("%20","{0}",current);
projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java247string=string.replaceAll("-00","<NUL>");
