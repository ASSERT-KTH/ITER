bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  valueIndex  =  getValueIndex(this.indexMap,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  int  valueIndex  =  getValueIndex(this.indexMap,  value);  [BUGGY]      if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	int  valueIndex  =  getValueIndex(this.indexMap,  value);	  int    valueIndex    =    getValueIndex(value,    this.indexMap);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  int  keyIndex  =  getIndex(value,  key);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  int  keyIndex  =  getIndex(value,  key);  [BUGGY]      if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	int  keyIndex  =  getIndex(value,  key);	  int    keyIndex    =    getIndex(key,    value);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
3	[BUG]  [BUGGY]  int  valueIndex  =  getIndex(value,  key);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  int  valueIndex  =  getIndex(value,  key);  [BUGGY]      if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	int  valueIndex  =  getIndex(value,  key);	  int    valueIndex    =    getIndex(key,    value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  if(keyIndex  ==  -1)  {  If(keyIndex  ==  -1)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  ==  -1)  {  If(keyIndex  ==  -1)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex  ==  -1)  {  If(keyIndex  ==  -1)  {	  if(keyIndex    ==    0)    {    If(keyIndex    ==    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
5	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  <  0  ||  keyIndex  >=  this.values.size())  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	add	if(keyIndex  <  0  ||  keyIndex  >=  this.values.size())  {	  if(keyIndex    <    0    ||    keyIndex    >    this.values.size())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	39	replace
6	[BUG]  [BUGGY]  if(keyIndex  <  0  ||  keyIndex  >=  this.values.size())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  <  0  ||  keyIndex  >=  this.values.size())  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex  <  0  ||  keyIndex  >=  this.values.size())  {	  if(keyIndex    <    0    ||    keyIndex    >    this.values.size())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	39	replace
7	[BUG]  [BUGGY]  int  keyIndex  =  getIndex(key);  if(keyIndex  ==  0)  {  [CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)  [FE]        AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  int  keyIndex  =  getIndex(key);  if(keyIndex  ==  0)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	int  keyIndex  =  getIndex(key);  if(keyIndex  ==  0)  {	  if(keyIndex    ==    0)    {    int    keyIndex    =    getIndex(key);    if(keyIndex    ==    0)    {    	non-compiled	[CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)	15	None	replace
8	[BUG]  [BUGGY]  if(value  ==  null)  {  int  keyIndex  =  getIndex(key);  if(keyIndex  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(value  ==  null)  {  int  keyIndex  =  getIndex(key);  if(keyIndex  ==  0)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(value  ==  null)  {  int  keyIndex  =  getIndex(key);  if(keyIndex  ==  0)  {	  if(keyIndex    ==    0)    {    int    keyIndex    =    getIndex(key);    if(keyIndex    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  int  valueIndex  =  getIndex(value,  index  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  int  valueIndex  =  getIndex(value,  index  +  1);  [BUGGY]      if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	int  valueIndex  =  getIndex(value,  index  +  1);	  int    valueIndex    =    getIndex(value,    index);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
10	[BUG]  [BUGGY]  int  valueIndex  =  getIndex(value,  index  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  int  valueIndex  =  getIndex(value,  index  -  1);  [BUGGY]      if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	int  valueIndex  =  getIndex(value,  index  -  1);	  int    valueIndex    =    getIndex(value,    index);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
11	[BUG]  [BUGGY]  if(keyIndex  ==  -1)  {  if(keyIndex  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  ==  -1)  {  if(keyIndex  ==  -1)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex    ==    -1)    {    if(keyIndex  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
12	[BUG]  [BUGGY]  if(keyIndex  ==  -1)  {  if(keyIndex!=  -1)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  ==  -1)  {  if(keyIndex!=  -1)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex    ==    -1)    {    if(keyIndex!=  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
13	[BUG]  [BUGGY]  if(keyIndex  >=  0)  {  If(keyIndex  <  0)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  >=  0)  {  If(keyIndex  <  0)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex  >=  0)  {  If(keyIndex  <  0)  {	  if(keyIndex    <    0)    {    If(keyIndex    <    0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
14	[BUG]  [BUGGY]  if(keyIndex  ==  0)  {  If(keyIndex  <  0)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  ==  0)  {  If(keyIndex  <  0)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex  ==  0)  {  If(keyIndex  <  0)  {	  if(keyIndex    <    0)    {    If(keyIndex    <    0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
15	[BUG]  [BUGGY]  int  valueIndex  =  getIndex(this.indexMap,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  int  valueIndex  =  getIndex(this.indexMap,  value);  [BUGGY]      if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	int  valueIndex  =  getIndex(this.indexMap,  value);	  int    valueIndex    =    getIndex(value,    this.indexMap);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  if(keyIndex  <  0  ||  keyIndex  >  this.values.size())  {  if(keyIndex  <  0  ||  keyIndex  >  this.values.size())  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  <  0  ||  keyIndex  >  this.values.size())  {  if(keyIndex  <  0  ||  keyIndex  >  this.values.size())  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex    <    0    ||    keyIndex    >    this.values.size())    {    if(keyIndex  <  0  ||  keyIndex  >  this.values.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
17	[BUG]  [BUGGY]  if(keyIndex  <  0  ||  keyIndex  >  this.values.size())  {  if(keyIndex  >=  0  ||  keyIndex  >  this.values.size())  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  <  0  ||  keyIndex  >  this.values.size())  {  if(keyIndex  >=  0  ||  keyIndex  >  this.values.size())  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex    <    0    ||    keyIndex    >    this.values.size())    {    if(keyIndex  >=  0  ||  keyIndex  >  this.values.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
18	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  >=  -1)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	add	if(keyIndex  >=  -1)  {	  if(keyIndex    <    0)    {    if(keyIndex    >=    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	39	replace
19	[BUG]  [BUGGY]  if(keyIndex  >=  -1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  >=  -1)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex  >=  -1)  {	  if(keyIndex    <    0)    {    if(keyIndex    >=    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	39	replace
20	[BUG]  [BUGGY]  if(keyIndex  <  0)  {  If(keyIndex  >  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  <  0)  {  If(keyIndex  >  0)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex  <  0)  {  If(keyIndex  >  0)  {	  if(keyIndex    ==    0)    {    If(keyIndex    ==    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
21	[BUG]  [BUGGY]  int  valueIndex  =  getIndex(value);  Int  valueIndex  =  getIndex(value);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  int  valueIndex  =  getIndex(value);  Int  valueIndex  =  getIndex(value);  [BUGGY]      if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	int  valueIndex  =  getIndex(value);  Int  valueIndex  =  getIndex(value);	          int    valueIndex    =    getIndex(key);    Int    valueIndex    =    getIndex(key);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex!=  -1)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	add	if(keyIndex!=  -1)  {	  if(keyIndex    ==    -1)    {    	compilable	  [FE]  AssertionFailedError  	18	4	replace
23	[BUG]  [BUGGY]  if(keyIndex!=  -1)  {  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex!=  -1)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex!=  -1)  {	  if(keyIndex    ==    -1)    {    	compilable	  [FE]  AssertionFailedError  	18	4	replace
24	[BUG]  [BUGGY]  if(keyIndex  <  =  0)  {  If(keyIndex  <  0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  <  =  0)  {  If(keyIndex  <  0)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex  <  =  0)  {  If(keyIndex  <  0)  {	  if(keyIndex    <    0)    {    If(keyIndex    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  if(keyIndex  <  0)  {  If(keyIndex  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  <  0)  {  If(keyIndex  ==  0)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex  <  0)  {  If(keyIndex  ==  0)  {	  if(keyIndex    ==    0)    {    If(keyIndex    ==    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
26	[BUG]  [BUGGY]  if(keyIndex  <  0)  {  If(keyIndex  >=  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);      [BUGGY]  if(keyIndex  <  0)  {  If(keyIndex  >=  0)  {  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	233	233	4	replace	if(keyIndex  <  0)  {  If(keyIndex  >=  0)  {	  if(keyIndex    ==    0)    {    If(keyIndex    ==    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
