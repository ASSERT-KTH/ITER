bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    this.keys.clear();  this.keys.clear();  this.keys.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.clear();        this.keys.clear();    this.keys.clear();  this.keys.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	15	add
2	[BUG]  [BUGGY]  this.keys.clear();    this.keys.clear();  this.keys.clear();  this.keys.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    this.keys.clear();  this.keys.clear();  this.keys.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear();        this.keys.clear();    this.keys.clear();  this.keys.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	15	add
3	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    this.keys.clear();  ArrayList  keys  =  new  ArrayList(this.keys.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.clear();        this.keys.clear();    ArrayList  keys  =  new  ArrayList(this.keys.size());	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	15	add
4	[BUG]  [BUGGY]  this.keys.clear();    this.keys.clear();  ArrayList  keys  =  new  ArrayList(this.keys.size());  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    this.keys.clear();  ArrayList  keys  =  new  ArrayList(this.keys.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear();        this.keys.clear();    ArrayList  keys  =  new  ArrayList(this.keys.size());	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	15	add
5	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    this.keys.clear();  ArrayList  keys  =  new  ArrayList();  this.keys.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.clear();        this.keys.clear();    ArrayList  keys  =  new  ArrayList();  this.keys.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	15	add
6	[BUG]  [BUGGY]  this.keys.clear();    this.keys.clear();  ArrayList  keys  =  new  ArrayList();  this.keys.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    this.keys.clear();  ArrayList  keys  =  new  ArrayList();  this.keys.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear();        this.keys.clear();    ArrayList  keys  =  new  ArrayList();  this.keys.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	15	add
7	[BUG]  [BUGGY]  ArrayList  keys  =  this.keys.get(keyIndex);  [CE]  incompatible  types  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  keys  =  this.keys.get(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	ArrayList  keys  =  this.keys.get(keyIndex);	  this.keys.clear();    ArrayList    keys    =    this.keys.get(keyIndex);    	non-compiled	[CE]  incompatible  types	30	None	replace
8	[BUG]  [BUGGY]  List  keys  =  this.keys.get(keyIndex);  [CE]  incompatible  types  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  List  keys  =  this.keys.get(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	List  keys  =  this.keys.get(keyIndex);	  this.keys.clear();    ArrayList    keys    =    this.keys.get(keyIndex);    	non-compiled	[CE]  incompatible  types	30	None	replace
9	[BUG]  [BUGGY]  this.values.put(keyIndex,  value);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.values.put(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.values.put(keyIndex,  value);	          this.values.add(keyIndex,    value);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
10	[BUG]  [BUGGY]  int  valueIndex  =  getIndex(this.indexMap,  value);  [CE]  method  getIndex  in  class  DefaultKeyedValues  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  int  valueIndex  =  getIndex(this.indexMap,  value);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	int  valueIndex  =  getIndex(this.indexMap,  value);	  int    valueIndex    =    getIndex(value,    this.indexMap);    	non-compiled	[CE]  method  getIndex  in  class  DefaultKeyedValues  cannot  be  applied  to  given  types;	7	None	replace
11	[BUG]  [BUGGY]  int  valueIndex  =  getIndex(value,  this.indexMap,  this.keys);  [CE]  method  getIndex  in  class  DefaultKeyedValues  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  int  valueIndex  =  getIndex(value,  this.indexMap,  this.keys);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	int  valueIndex  =  getIndex(value,  this.indexMap,  this.keys);	  int    valueIndex    =    getIndex(value,    this.indexMap);    	non-compiled	[CE]  method  getIndex  in  class  DefaultKeyedValues  cannot  be  applied  to  given  types;	7	None	replace
12	[BUG]  [BUGGY]  this.keys.add(key,  value,  this.indexMap);  [CE]  no  suitable  method  found  for  add(Comparable,Number,HashMap)  [FE]        AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(key,  value,  this.indexMap);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.add(key,  value,  this.indexMap);	  this.keys.add(key,    value);    	non-compiled	[CE]  no  suitable  method  found  for  add(Comparable,Number,HashMap)	29	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.remove(keyIndex);  this.keys.remove(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.remove(keyIndex);    this.keys.remove(keyIndex);	  	compilable	  [FE]  AssertionFailedError  	13	14	add
14	[BUG]  [BUGGY]  this.keys.remove(keyIndex);  this.keys.remove(keyIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.remove(keyIndex);  this.keys.remove(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.remove(keyIndex);    this.keys.remove(keyIndex);	  	compilable	  [FE]  AssertionFailedError  	13	14	add
15	[BUG]  [BUGGY]  this.keys.remove(keyIndex);  ArrayList  keys  =  this.keys.get(keyIndex);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.remove(keyIndex);  ArrayList  keys  =  this.keys.get(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.remove(keyIndex);    ArrayList  keys  =  this.keys.get(keyIndex);	  	non-compiled	[CE]  incompatible  types	13	None	add
16	[BUG]  [BUGGY]  Integer  valueIndex  =  getIndex(key);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  Integer  valueIndex  =  getIndex(key);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	Integer  valueIndex  =  getIndex(key);	          int    valueIndex    =    getIndex(key);    Int    valueIndex    =    getIndex(key);    	non-compiled	[CE]  incompatible  types	10	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.set(keyIndex,  value);  this.keys.set(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.set(keyIndex,        value);        this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.set(keyIndex,  value);	  	compilable	  [FE]  AssertionFailedError  	17	4	add
18	[BUG]  [BUGGY]  this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.set(keyIndex,  value);  this.keys.set(keyIndex,  value);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.set(keyIndex,  value);  this.keys.set(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.set(keyIndex,        value);        this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.set(keyIndex,  value);	  	compilable	  [FE]  AssertionFailedError  	17	4	add
19	[BUG]  [BUGGY]  this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.put(keyIndex,  value);  this.keys.set(keyIndex,  value);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.put(keyIndex,  value);  this.keys.set(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.set(keyIndex,        value);        this.keys.set(keyIndex,    value);    this.keys.put(keyIndex,  value);  this.keys.set(keyIndex,  value);	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
20	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.clear();  this.keys.set(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.set(keyIndex,        value);        this.keys.set(keyIndex,    value);    this.keys.clear();  this.keys.set(keyIndex,  value);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	17	15	add
21	[BUG]  [BUGGY]  this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.clear();  this.keys.set(keyIndex,  value);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.clear();  this.keys.set(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.set(keyIndex,        value);        this.keys.set(keyIndex,    value);    this.keys.clear();  this.keys.set(keyIndex,  value);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	17	15	add
22	[BUG]  [BUGGY]  this.keys.clear(keyIndex,  value);  [CE]  no  suitable  method  found  for  clear(int,Number)  [FE]        AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear(keyIndex,  value);	  this.keys.set(keyIndex,    value);    this.keys.clear(keyIndex,    value);    	non-compiled	[CE]  no  suitable  method  found  for  clear(int,Number)	34	None	replace
23	[BUG]  [BUGGY]  this.keys.set(keyIndex,  value,  this.indexMap);  [CE]  no  suitable  method  found  for  set(int,Number,HashMap)  [FE]          AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.set(keyIndex,  value,  this.indexMap);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.set(keyIndex,  value,  this.indexMap);	  this.keys.set(keyIndex,    value);    this.keys.clear(keyIndex,    value);    	non-compiled	[CE]  no  suitable  method  found  for  set(int,Number,HashMap)	34	None	replace
24	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          this.values.clear();  this.values.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	                this.values.clear();    this.values.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	27	15	add
25	[BUG]  [BUGGY]          this.values.clear();  this.values.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          this.values.clear();  this.values.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	                this.values.clear();    this.values.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	27	15	add
26	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          this.values.clear();  ArrayList  values  =  new  ArrayList(this.values.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	                this.values.clear();    ArrayList  values  =  new  ArrayList(this.values.size());	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	27	15	add
27	[BUG]  [BUGGY]          this.values.clear();  ArrayList  values  =  new  ArrayList(this.values.size());  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          this.values.clear();  ArrayList  values  =  new  ArrayList(this.values.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	                this.values.clear();    ArrayList  values  =  new  ArrayList(this.values.size());	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	27	15	add
28	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          this.values.clear();  ArrayList  values  =  new  ArrayList();  this.values.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	                this.values.clear();    ArrayList  values  =  new  ArrayList();  this.values.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	27	15	add
29	[BUG]  [BUGGY]          this.values.clear();  ArrayList  values  =  new  ArrayList();  this.values.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          this.values.clear();  ArrayList  values  =  new  ArrayList();  this.values.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	                this.values.clear();    ArrayList  values  =  new  ArrayList();  this.values.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	27	15	add
30	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  keys  =  new  ArrayList();  this.keys.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	ArrayList  keys  =  new  ArrayList();  this.keys.clear();	  this.keys.clear();    ArrayList    keys    =    new    ArrayList();    this.keys.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	6	5	replace
31	[BUG]  [BUGGY]  ArrayList  keys  =  new  ArrayList();  this.keys.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  keys  =  new  ArrayList();  this.keys.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	ArrayList  keys  =  new  ArrayList();  this.keys.clear();	  this.keys.clear();    ArrayList    keys    =    new    ArrayList();    this.keys.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	6	5	replace
32	[BUG]  [BUGGY]  this.keys.add(keyIndex);  [CE]  no  suitable  method  found  for  add(int)  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.add(keyIndex);	  this.keys.remove(keyIndex);    	non-compiled	[CE]  no  suitable  method  found  for  add(int)	14	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  keys  =  new  ArrayList(this.keys.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	ArrayList  keys  =  new  ArrayList(this.keys.size());	  this.keys.clear();    ArrayList    keys    =    new    ArrayList(this.keys.size());    	compilable	  [FE]  AssertionFailedError  	4	4	replace
34	[BUG]  [BUGGY]  ArrayList  keys  =  new  ArrayList(this.keys.size());  [FE]  AssertionFailedError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  keys  =  new  ArrayList(this.keys.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	ArrayList  keys  =  new  ArrayList(this.keys.size());	  this.keys.clear();    ArrayList    keys    =    new    ArrayList(this.keys.size());    	compilable	  [FE]  AssertionFailedError  	4	4	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  keys  =  new  ArrayList(this.keys.size()  -  1);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	ArrayList  keys  =  new  ArrayList(this.keys.size()  -  1);	  this.keys.clear();    ArrayList    keys    =    new    ArrayList(this.keys.size());    	compilable	  [FE]  AssertionFailedError  	4	4	replace
36	[BUG]  [BUGGY]  ArrayList  keys  =  new  ArrayList(this.keys.size()  -  1);  [FE]  AssertionFailedError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  keys  =  new  ArrayList(this.keys.size()  -  1);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	ArrayList  keys  =  new  ArrayList(this.keys.size()  -  1);	  this.keys.clear();    ArrayList    keys    =    new    ArrayList(this.keys.size());    	compilable	  [FE]  AssertionFailedError  	4	4	replace
37	[BUG]  [BUGGY]  Integer  value  =  getIndex(keyIndex  +  1);  [CE]  variable  value  is  already  defined  in  method  setValue(Comparable,Number)  [FE]        AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  Integer  value  =  getIndex(keyIndex  +  1);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	Integer  value  =  getIndex(keyIndex  +  1);	          Integer    value    =    getIndex(keyIndex);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  setValue(Comparable,Number)	20	None	replace
38	[BUG]  [BUGGY]  ArrayList  values  =  this.indexMap.get(keyIndex,  value,  this.values);  [CE]  no  suitable  method  found  for  get(int,Number,ArrayList)  [FE]            AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  values  =  this.indexMap.get(keyIndex,  value,  this.values);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	ArrayList  values  =  this.indexMap.get(keyIndex,  value,  this.values);	  ArrayList    values    =    this.indexMap.get(keyIndex,    value);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,Number,ArrayList)	11	None	replace
39	[BUG]  [BUGGY]  ArrayList  values  =  this.indexMap.get(keyIndex,  keyIndex,  value);  [CE]  no  suitable  method  found  for  get(int,int,Number)  [FE]              AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  values  =  this.indexMap.get(keyIndex,  keyIndex,  value);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	ArrayList  values  =  this.indexMap.get(keyIndex,  keyIndex,  value);	  ArrayList    values    =    this.indexMap.get(keyIndex,    value);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,int,Number)	11	None	replace
40	[BUG]  [BUGGY]  List  values  =  this.keys.get(keyIndex);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  List  values  =  this.keys.get(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	List  values  =  this.keys.get(keyIndex);	          ArrayList    values    =    this.keys.get(keyIndex);    	non-compiled	[CE]  incompatible  types	33	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          this.values.add(keyIndex,  value);  this.values.add(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	                this.values.add(keyIndex,    value);    this.values.add(keyIndex,  value);	  	compilable	  [FE]  AssertionFailedError  	25	4	add
42	[BUG]  [BUGGY]          this.values.add(keyIndex,  value);  this.values.add(keyIndex,  value);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          this.values.add(keyIndex,  value);  this.values.add(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	                this.values.add(keyIndex,    value);    this.values.add(keyIndex,  value);	  	compilable	  [FE]  AssertionFailedError  	25	4	add
43	[BUG]  [BUGGY]          this.values.add(keyIndex,  value);  int  keyIndex  =  getIndex(key);  [CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)  [FE]      AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          this.values.add(keyIndex,  value);  int  keyIndex  =  getIndex(key);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	                this.values.add(keyIndex,    value);    int  keyIndex  =  getIndex(key);	  	non-compiled	[CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)	25	None	add
44	[BUG]  [BUGGY]  int  keyIndex  =  getIndex(value,  key);  [CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)  [FE]              AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  int  keyIndex  =  getIndex(value,  key);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	int  keyIndex  =  getIndex(value,  key);	  int    keyIndex    =    getIndex(key,    value);    	non-compiled	[CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)	24	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);  this.keys.add(keyIndex,  value);  this.keys.add(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.add(keyIndex,        value);        this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);  this.keys.add(keyIndex,  value);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
46	[BUG]  [BUGGY]  this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);  this.keys.add(keyIndex,  value);  this.keys.add(keyIndex,  value);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);  this.keys.add(keyIndex,  value);  this.keys.add(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.add(keyIndex,        value);        this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);  this.keys.add(keyIndex,  value);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
47	[BUG]  [BUGGY]  this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);  this.keys.put(keyIndex,  value);  this.keys.add(keyIndex,  value);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);  this.keys.put(keyIndex,  value);  this.keys.add(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.add(keyIndex,        value);        this.keys.add(keyIndex,    value);    this.keys.put(keyIndex,  value);  this.keys.add(keyIndex,  value);	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);  this.keys.add(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.add(keyIndex,        value);        this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
49	[BUG]  [BUGGY]  this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);  this.keys.add(keyIndex,  value);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);  this.keys.add(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.add(keyIndex,        value);        this.keys.add(keyIndex,    value);    this.keys.add(keyIndex,  value);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  values  =  new  ArrayList(this.keys.size()  -  1);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	ArrayList  values  =  new  ArrayList(this.keys.size()  -  1);	          ArrayList    values    =    new    ArrayList(this.keys.size());    	compilable	  [FE]  AssertionFailedError  	32	4	replace
51	[BUG]  [BUGGY]  ArrayList  values  =  new  ArrayList(this.keys.size()  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  values  =  new  ArrayList(this.keys.size()  -  1);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	ArrayList  values  =  new  ArrayList(this.keys.size()  -  1);	          ArrayList    values    =    new    ArrayList(this.keys.size());    	compilable	  [FE]  AssertionFailedError  	32	4	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  values  =  new  ArrayList(this.values.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	ArrayList  values  =  new  ArrayList(this.values.size());	          ArrayList    values    =    new    ArrayList(this.keys.size());    	compilable	  [FE]  AssertionFailedError  	32	4	replace
53	[BUG]  [BUGGY]  ArrayList  values  =  new  ArrayList(this.values.size());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  values  =  new  ArrayList(this.values.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	ArrayList  values  =  new  ArrayList(this.values.size());	          ArrayList    values    =    new    ArrayList(this.keys.size());    	compilable	  [FE]  AssertionFailedError  	32	4	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex,  key);  this.keys.add(keyIndex,  key);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.add(keyIndex,    key);    this.keys.add(keyIndex,  key);	  	compilable	  [FE]  AssertionFailedError  	36	4	add
55	[BUG]  [BUGGY]  this.keys.add(keyIndex,  key);  this.keys.add(keyIndex,  key);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex,  key);  this.keys.add(keyIndex,  key);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.add(keyIndex,    key);    this.keys.add(keyIndex,  key);	  	compilable	  [FE]  AssertionFailedError  	36	4	add
56	[BUG]  [BUGGY]  this.keys.add(keyIndex,  key);  int  keyIndex  =  getIndex(key);  [CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)  [FE]      AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex,  key);  int  keyIndex  =  getIndex(key);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.add(keyIndex,    key);    int  keyIndex  =  getIndex(key);	  	non-compiled	[CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)	36	None	add
57	[BUG]  [BUGGY]  this.keys.add(keyIndex,  key);  ArrayList  keys  =  this.keys.get(keyIndex);  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex,  key);  ArrayList  keys  =  this.keys.get(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.add(keyIndex,    key);    ArrayList  keys  =  this.keys.get(keyIndex);	  	non-compiled	[CE]  incompatible  types	36	None	add
58	[BUG]  [BUGGY]          ArrayList  values  =  new  ArrayList(this.keys.size());  ArrayList  values  =  new  ArrayList(this.keys.size());  [CE]  variable  values  is  already  defined  in  method  setValue(Comparable,Number)  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          ArrayList  values  =  new  ArrayList(this.keys.size());  ArrayList  values  =  new  ArrayList(this.keys.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	                ArrayList    values    =    new    ArrayList(this.keys.size());    ArrayList  values  =  new  ArrayList(this.keys.size());	  	non-compiled	[CE]  variable  values  is  already  defined  in  method  setValue(Comparable,Number)	31	None	add
59	[BUG]  [BUGGY]          ArrayList  values  =  new  ArrayList(this.keys.size());  List  values  =  new  ArrayList(this.keys.size());  [CE]  variable  values  is  already  defined  in  method  setValue(Comparable,Number)  [FE]      AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          ArrayList  values  =  new  ArrayList(this.keys.size());  List  values  =  new  ArrayList(this.keys.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	                ArrayList    values    =    new    ArrayList(this.keys.size());    List  values  =  new  ArrayList(this.keys.size());	  	non-compiled	[CE]  variable  values  is  already  defined  in  method  setValue(Comparable,Number)	31	None	add
60	[BUG]  [BUGGY]          ArrayList  values  =  new  ArrayList(this.keys.size());  ArrayList  values  =  new  ArrayList(this.values.size());  [CE]  variable  values  is  already  defined  in  method  setValue(Comparable,Number)  [FE]        AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          ArrayList  values  =  new  ArrayList(this.keys.size());  ArrayList  values  =  new  ArrayList(this.values.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	                ArrayList    values    =    new    ArrayList(this.keys.size());    ArrayList  values  =  new  ArrayList(this.values.size());	  	non-compiled	[CE]  variable  values  is  already  defined  in  method  setValue(Comparable,Number)	31	None	add
61	[BUG]  [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList(this.keys.size());  ArrayList  keys  =  new  ArrayList(this.keys.size());  [CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList(this.keys.size());  ArrayList  keys  =  new  ArrayList(this.keys.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear();        ArrayList    keys    =    new    ArrayList(this.keys.size());    ArrayList  keys  =  new  ArrayList(this.keys.size());	  	non-compiled	[CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)	3	None	add
62	[BUG]  [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList(this.keys.size());  this.keys.clear();  ArrayList  keys  =  new  ArrayList(this.keys.size());  [CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList(this.keys.size());  this.keys.clear();  ArrayList  keys  =  new  ArrayList(this.keys.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear();        ArrayList    keys    =    new    ArrayList(this.keys.size());    this.keys.clear();  ArrayList  keys  =  new  ArrayList(this.keys.size());	  	non-compiled	[CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)	3	None	add
63	[BUG]  [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList(this.keys.size());  ArrayList  keys  =  new  ArrayList(this.keys.size());  this.keys.clear();  [CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList(this.keys.size());  ArrayList  keys  =  new  ArrayList(this.keys.size());  this.keys.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear();        ArrayList    keys    =    new    ArrayList(this.keys.size());    ArrayList  keys  =  new  ArrayList(this.keys.size());  this.keys.clear();	  	non-compiled	[CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)	3	None	add
64	[BUG]  [BUGGY]  this.values.add(keyIndex);  [CE]  no  suitable  method  found  for  add(int)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.values.add(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.values.add(keyIndex);	          this.values.clear();    	non-compiled	[CE]  no  suitable  method  found  for  add(int)	28	None	replace
65	[BUG]  [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList();  this.keys.clear();  ArrayList  keys  =  new  ArrayList();  this.keys.clear();  [CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList();  this.keys.clear();  ArrayList  keys  =  new  ArrayList();  this.keys.clear();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear();        ArrayList    keys    =    new    ArrayList();    this.keys.clear();    ArrayList  keys  =  new  ArrayList();  this.keys.clear();	  	non-compiled	[CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)	5	None	add
66	[BUG]  [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList();  this.keys.clear();  this.keys.clear();  ArrayList  keys  =  new  ArrayList();  [CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList();  this.keys.clear();  this.keys.clear();  ArrayList  keys  =  new  ArrayList();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear();        ArrayList    keys    =    new    ArrayList();    this.keys.clear();    this.keys.clear();  ArrayList  keys  =  new  ArrayList();	  	non-compiled	[CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)	5	None	add
67	[BUG]  [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList();  this.keys.clear();  ArrayList  keys  =  new  ArrayList();  [CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList();  this.keys.clear();  ArrayList  keys  =  new  ArrayList();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear();        ArrayList    keys    =    new    ArrayList();    this.keys.clear();    ArrayList  keys  =  new  ArrayList();	  	non-compiled	[CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)	5	None	add
68	[BUG]  [BUGGY]  int  keyIndex  =  getValueIndex(key,  value);  [CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  int  keyIndex  =  getValueIndex(key,  value);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	int  keyIndex  =  getValueIndex(key,  value);	  int    keyIndex    =    getValueIndex(key);    	non-compiled	[CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)	16	None	replace
69	[BUG]  [BUGGY]  this.keys.put(key,  value);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.put(key,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.put(key,  value);	  this.keys.put(keyIndex,    value);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
70	[BUG]  [BUGGY]  int  valueIndex  =  getIndex(value,  0);  [CE]  method  getIndex  in  class  DefaultKeyedValues  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  int  valueIndex  =  getIndex(value,  0);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	int  valueIndex  =  getIndex(value,  0);	  int    valueIndex    =    getIndex(value,    index);    	non-compiled	[CE]  method  getIndex  in  class  DefaultKeyedValues  cannot  be  applied  to  given  types;	8	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  keys  =  new  ArrayList();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	ArrayList  keys  =  new  ArrayList();	  this.keys.clear();    this.keys.clear();    	compilable	  [FE]  AssertionFailedError  	2	4	replace
72	[BUG]  [BUGGY]  ArrayList  keys  =  new  ArrayList();  [FE]  AssertionFailedError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  keys  =  new  ArrayList();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	ArrayList  keys  =  new  ArrayList();	  this.keys.clear();    this.keys.clear();    	compilable	  [FE]  AssertionFailedError  	2	4	replace
73	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    this.keys.clear();  ArrayList  keys  =  new  ArrayList();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.clear();        this.keys.clear();    ArrayList  keys  =  new  ArrayList();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	15	add
74	[BUG]  [BUGGY]  this.keys.clear();    this.keys.clear();  ArrayList  keys  =  new  ArrayList();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    this.keys.clear();  ArrayList  keys  =  new  ArrayList();  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear();        this.keys.clear();    ArrayList  keys  =  new  ArrayList();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	15	add
75	[BUG]  [BUGGY]          this.values.clear();  ArrayList  values  =  this.values.get(keyIndex);  [CE]  incompatible  types  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          this.values.clear();  ArrayList  values  =  this.values.get(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	                this.values.clear();    ArrayList  values  =  this.values.get(keyIndex);	  	non-compiled	[CE]  incompatible  types	27	None	add
76	[BUG]  [BUGGY]  ArrayList  values  =  this.indexMap.get(keyIndex,  keyIndex);  [CE]  no  suitable  method  found  for  get(int,int)  [FE]            AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  ArrayList  values  =  this.indexMap.get(keyIndex,  keyIndex);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	ArrayList  values  =  this.indexMap.get(keyIndex,  keyIndex);	  ArrayList    values    =    this.indexMap.get(keyIndex,    value);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,int)	11	None	replace
77	[BUG]  [BUGGY]  Integer  value  =  getIndex(value);  [CE]  variable  value  is  already  defined  in  method  setValue(Comparable,Number)  [FE]        AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  Integer  value  =  getIndex(value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	Integer  value  =  getIndex(value);	          Integer    value    =    getIndex(keyIndex);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  setValue(Comparable,Number)	20	None	replace
78	[BUG]  [BUGGY]  Integer  value  =  getIndex(keyIndex  -  1);  [CE]  variable  value  is  already  defined  in  method  setValue(Comparable,Number)  [FE]          AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  Integer  value  =  getIndex(keyIndex  -  1);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	Integer  value  =  getIndex(keyIndex  -  1);	          Integer    value    =    getIndex(keyIndex);    	non-compiled	[CE]  variable  value  is  already  defined  in  method  setValue(Comparable,Number)	20	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.set(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.set(keyIndex,        value);        this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);	  	compilable	  [FE]  AssertionFailedError  	17	4	add
80	[BUG]  [BUGGY]  this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.set(keyIndex,  value);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);  this.keys.set(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.set(keyIndex,        value);        this.keys.set(keyIndex,    value);    this.keys.set(keyIndex,  value);	  	compilable	  [FE]  AssertionFailedError  	17	4	add
81	[BUG]  [BUGGY]  this.values.add(index,  value);  [CE]  cannot  find  symbol  index  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.values.add(index,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.values.add(index,  value);	          this.values.add(keyIndex,    value);    	non-compiled	[CE]  cannot  find  symbol  index	26	None	replace
82	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.values.remove(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.values.remove(keyIndex);	          this.values.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  	28	14	replace
83	[BUG]  [BUGGY]  this.values.remove(keyIndex);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.values.remove(keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.values.remove(keyIndex);	          this.values.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  	28	14	replace
84	[BUG]  [BUGGY]  int  keyIndex  =  getIndex(value);  [CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)  [FE]              AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  int  keyIndex  =  getIndex(value);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	int  keyIndex  =  getIndex(value);	  int    keyIndex    =    getIndex(key,    value);    	non-compiled	[CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)	24	None	replace
85	[BUG]  [BUGGY]  int  valueIndex  =  getValueIndex(value,  this.indexMap);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  int  valueIndex  =  getValueIndex(value,  this.indexMap);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	int  valueIndex  =  getValueIndex(value,  this.indexMap);	  int    valueIndex    =    getValueIndex(value);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
86	[BUG]  [BUGGY]  this.keys.add(0,  keyIndex);  [CE]  no  suitable  method  found  for  add(int,int)  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(0,  keyIndex);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.add(0,  keyIndex);	  this.keys.add(keyIndex,    key);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,int)	37	None	replace
87	[BUG]  [BUGGY]  this.keys.put(keyIndex,  key);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.put(keyIndex,  key);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.put(keyIndex,  key);	  this.keys.put(keyIndex,    value);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
88	[BUG]  [BUGGY]          this.values.add(keyIndex,  value);  this.values.remove(keyIndex,  value);  [CE]  no  suitable  method  found  for  remove(int,Number)  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]          this.values.add(keyIndex,  value);  this.values.remove(keyIndex,  value);  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	                this.values.add(keyIndex,    value);    this.values.remove(keyIndex,  value);	  	non-compiled	[CE]  no  suitable  method  found  for  remove(int,Number)	25	None	add
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex,  key);  ArrayList  keys  =  new  ArrayList(this.keys.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	add	this.keys.add(keyIndex,    key);    ArrayList  keys  =  new  ArrayList(this.keys.size());	  	compilable	  [FE]  AssertionFailedError  	36	4	add
90	[BUG]  [BUGGY]  this.keys.add(keyIndex,  key);  ArrayList  keys  =  new  ArrayList(this.keys.size());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.add(keyIndex,  key);  ArrayList  keys  =  new  ArrayList(this.keys.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.add(keyIndex,    key);    ArrayList  keys  =  new  ArrayList(this.keys.size());	  	compilable	  [FE]  AssertionFailedError  	36	4	add
91	[BUG]  [BUGGY]  int  keyIndex  =  getIndex(key);  Int  valueIndex  =  getIndex(keyIndex);  [CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)  [FE]          AssertionFailedError      [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  int  keyIndex  =  getIndex(key);  Int  valueIndex  =  getIndex(keyIndex);  [BUGGY]      this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	int  keyIndex  =  getIndex(key);  Int  valueIndex  =  getIndex(keyIndex);	          int    valueIndex    =    getIndex(key);    Int    valueIndex    =    getIndex(key);    	non-compiled	[CE]  variable  keyIndex  is  already  defined  in  method  setValue(Comparable,Number)	10	None	replace
92	[BUG]  [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList(this.keys.size());  ArrayList  keys  =  new  ArrayList(this.keys.size());  this.keys.clear();  ArrayList  keys  =  new  ArrayList(this.keys.size());  [CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'key'  argument.     ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {      [BUGGY]  this.keys.clear();    ArrayList  keys  =  new  ArrayList(this.keys.size());  ArrayList  keys  =  new  ArrayList(this.keys.size());  this.keys.clear();  ArrayList  keys  =  new  ArrayList(this.keys.size());  [BUGGY]      this.values.set(keyIndex,  value);  }  else  {  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.2773500981126146	234	234	4	replace	this.keys.clear();        ArrayList    keys    =    new    ArrayList(this.keys.size());    ArrayList  keys  =  new  ArrayList(this.keys.size());  this.keys.clear();  ArrayList  keys  =  new  ArrayList(this.keys.size());	  	non-compiled	[CE]  variable  keys  is  already  defined  in  method  setValue(Comparable,Number)	3	None	add
