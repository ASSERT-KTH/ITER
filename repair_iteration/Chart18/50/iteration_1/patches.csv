bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  this.columnKeys.indexOf(key);  int  columnKeys  =  this.columnKeys.indexOf(key);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.columnKeys.indexOf(key);  int  columnKeys  =  this.columnKeys.indexOf(key);  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.columnKeys.indexOf(key);    int  columnKeys  =  this.columnKeys.indexOf(key);	  	non-compiled	[CE]  unreachable  statement	1	None	add
2	[BUG]  [BUGGY]  return  this.columnKeys.indexOf(key);  int  columnKeysIndex  =  this.columnKeys.indexOf(key);  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.columnKeys.indexOf(key);  int  columnKeysIndex  =  this.columnKeys.indexOf(key);  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.columnKeys.indexOf(key);    int  columnKeysIndex  =  this.columnKeys.indexOf(key);	  	non-compiled	[CE]  unreachable  statement	1	None	add
3	[BUG]  [BUGGY]  return  this.columnKeys.indexOf(key);  Integer  columnKeys  =  getColumnKeys();  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.columnKeys.indexOf(key);  Integer  columnKeys  =  getColumnKeys();  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.columnKeys.indexOf(key);    Integer  columnKeys  =  getColumnKeys();	  	non-compiled	[CE]  incompatible  types	1	None	add
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.columnKeys.indexOf(key)+  1;  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	add	return  this.columnKeys.indexOf(key)+  1;	  return    this.columnKeys.indexOf(key);    	compilable	  [FE]  AssertionFailedError  	2	25	replace
5	[BUG]  [BUGGY]  return  this.columnKeys.indexOf(key)+  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.columnKeys.indexOf(key)+  1;  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return  this.columnKeys.indexOf(key)+  1;	  return    this.columnKeys.indexOf(key);    	compilable	  [FE]  AssertionFailedError  	2	25	replace
6	[BUG]  [BUGGY]      int  rowKeys  =  this.columnKeys.size();  int  rowKeys  =  this.columnKeys.size();  [CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  this.columnKeys.size();  int  rowKeys  =  this.columnKeys.size();  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    this.columnKeys.size();    int  rowKeys  =  this.columnKeys.size();	  	non-compiled	[CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)	4	None	add
7	[BUG]  [BUGGY]      int  rowKeys  =  this.columnKeys.size();  Integer  rowKeys  =  this.columnKeys.size();  [CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  this.columnKeys.size();  Integer  rowKeys  =  this.columnKeys.size();  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    this.columnKeys.size();    Integer  rowKeys  =  this.columnKeys.size();	  	non-compiled	[CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)	4	None	add
8	[BUG]  [BUGGY]      int  rowKeys  =  getRowIndex(key);  int  rowKeys  =  getRowIndex(key);  [CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  getRowIndex(key);  int  rowKeys  =  getRowIndex(key);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    getRowIndex(key);    int  rowKeys  =  getRowIndex(key);	  	non-compiled	[CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)	6	None	add
9	[BUG]  [BUGGY]      int  rowKeys  =  getRowIndex(key);  int  rowKeys  =  getColumnIndex(key);  [CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  getRowIndex(key);  int  rowKeys  =  getColumnIndex(key);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    getRowIndex(key);    int  rowKeys  =  getColumnIndex(key);	  	non-compiled	[CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)	6	None	add
10	[BUG]  [BUGGY]  this.rowKeys.add(this.columnKeys);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  this.rowKeys.add(this.columnKeys);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	this.rowKeys.add(this.columnKeys);	      this.rowKeys.add(key);    	non-compiled	[CE]  missing  return  statement	17	None	replace
11	[BUG]  [BUGGY]  this.rowKeys.add(this.rowKeys);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  this.rowKeys.add(this.rowKeys);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	this.rowKeys.add(this.rowKeys);	      this.rowKeys.add(key);    	non-compiled	[CE]  missing  return  statement	17	None	replace
12	[BUG]  [BUGGY]  int  rowKeys  =  this.columnKeys.size()  -  1;  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  int  rowKeys  =  this.columnKeys.size()  -  1;  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	int  rowKeys  =  this.columnKeys.size()  -  1;	      int    rowKeys    =    this.columnKeys.size();    	non-compiled	[CE]  missing  return  statement	5	None	replace
13	[BUG]  [BUGGY]      int  rowKeys  =  this.columnKeys.indexOf(key);  int  rowKeys  =  this.columnKeys.indexOf(key);  [CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  this.columnKeys.indexOf(key);  int  rowKeys  =  this.columnKeys.indexOf(key);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    this.columnKeys.indexOf(key);    int  rowKeys  =  this.columnKeys.indexOf(key);	  	non-compiled	[CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)	12	None	add
14	[BUG]  [BUGGY]      int  rowKeys  =  this.columnKeys.indexOf(key);  Int  rowKeys  =  this.columnKeys.indexOf(key);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  this.columnKeys.indexOf(key);  Int  rowKeys  =  this.columnKeys.indexOf(key);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    this.columnKeys.indexOf(key);    Int  rowKeys  =  this.columnKeys.indexOf(key);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.rowKeys.indexOf(key)/  1;  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	add	return  this.rowKeys.indexOf(key)/  1;	  return    this.rowKeys.indexOf(key)+    1;    	compilable	  [FE]  AssertionFailedError  	11	4	replace
16	[BUG]  [BUGGY]  return  this.rowKeys.indexOf(key)/  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.rowKeys.indexOf(key)/  1;  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return  this.rowKeys.indexOf(key)/  1;	  return    this.rowKeys.indexOf(key)+    1;    	compilable	  [FE]  AssertionFailedError  	11	4	replace
17	[BUG]  [BUGGY]  int  rowKeys  =  this.rowKeys.size()  -  1;  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  int  rowKeys  =  this.rowKeys.size()  -  1;  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	int  rowKeys  =  this.rowKeys.size()  -  1;	      int    rowKeys    =    this.rowKeys.size();    	non-compiled	[CE]  missing  return  statement	9	None	replace
18	[BUG]  [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  int  rowKeys  =  this.rowKeys.indexOf(key)+  1;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  int  rowKeys  =  this.rowKeys.indexOf(key)+  1;  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.rowKeys.indexOf(key)+    1;    int  rowKeys  =  this.rowKeys.indexOf(key)+  1;	  	non-compiled	[CE]  unreachable  statement	10	None	add
19	[BUG]  [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  return  this.rowKeys.indexOf(key)+  1;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  return  this.rowKeys.indexOf(key)+  1;  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.rowKeys.indexOf(key)+    1;    return  this.rowKeys.indexOf(key)+  1;	  	non-compiled	[CE]  unreachable  statement	10	None	add
20	[BUG]  [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  int  rowKeys  =  getRowIndex(key);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  int  rowKeys  =  getRowIndex(key);  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.rowKeys.indexOf(key)+    1;    int  rowKeys  =  getRowIndex(key);	  	non-compiled	[CE]  unreachable  statement	10	None	add
21	[BUG]  [BUGGY]      int  rowKeys  =  this.rowKeys.size();  int  rowKeys  =  this.rowKeys.size();  [CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  this.rowKeys.size();  int  rowKeys  =  this.rowKeys.size();  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    this.rowKeys.size();    int  rowKeys  =  this.rowKeys.size();	  	non-compiled	[CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)	8	None	add
22	[BUG]  [BUGGY]      int  rowKeys  =  this.rowKeys.size();  int  rowKeys  =  this.columnKeys.size();  [CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  this.rowKeys.size();  int  rowKeys  =  this.columnKeys.size();  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    this.rowKeys.size();    int  rowKeys  =  this.columnKeys.size();	  	non-compiled	[CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)	8	None	add
23	[BUG]  [BUGGY]      int  rowKeys  =  this.rowKeys.indexOf(key);  int  rowKeys  =  this.rowKeys.indexOf(key);  [CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  this.rowKeys.indexOf(key);  int  rowKeys  =  this.rowKeys.indexOf(key);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    this.rowKeys.indexOf(key);    int  rowKeys  =  this.rowKeys.indexOf(key);	  	non-compiled	[CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)	14	None	add
24	[BUG]  [BUGGY]      int  rowKeys  =  this.rowKeys.indexOf(key);  int  rowKeys  =  this.columnKeys.indexOf(key);  [CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  this.rowKeys.indexOf(key);  int  rowKeys  =  this.columnKeys.indexOf(key);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    this.rowKeys.indexOf(key);    int  rowKeys  =  this.columnKeys.indexOf(key);	  	non-compiled	[CE]  variable  rowKeys  is  already  defined  in  method  getRowIndex(Comparable)	14	None	add
25	[BUG]  [BUGGY]  int  rowKeys  =  getRowIndex(this.rowKeys);  [CE]  method  getRowIndex  in  class  DefaultKeyedValues2D  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  int  rowKeys  =  getRowIndex(this.rowKeys);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	int  rowKeys  =  getRowIndex(this.rowKeys);	      int    rowKeys    =    getRowIndex(key);    	non-compiled	[CE]  method  getRowIndex  in  class  DefaultKeyedValues2D  cannot  be  applied  to  given  types;	7	None	replace
26	[BUG]  [BUGGY]  int  rowKeys  =  getRowIndex(this.columnKeys);  [CE]  method  getRowIndex  in  class  DefaultKeyedValues2D  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  int  rowKeys  =  getRowIndex(this.columnKeys);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	int  rowKeys  =  getRowIndex(this.columnKeys);	      int    rowKeys    =    getRowIndex(key);    	non-compiled	[CE]  method  getRowIndex  in  class  DefaultKeyedValues2D  cannot  be  applied  to  given  types;	7	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      this.rowKeys.add(key);  this.rowKeys.add(key);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	add	        this.rowKeys.add(key);    this.rowKeys.add(key);	  	compilable	  [FE]  AssertionFailedError  	16	25	add
28	[BUG]  [BUGGY]      this.rowKeys.add(key);  this.rowKeys.add(key);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      this.rowKeys.add(key);  this.rowKeys.add(key);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        this.rowKeys.add(key);    this.rowKeys.add(key);	  	compilable	  [FE]  AssertionFailedError  	16	25	add
29	[BUG]  [BUGGY]      this.rowKeys.add(key);  This.rowKeys.add(key);  [CE]  package  This  does  not  exist  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      this.rowKeys.add(key);  This.rowKeys.add(key);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        this.rowKeys.add(key);    This.rowKeys.add(key);	  	non-compiled	[CE]  package  This  does  not  exist	16	None	add
30	[BUG]  [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  int  rowKeysIndex  =  this.rowKeys.indexOf(key)+  1;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  int  rowKeysIndex  =  this.rowKeys.indexOf(key)+  1;  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.rowKeys.indexOf(key)+    1;    int  rowKeysIndex  =  this.rowKeys.indexOf(key)+  1;	  	non-compiled	[CE]  unreachable  statement	10	None	add
31	[BUG]  [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  int  rowIndex  =  this.rowKeys.indexOf(key)+  1;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  int  rowIndex  =  this.rowKeys.indexOf(key)+  1;  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.rowKeys.indexOf(key)+    1;    int  rowIndex  =  this.rowKeys.indexOf(key)+  1;	  	non-compiled	[CE]  unreachable  statement	10	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      this.rowKeys.add(key);  int  rowKeys  =  this.rowKeys.size();  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	add	        this.rowKeys.add(key);    int  rowKeys  =  this.rowKeys.size();	  	compilable	  [FE]  AssertionFailedError  	16	25	add
33	[BUG]  [BUGGY]      this.rowKeys.add(key);  int  rowKeys  =  this.rowKeys.size();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      this.rowKeys.add(key);  int  rowKeys  =  this.rowKeys.size();  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        this.rowKeys.add(key);    int  rowKeys  =  this.rowKeys.size();	  	compilable	  [FE]  AssertionFailedError  	16	25	add
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  Collections.binarySearch(this.rowKeys,  key);  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	add	return  Collections.binarySearch(this.rowKeys,  key);	      	compilable	  [FE]  AssertionFailedError  	3	4	replace
35	[BUG]  [BUGGY]  return  Collections.binarySearch(this.rowKeys,  key);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  Collections.binarySearch(this.rowKeys,  key);  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return  Collections.binarySearch(this.rowKeys,  key);	      	compilable	  [FE]  AssertionFailedError  	3	4	replace
36	[BUG]  [BUGGY]  return  this.columnKeys.indexOf(key);  int  rowKeys  =  this.columnKeys.indexOf(key);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.columnKeys.indexOf(key);  int  rowKeys  =  this.columnKeys.indexOf(key);  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.columnKeys.indexOf(key);    int  rowKeys  =  this.columnKeys.indexOf(key);	  	non-compiled	[CE]  unreachable  statement	1	None	add
37	[BUG]  [BUGGY]  return  this.columnKeys.indexOf(key);  Integer  columnKeys  =  this.columnKeys.indexOf(key);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.columnKeys.indexOf(key);  Integer  columnKeys  =  this.columnKeys.indexOf(key);  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.columnKeys.indexOf(key);    Integer  columnKeys  =  this.columnKeys.indexOf(key);	  	non-compiled	[CE]  incompatible  types	1	None	add
38	[BUG]  [BUGGY]      int  rowKeys  =  this.columnKeys.size();  Int  rowKeys  =  this.columnKeys.size();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  this.columnKeys.size();  Int  rowKeys  =  this.columnKeys.size();  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    this.columnKeys.size();    Int  rowKeys  =  this.columnKeys.size();	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
39	[BUG]  [BUGGY]  this.rowKeys.add(this.rowKey);  [CE]  cannot  find  symbol  rowKey  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  this.rowKeys.add(this.rowKey);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	this.rowKeys.add(this.rowKey);	      this.rowKeys.add(key);    	non-compiled	[CE]  cannot  find  symbol  rowKey	17	None	replace
40	[BUG]  [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  int  rowKey  =  this.rowKeys.indexOf(key)+  1;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.rowKeys.indexOf(key)+  1;  int  rowKey  =  this.rowKeys.indexOf(key)+  1;  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.rowKeys.indexOf(key)+    1;    int  rowKey  =  this.rowKeys.indexOf(key)+  1;	  	non-compiled	[CE]  unreachable  statement	10	None	add
41	[BUG]  [BUGGY]      int  rowKeys  =  this.rowKeys.size();  Int  rowKeys  =  this.rowKeys.size();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  this.rowKeys.size();  Int  rowKeys  =  this.rowKeys.size();  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    this.rowKeys.size();    Int  rowKeys  =  this.rowKeys.size();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
42	[BUG]  [BUGGY]      int  rowKeys  =  getRowIndex(key);  Int  rowKeys  =  getRowIndex(key);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]      int  rowKeys  =  getRowIndex(key);  Int  rowKeys  =  getRowIndex(key);  [BUGGY]    return  this.rowKeys.indexOf(key);  }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	        int    rowKeys    =    getRowIndex(key);    Int  rowKeys  =  getRowIndex(key);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
43	[BUG]  [BUGGY]  return  this.columnKeys.indexOf(key);  int  columnKey  =  this.columnKeys.indexOf(key);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.columnKeys.indexOf(key);  int  columnKey  =  this.columnKeys.indexOf(key);  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.columnKeys.indexOf(key);    int  columnKey  =  this.columnKeys.indexOf(key);	  	non-compiled	[CE]  unreachable  statement	1	None	add
44	[BUG]  [BUGGY]  return  this.columnKeys.indexOf(key);  this.columnKeys.indexOf(key);  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    public  int  getRowIndex(Comparable  key)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'key'  argument.   ");  }  if  (this.sortRowKeys)  {  return  Collections.binarySearch(this.rowKeys,  key);  }  else  {    [BUGGY]  return  this.columnKeys.indexOf(key);  this.columnKeys.indexOf(key);  [BUGGY]    }  }  [CLASS]  DefaultKeyedValues2D  [METHOD]  getRowIndex  [RETURN_TYPE]  int  Comparable  key  [VARIABLES]  List  columnKeys  rowKeys  rows  Comparable  key  boolean  sortRowKeys  long  serialVersionUID  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues2D.java	0.20851441405707477	189	189	4	replace	return    this.columnKeys.indexOf(key);    this.columnKeys.indexOf(key);	  	non-compiled	[CE]  unreachable  statement	1	None	add
