bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]  this.keys.add(value);  [BUGGY]  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	add	this.keys.add(value);	this.keys.add(key);  	compilable	  [FE]  NullPointerException  	53	13	replace
2	[BUG]  [BUGGY]  this.keys.add(value);  [FE]  NullPointerException  [FE]    AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]  this.keys.add(value);  [BUGGY]  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	replace	this.keys.add(value);	this.keys.add(key);  	compilable	  [FE]  NullPointerException  	53	13	replace
3	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    [BUGGY]  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	add	  	this.keys.add(key);  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	53	27	replace
4	[BUG]  [BUGGY]    [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    [BUGGY]  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	replace	  	this.keys.add(key);  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	53	27	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  new  Integer(this.values.size()  -  1));  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	add	    this.indexMap.put(key,  new  Integer(this.values.size()  -  1));		compilable	  [FE]  AssertionFailedError  	54	4	add
6	[BUG]  [BUGGY]    this.indexMap.put(key,  new  Integer(this.values.size()  -  1));  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  new  Integer(this.values.size()  -  1));  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	replace	    this.indexMap.put(key,  new  Integer(this.values.size()  -  1));		compilable	  [FE]  AssertionFailedError  	54	4	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  new  Integer(this.indexMap.size()  -  1));  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	add	    this.indexMap.put(key,  new  Integer(this.indexMap.size()  -  1));		compilable	  [FE]  AssertionFailedError  	54	4	add
8	[BUG]  [BUGGY]    this.indexMap.put(key,  new  Integer(this.indexMap.size()  -  1));  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  new  Integer(this.indexMap.size()  -  1));  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	replace	    this.indexMap.put(key,  new  Integer(this.indexMap.size()  -  1));		compilable	  [FE]  AssertionFailedError  	54	4	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  value);  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	add	    this.indexMap.put(key,  value);		compilable	  [FE]  AssertionFailedError  	54	4	add
10	[BUG]  [BUGGY]    this.indexMap.put(key,  value);  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  value);  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	replace	    this.indexMap.put(key,  value);		compilable	  [FE]  AssertionFailedError  	54	4	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  new  Integer(0));  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	add	    this.indexMap.put(key,  new  Integer(0));		compilable	  [FE]  AssertionFailedError  	54	4	add
12	[BUG]  [BUGGY]    this.indexMap.put(key,  new  Integer(0));  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  new  Integer(0));  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	replace	    this.indexMap.put(key,  new  Integer(0));		compilable	  [FE]  AssertionFailedError  	54	4	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	add	    this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));		compilable	  [FE]  AssertionFailedError  	54	4	add
14	[BUG]  [BUGGY]    this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	replace	    this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));		compilable	  [FE]  AssertionFailedError  	54	4	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  new  Integer(this.values.size()));  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	add	    this.indexMap.put(key,  new  Integer(this.values.size()));		compilable	  [FE]  AssertionFailedError  	54	4	add
16	[BUG]  [BUGGY]    this.indexMap.put(key,  new  Integer(this.values.size()));  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]    this.indexMap.put(key,  new  Integer(this.values.size()));  [BUGGY]  this.keys.add(key);  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	replace	    this.indexMap.put(key,  new  Integer(this.values.size()));		compilable	  [FE]  AssertionFailedError  	54	4	add
17	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]    AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]  this.keys.add(keyIndex,  value);  [BUGGY]  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	add	this.keys.add(keyIndex,  value);	this.keys.add(key);  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	53	39	replace
18	[BUG]  [BUGGY]  this.keys.add(keyIndex,  value);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]    AssertionFailedError  [CONTEXT]  public  void  setValue(Comparable  key,  Number  value)  {  if  (key  ==  null)  {  throw  new  IllegalArgumentException( "Null  'key'  argument. ");  }  int  keyIndex  =  getIndex(key);  if  (keyIndex  >=  0)  {  this.keys.set(keyIndex,  key);  this.values.set(keyIndex,  value);  }  else  {  [BUGGY]  this.keys.add(keyIndex,  value);  [BUGGY]  this.values.add(value);  this.indexMap.put(key,  new  Integer(this.keys.size()  -  1));  }  }  [CLASS]  DefaultKeyedValues  [METHOD]  setValue  [RETURN_TYPE]  void  Comparable  key  Number  value  [VARIABLES]  Comparable  key  boolean  Number  value  HashMap  indexMap  ArrayList  keys  values  long  serialVersionUID  int  keyIndex  	projects/Chart18/source/org/jfree/data/DefaultKeyedValues.java	0.32025630761017426	238	238	4	replace	this.keys.add(keyIndex,  value);	this.keys.add(key);  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	53	39	replace
