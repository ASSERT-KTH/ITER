bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
2	[BUG]  [BUGGY]  StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
3	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
4	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	204	None	replace
5	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	135	None	replace
6	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	135	None	replace
7	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	135	None	replace
8	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	135	None	replace
9	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	135	None	replace
10	[BUG]  [BUGGY]  out.write( "Lenient ",  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient ",  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient ",  stackSize);	  out.write(   "Lenient   ");    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
11	[BUG]  [BUGGY]  out.write( "Lenient. ");  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient. ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient. ");	  out.write(   "Lenient   ");    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
12	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  + "_ ";  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  + "_ ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  + "_ ";	  this.deferredName    =    getDeferredName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
13	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  + "/ ";  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  + "/ ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  + "/ ";	  this.deferredName    =    getDeferredName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
14	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  + ",  lenient ";  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  + ",  lenient ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  + ",  lenient ";	  this.deferredName    =    getDeferredName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
15	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  + "- ";  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  + "- ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  + "- ";	  this.deferredName    =    getDeferredName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
16	[BUG]  [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(stackSize!=    0)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
21	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(stackSize!=    0)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
22	[BUG]  [BUGGY]  out.write(this.values.length,  stackSize);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values.length,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values.length,  stackSize);	  out.write(this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
23	[BUG]  [BUGGY]  out.write(this.values.length  +  separator);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values.length  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values.length  +  separator);	  out.write(this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
24	[BUG]  [BUGGY]  out.write(this.values.length  -  separator);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values.length  -  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values.length  -  separator);	  out.write(this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
25	[BUG]  [BUGGY]  out.write(this.values.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values.length  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values.length  -  1);	  out.write(this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
26	[BUG]  [BUGGY]  out.write(this.values,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values,  stackSize);	  out.write(this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
27	[BUG]  [BUGGY]  out.write(this.values.length  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values.length  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values.length  +  1);	  out.write(this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
28	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack[size];  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack[size];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack[size];	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
29	[BUG]  [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
30	[BUG]  [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
31	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
32	[BUG]  [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
33	[BUG]  [BUGGY]  if(separator  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
34	[BUG]  [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
35	[BUG]  [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
36	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
37	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
38	[BUG]  [BUGGY]  int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
39	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
40	[BUG]  [BUGGY]  int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
41	[BUG]  [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
42	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
43	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[6]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[6]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[6]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
44	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
45	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[8]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[8]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[8]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
46	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
47	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]  +  1);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]  +  1);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
48	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
49	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
50	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  separator);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  separator);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
51	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  deferredName);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  deferredName);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
52	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	137	None	replace
53	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	137	None	replace
54	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	137	None	replace
55	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	137	None	replace
56	[BUG]  [BUGGY]  out.write( "Lenient:n ");  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient:n ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient:n ");	  out.write(   "u000   ");    	non-compiled	[CE]  illegal  start  of  expression	220	None	replace
57	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  	129	None	replace
58	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(separator  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(separator  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(separator	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  	129	None	replace
59	[BUG]  [BUGGY]  int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  	129	None	replace
60	[BUG]  [BUGGY]  int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  	129	None	replace
61	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  	129	None	replace
62	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	134	None	replace
63	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  );  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	134	None	replace
64	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	134	None	replace
65	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  );  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	134	None	replace
66	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]  }  );  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	134	None	replace
67	[BUG]  [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
68	[BUG]  [BUGGY]  out.write(stackSize  -  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	194	None	replace
69	[BUG]  [BUGGY]  out.write(stackSize  -  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	194	None	replace
70	[BUG]  [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  out.write('n');  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
71	[BUG]  [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ".equals(this.htmlSafe));  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ".equals(this.htmlSafe));  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ".equals(this.htmlSafe));  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
72	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  separator);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  separator);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
73	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  deferredName);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  deferredName);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
74	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  this.separator);  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  this.separator);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
75	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  this.deferredName);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
76	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  this.separator);  [CE]  illegal  start  of  expression  [FE]                                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  this.separator);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
77	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
78	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
79	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
80	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  separator);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  separator);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
81	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
82	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  deferredName);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  deferredName);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
83	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
84	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
85	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	18	None	replace
86	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	18	None	replace
87	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	18	None	replace
88	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	18	None	replace
89	[BUG]  [BUGGY]  if(separator  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(separator!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
90	[BUG]  [BUGGY]  this.deferredName  =  lenient;  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  lenient;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  lenient;	  this.deferredName    =    DEFERRED_NAME;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
91	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED_NAME  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  DEFERRED_NAME  +  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED_NAME  +  1;	  this.deferredName    =    DEFERRED_NAME;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
92	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED_NAME  +  separator;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  DEFERRED_NAME  +  separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED_NAME  +  separator;	  this.deferredName    =    DEFERRED_NAME;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
93	[BUG]  [BUGGY]  this.deferredName  =  deferredName;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  deferredName;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  deferredName;	  this.deferredName    =    DEFERRED_NAME;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
94	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED_NAME  + "n ";  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  DEFERRED_NAME  + "n ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED_NAME  + "n ";	  this.deferredName    =    DEFERRED_NAME;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
95	[BUG]  [BUGGY]  this.deferredName  =  REPLACEMENT_CHARS;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  REPLACEMENT_CHARS;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  REPLACEMENT_CHARS;	  this.deferredName    =    DEFERRED_NAME;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
96	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    int[size()    ];    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
97	[BUG]  [BUGGY]  if(stackSize!=  0)  {  int[]  stack  =  new  int[size()  ];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  int[]  stack  =  new  int[size()  ];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  int[]  stack  =  new  int[size()  ];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    int[size()    ];    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
98	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    int[size()    ];    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
99	[BUG]  [BUGGY]  safeSerialize(stack,  0,  stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [CE]  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack,  0,  stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack,  0,  stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    int[size()    ];    }    	non-compiled	[CE]  	59	None	replace
100	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    int[size()    ];    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
101	[BUG]  [BUGGY]  if(stackSize!=  0)  {  int  stackSize  =  stackSize;  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  int  stackSize  =  stackSize;  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  int  stackSize  =  stackSize;  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    int[size()    ];    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
102	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(separator!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
103	[BUG]  [BUGGY]  if(separator  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(separator!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
104	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
105	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
106	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
107	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  values[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  values[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  values[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
108	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3,  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3,  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3,  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	5	None	replace
109	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  indent,  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  indent,  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  indent,  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
110	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  indent,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  indent,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  indent,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
111	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[5],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
112	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[6]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[6]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[6]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[5],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
113	[BUG]  [BUGGY]  safeSeparator(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSeparator(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSeparator(stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(separator!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	87	None	replace
114	[BUG]  [BUGGY]  if(stackSize!=  separator)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  separator)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  separator)  {  throw  new  IllegalArgumentException( " ");  }	  if(separator!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
115	[BUG]  [BUGGY]  if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(separator!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
116	[BUG]  [BUGGY]  if(separator!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(separator!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
117	[BUG]  [BUGGY]  if(separator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(separator!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
118	[BUG]  [BUGGY]  if(separator!=  null)  {  throw  new  IllegalArgumentException( " ".equals(this.separator));  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  throw  new  IllegalArgumentException( " ".equals(this.separator));  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  throw  new  IllegalArgumentException( " ".equals(this.separator));  }	  if(separator!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
119	[BUG]  [BUGGY]  if(stackSize!=  separator)  {  throw  new  IllegalArgumentException( " ".equals(this.separator));  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  separator)  {  throw  new  IllegalArgumentException( " ".equals(this.separator));  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  separator)  {  throw  new  IllegalArgumentException( " ".equals(this.separator));  }	  if(separator!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
120	[BUG]  [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
121	[BUG]  [BUGGY]  if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
122	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  stackSize);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
123	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  separator);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  separator);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
124	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stackSize);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stackSize);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
125	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stackSize,  values);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stackSize,  values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stackSize,  values);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
126	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stackSize,  stack[0]);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stackSize,  stack[0]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stackSize,  stack[0]);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
127	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stackSize,  this.values);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stackSize,  this.values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stackSize,  this.values);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
128	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stackSize,  separator);  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stackSize,  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stackSize,  separator);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
129	[BUG]  [BUGGY]  if(lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
130	[BUG]  [BUGGY]  if(values!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
131	[BUG]  [BUGGY]  if(htmlSafe  ==  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe  ==  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe  ==  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
132	[BUG]  [BUGGY]  if(values  ==  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values  ==  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values  ==  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
133	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
134	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
135	[BUG]  [BUGGY]  if(stackSize!=  0)  {  int[]  stack  =  new  int[stackSize];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  int[]  stack  =  new  int[stackSize];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  int[]  stack  =  new  int[stackSize];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
136	[BUG]  [BUGGY]  if(stackSize!=  0)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
137	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
138	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
139	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]  +  1);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
140	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
141	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[8]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[8]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[8]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
142	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(deferred,  0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(deferred,  0);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(deferred,  0);	  this.deferredName    =    getDeferredName(deferred);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
143	[BUG]  [BUGGY]  this.deferredName  =  getLenientName(deferred);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getLenientName(deferred);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getLenientName(deferred);	  this.deferredName    =    getDeferredName(deferred);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
144	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(deferred)+  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(deferred)+  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(deferred)+  1;	  this.deferredName    =    getDeferredName(deferred);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
145	[BUG]  [BUGGY]  out.write(deferredName  -  separator,  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  -  separator,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  -  separator,  stackSize);	  out.write(deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
146	[BUG]  [BUGGY]  out.write(deferredName  -  this.separator);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  -  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  -  this.separator);	  out.write(deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
147	[BUG]  [BUGGY]  out.write(deferredName  -  this.stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  -  this.stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  -  this.stackSize);	  out.write(deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
148	[BUG]  [BUGGY]  out.write(deferredName  -  separator,  this.stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  -  separator,  this.stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  -  separator,  this.stackSize);	  out.write(deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
149	[BUG]  [BUGGY]  out.write(deferredName  -  this.lenient);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  -  this.lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  -  this.lenient);	  out.write(deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
150	[BUG]  [BUGGY]  out.write(deferredName  -  indent);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  -  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  -  indent);	  out.write(deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
151	[BUG]  [BUGGY]  if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
152	[BUG]  [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  0;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
153	[BUG]  [BUGGY]  this.serializeNulls  =(String[])values.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =(String[])values.toArray(new  String[values.size()  ]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =(String[])values.toArray(new  String[values.size()  ]);	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
157	[BUG]  [BUGGY]  int  stackSize  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stack.length;	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  value[i];  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  value[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  value[i];  }	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
159	[BUG]  [BUGGY]  int  stackSize  =  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	185	None	replace
160	[BUG]  [BUGGY]  if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
161	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
162	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
163	[BUG]  [BUGGY]  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
164	[BUG]  [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
165	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  size);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  size);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  size);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
166	[BUG]  [BUGGY]  int[]  stack  =  new  int[size  -  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size  -  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size  -  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
167	[BUG]  [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);  }	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
168	[BUG]  [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
169	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  size);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
170	[BUG]  [BUGGY]  char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
171	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
172	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
173	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
174	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
175	[BUG]  [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
176	[BUG]  [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
177	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
178	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
179	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack.length;	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
180	[BUG]  [BUGGY]  out.write(this.stackSize  +  separator);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.stackSize  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stackSize  +  separator);	  out.write(this.stackSize);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
181	[BUG]  [BUGGY]  out.write(this.stackSize  -  separator);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.stackSize  -  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stackSize  -  separator);	  out.write(this.stackSize);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
182	[BUG]  [BUGGY]  out.write(this.stackSize,  this.separator);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.stackSize,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stackSize,  this.separator);	  out.write(this.stackSize);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
183	[BUG]  [BUGGY]  out.write(this.stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.stackSize  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stackSize  -  1);	  out.write(this.stackSize);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
184	[BUG]  [BUGGY]  out.write(this.stackSize,  stack);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.stackSize,  stack);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stackSize,  stack);	  out.write(this.stackSize);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
185	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	136	None	replace
186	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	136	None	replace
187	[BUG]  [BUGGY]  out.write(stack,  0,  stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack,  0,  stackSize  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack,  0,  stackSize  -  1);	  out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
188	[BUG]  [BUGGY]  out.write(stack,  0,  stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack,  0,  stackSize  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack,  0,  stackSize  +  1);	  out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
189	[BUG]  [BUGGY]  out.write(stack,  0,  this.separator);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack,  0,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack,  0,  this.separator);	  out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
190	[BUG]  [BUGGY]  out.write(this.separator,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator,  0,  stackSize);	  out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
191	[BUG]  [BUGGY]  out.write(stack,  0,  stackSize  -  separator);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack,  0,  stackSize  -  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack,  0,  stackSize  -  separator);	  out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
192	[BUG]  [BUGGY]  out.write(stack,  0,  stackSize  +  separator);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack,  0,  stackSize  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack,  0,  stackSize  +  separator);	  out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
193	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
194	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
195	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
196	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
197	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
198	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
199	[BUG]  [BUGGY]  out.write(this.separator,  stackSize);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator,  stackSize);	  out.write(this.separator);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
200	[BUG]  [BUGGY]  out.write(this.separator,  this.stackSize);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator,  this.stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator,  this.stackSize);	  out.write(this.separator);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
201	[BUG]  [BUGGY]  out.write(this.separator  +  separator);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator  +  separator);	  out.write(this.separator);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
202	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  2);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  2);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  2);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
203	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5]  +  1);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5]  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5]  +  1);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
204	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  3);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  3);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  3);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
205	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  *  1);  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  *  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  *  1);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
206	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  1);  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  1);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
207	[BUG]  [BUGGY]  out.write(this.deferredName,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName,  stackSize);	  out.write(this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
208	[BUG]  [BUGGY]  out.write(this.deferredName,  this.separator);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName,  this.separator);	  out.write(this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
209	[BUG]  [BUGGY]  out.write(this.deferredName,  indent);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName,  indent);	  out.write(this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
210	[BUG]  [BUGGY]  out.write(this.deferredName,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName,  0,  stackSize);	  out.write(this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
211	[BUG]  [BUGGY]  out.write(this.deferredName,  this.stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName,  this.stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName,  this.stackSize);	  out.write(this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
212	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	65	None	replace
213	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	65	None	replace
214	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4];  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	65	None	replace
215	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4];  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	65	None	replace
216	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
217	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  values);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  values);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
218	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1]);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1]);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
219	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[7]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[7]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[7]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[6]);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
220	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[9]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[9]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[9]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[6]);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
221	[BUG]  [BUGGY]  (stackSize  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  (stackSize  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	(stackSize  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	  (stackSize    >>    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	89	None	replace
222	[BUG]  [BUGGY]  (stackSize  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  (stackSize  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	(stackSize  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  (stackSize    >>    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	89	None	replace
223	[BUG]  [BUGGY]  (stackSize  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  (stackSize  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	(stackSize  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }	  (stackSize    >>    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
224	[BUG]  [BUGGY]  (stackSize!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  (stackSize!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	(stackSize!=  0))  {  throw  new  IllegalArgumentException( " ");  }	  (stackSize    >>    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	89	None	replace
225	[BUG]  [BUGGY]  (stackSize  <  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  (stackSize  <  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	(stackSize  <  0))  {  throw  new  IllegalArgumentException( " ");  }	  (stackSize    >>    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	89	None	replace
226	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(separator!=    null)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
227	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(separator!=    null)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
228	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(separator!=    null)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
229	[BUG]  [BUGGY]  if(separator  ==  null)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator  ==  null)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator  ==  null)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(separator!=    null)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
230	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  if(separator!=    null)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
231	[BUG]  [BUGGY]  if(separator  ==  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator  ==  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator  ==  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(separator!=    null)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
232	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack[size];  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack[size];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack[size];	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
233	[BUG]  [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
234	[BUG]  [BUGGY]  int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  separator.length);  this.deferredName  =  stack[separator.length];  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  separator.length);  this.deferredName  =  stack[separator.length];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  separator.length);  this.deferredName  =  stack[separator.length];	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
235	[BUG]  [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
236	[BUG]  [BUGGY]  int[]  stack  =  new  int[length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[length];  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[length];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[length];	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
237	[BUG]  [BUGGY]  out.write(stackSize  /  separator);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  /  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  /  separator);	  out.write(stackSize    *    separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
238	[BUG]  [BUGGY]  out.write(stackSize  *  2);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  2);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  2);	  out.write(stackSize    *    separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
239	[BUG]  [BUGGY]  out.write(stackSize  *  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  DEFERRED_NAME);	  out.write(stackSize    *    separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
240	[BUG]  [BUGGY]  out.write(stackSize  *  indent);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  indent);	  out.write(stackSize    *    separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
241	[BUG]  [BUGGY]  out.write(stackSize  *  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  this.deferredName);	  out.write(stackSize    *    separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
242	[BUG]  [BUGGY]  out.write('#',  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('#',  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('#',  stackSize);	  out.write('#');    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
243	[BUG]  [BUGGY]  out.write('#').replace(this.separator,  this.separator);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('#').replace(this.separator,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('#').replace(this.separator,  this.separator);	  out.write('#');    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
244	[BUG]  [BUGGY]  out.write('#'  +  values.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('#'  +  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('#'  +  values.length);	  out.write('#');    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
245	[BUG]  [BUGGY]  out.write('#'  +  separator);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('#'  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('#'  +  separator);	  out.write('#');    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
246	[BUG]  [BUGGY]  out.write('#').getBytes();  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('#').getBytes();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('#').getBytes();	  out.write('#');    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
247	[BUG]  [BUGGY]  out.write('#').replace(stackSize,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('#').replace(stackSize,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('#').replace(stackSize,  stackSize);	  out.write('#');    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
248	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	133	None	replace
249	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	133	None	replace
250	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	133	None	replace
251	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
252	[BUG]  [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
253	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
254	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
255	[BUG]  [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
256	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[3],  stack[4],  stack[4],  stack[4]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[3],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[3],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  	161	None	replace
257	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  stack[3],  stack[4],  stack[4],  stack[4]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  stack[3],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  stack[3],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  	161	None	replace
258	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  separator);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  separator);	  int[]    stack    =    new    int[stackSize],    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	96	None	replace
259	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(values,  0,  stack,  0,  stackSize);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(values,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize],  System.arraycopy(values,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize],    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	96	None	replace
260	[BUG]  [BUGGY]  int[]  stack  =  new  int[size],  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size],  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size],  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize],    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	96	None	replace
261	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  -  1,  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  -  1,  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  -  1,  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize],    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	96	None	replace
262	[BUG]  [BUGGY]  int[]  stack  =  new  int[separatorSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[separatorSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[separatorSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize],    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	96	None	replace
263	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  deferredName);  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  deferredName);	  int[]    stack    =    new    int[stackSize],    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	96	None	replace
264	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	107	None	replace
265	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4];  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	107	None	replace
266	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	107	None	replace
267	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4];  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	107	None	replace
268	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	107	None	replace
269	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  deferredName);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  deferredName);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
270	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  separator,  deferredName);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  separator,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  separator,  deferredName);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
271	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  separator);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  separator);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
272	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName,  indent);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName,  indent);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
273	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName,  separator);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName,  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName,  separator);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
274	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  deferredName);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  deferredName);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
275	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
276	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
277	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
278	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[5],    stack[5]);    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
279	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[7]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[7]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[7]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[5],    stack[5]);    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
280	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[8]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[8]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[8]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[5],    stack[5]);    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
281	[BUG]  [BUGGY]  if(this.htmlSafe!=  null)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.htmlSafe!=  null)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe!=  null)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.htmlSafe!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
282	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.htmlSafe!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
283	[BUG]  [BUGGY]  if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.htmlSafe!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
284	[BUG]  [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
285	[BUG]  [BUGGY]  if(separator!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
286	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
287	[BUG]  [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
288	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  /  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  /  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  /  1;	  this.deferredName    =    getDeferredName()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
289	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  -  1;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  -  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  -  1;	  this.deferredName    =    getDeferredName()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
290	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
291	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
292	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
293	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
294	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  	20	None	replace
295	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  +  indent;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  +  indent;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  +  indent;	  this.deferredName    =    getDeferredName()    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
296	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  /  separator;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  /  separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  /  separator;	  this.deferredName    =    getDeferredName()    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
297	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  +  lenient;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  +  lenient;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  +  lenient;	  this.deferredName    =    getDeferredName()    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
298	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(),  separator;  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(),  separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(),  separator;	  this.deferredName    =    getDeferredName()    +    separator;    	non-compiled	[CE]  	44	None	replace
299	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  +  'n';  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  +  'n';  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  +  'n';	  this.deferredName    =    getDeferredName()    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
300	[BUG]  [BUGGY]  this.separator  =  0;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  0;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  0;	  this.separator    =    _separator;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
301	[BUG]  [BUGGY]  this.separator  =!_separator;  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =!_separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =!_separator;	  this.separator    =    _separator;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
302	[BUG]  [BUGGY]  this.separator  =  _separator.charAt(0);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  _separator.charAt(0);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  _separator.charAt(0);	  this.separator    =    _separator;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
303	[BUG]  [BUGGY]  this.separator  =  _separator.trim();  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  _separator.trim();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  _separator.trim();	  this.separator    =    _separator;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
304	[BUG]  [BUGGY]  out.write(stackSize  /  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  /  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  /  DEFERRED_NAME);	  out.write(stackSize    -    DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
305	[BUG]  [BUGGY]  out.write(stackSize  +  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  DEFERRED_NAME);	  out.write(stackSize    -    DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
306	[BUG]  [BUGGY]  out.write(stackSize  -  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  stackSize);	  out.write(stackSize    -    DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
307	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
308	[BUG]  [BUGGY]  &&  separator)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
309	[BUG]  [BUGGY]  ||!separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  ||!separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	||!separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
310	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[st  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[st  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[st	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
311	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stack  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
312	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
313	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
314	[BUG]  [BUGGY]  Integer[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);	  Integer[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
315	[BUG]  [BUGGY]  Integer[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Integer[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
316	[BUG]  [BUGGY]  java.util.Integer[]  stack  =  new  java.util.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  java.util.Integer[]  stack  =  new  java.util.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	java.util.Integer[]  stack  =  new  java.util.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Integer[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
317	[BUG]  [BUGGY]  if(htmlSafe)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(serializeNulls)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
318	[BUG]  [BUGGY]  if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(serializeNulls)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
319	[BUG]  [BUGGY]  out.write(stackSize  -  separator.length  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  separator.length  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  separator.length  +  1);	  out.write(stackSize    -    separator.length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
320	[BUG]  [BUGGY]  out.write(stackSize  -  separator.length,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  separator.length,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  separator.length,  stackSize);	  out.write(stackSize    -    separator.length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
321	[BUG]  [BUGGY]  out.write(stackSize  -  this.separator.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.separator.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.separator.length);	  out.write(stackSize    -    separator.length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
322	[BUG]  [BUGGY]  out.write(stackSize  -  this.deferredName.length);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.deferredName.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.deferredName.length);	  out.write(stackSize    -    separator.length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
323	[BUG]  [BUGGY]  out.write(stackSize  -  this.lenient.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.lenient.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.lenient.length);	  out.write(stackSize    -    separator.length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
324	[BUG]  [BUGGY]  out.write(stackSize  -  separator.length  -  1);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  separator.length  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  separator.length  -  1);	  out.write(stackSize    -    separator.length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
325	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  separator,  indent);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  separator,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  separator,  indent);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    indent);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
326	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  indent);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  indent);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    indent);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
327	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  deferredName,  indent);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  deferredName,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  deferredName,  indent);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    indent);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
328	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  indent);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  indent);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    indent);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
329	[BUG]  [BUGGY]  out.defaultWrite( "Lenient: ");  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.defaultWrite( "Lenient: ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.defaultWrite( "Lenient: ");	  out.defaultWrite(   "Lenient   ");    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
330	[BUG]  [BUGGY]  out.defaultWrite( "Lenient ",  values);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.defaultWrite( "Lenient ",  values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.defaultWrite( "Lenient ",  values);	  out.defaultWrite(   "Lenient   ");    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
331	[BUG]  [BUGGY]  this.separator  =  lenient  +  1;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  lenient  +  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient  +  1;	  this.separator    =    lenient;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
332	[BUG]  [BUGGY]  out.write(stackSize  /  indent);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  /  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  /  indent);	  out.write(stackSize    -    indent);    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
333	[BUG]  [BUGGY]  out.write(stackSize  +  separator  -  indent);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  separator  -  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  separator  -  indent);	  out.write(stackSize    -    indent);    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
334	[BUG]  [BUGGY]  out.write(this.separator  -  indent);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator  -  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator  -  indent);	  out.write(stackSize    -    indent);    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
335	[BUG]  [BUGGY]  out.write(this.stackSize  -  indent);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.stackSize  -  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stackSize  -  indent);	  out.write(stackSize    -    indent);    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
336	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
337	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  out.write('n');  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  0)  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  0)  {  out.write('n');  }	  if(stackSize    ==    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
338	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ".equals(this.htmlSafe));  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ".equals(this.htmlSafe));  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ".equals(this.htmlSafe));  }	  if(stackSize    ==    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
339	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ".equals(this.lenient));  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ".equals(this.lenient));  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  0)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ".equals(this.lenient));  }	  if(stackSize    ==    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
340	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[6]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[6]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[6]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[5]);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
341	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  separator);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  separator);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[5]);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
342	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[5]);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
343	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  lenient)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
344	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  lenient)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
345	[BUG]  [BUGGY]  this.serializeNulls  =  lenient;  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  lenient;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  lenient;	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
346	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  lenient)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
347	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
348	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  lenient)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
349	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  size);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
350	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
351	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
352	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[this.separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[this.separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[this.separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
353	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
354	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
355	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  size);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  size);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
356	[BUG]  [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
357	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  *  stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  *  stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  *  stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
358	[BUG]  [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  1);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  1);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
359	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(values[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
360	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(values[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
361	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[6]);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[6]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[6]);	  htmlSafe.serializeNulls(values[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
362	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  separator);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  separator);	  htmlSafe.serializeNulls(values[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
363	[BUG]  [BUGGY]  this.separator  =  STRICT_LEN  +  1;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  STRICT_LEN  +  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  STRICT_LEN  +  1;	  this.separator    =    STRICT_LEN;    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
364	[BUG]  [BUGGY]  this.separator  =  STRICT_LITERAL;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  STRICT_LITERAL;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  STRICT_LITERAL;	  this.separator    =    STRICT_LEN;    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
365	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  separator);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  separator);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
366	[BUG]  [BUGGY]  out.write(stackSize  /  2);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  /  2);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  /  2);	  out.write(stackSize    -    2);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
367	[BUG]  [BUGGY]  out.write(stackSize  +  2);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  2);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  2);	  out.write(stackSize    -    2);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
368	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
369	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
370	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
371	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
372	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
373	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
374	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
375	[BUG]  [BUGGY]  if(this.serializeNulls!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.serializeNulls!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.serializeNulls!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    lenient)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
376	[BUG]  [BUGGY]  if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    lenient)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
377	[BUG]  [BUGGY]  if(this.separator!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.separator!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.separator!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    lenient)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
378	[BUG]  [BUGGY]  if(separator!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    lenient)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
379	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
380	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
381	[BUG]  [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
382	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
383	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
384	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
385	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	162	None	replace
386	[BUG]  [BUGGY]  out.write( "[Lenient] "  +  separator);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[Lenient] "  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] "  +  separator);	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
387	[BUG]  [BUGGY]  out.write( "[Lenient] "  +  deferredName);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[Lenient] "  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] "  +  deferredName);	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
388	[BUG]  [BUGGY]  out.write( "[Lenient] "  +  values.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[Lenient] "  +  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] "  +  values.length);	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
389	[BUG]  [BUGGY]  out.write( ".serializeNulls ");  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( ".serializeNulls ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( ".serializeNulls ");	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
390	[BUG]  [BUGGY]  out.write( "[Lenient] "  +  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[Lenient] "  +  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] "  +  this.deferredName);	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
391	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    values[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
392	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    values[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
393	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  values[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  values[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  values[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    values[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
394	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    values[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
395	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[4],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[4],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[4],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    values[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
396	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  separator);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  separator);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
397	[BUG]  [BUGGY]  htmlSafe.serializeNull(out,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(out,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(out,  stack,  0,  stackSize);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
398	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  deferredName);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  deferredName);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
399	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  values.length);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  values.length);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
400	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  this.values.length);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  this.values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  this.values.length);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
401	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  this.deferredName);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
402	[BUG]  [BUGGY]  htmlSafe.serializeNull(values,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(values,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(values,  0,  stackSize);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
403	[BUG]  [BUGGY]  out.write(stackSize,  0,  stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize,  0,  stackSize  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize,  0,  stackSize  +  1);	  out.write(stackSize,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
404	[BUG]  [BUGGY]  out.write(stackSize,  0,  stackSize  +  separator);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize,  0,  stackSize  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize,  0,  stackSize  +  separator);	  out.write(stackSize,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
405	[BUG]  [BUGGY]  out.write(stackSize,  0,  stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize,  0,  stackSize  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize,  0,  stackSize  -  1);	  out.write(stackSize,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
406	[BUG]  [BUGGY]  out.write(stackSize,  0,  stackLenient);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize,  0,  stackLenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize,  0,  stackLenient);	  out.write(stackSize,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
407	[BUG]  [BUGGY]  out.write(stackSize,  0,  stackSize  -  separator);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize,  0,  stackSize  -  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize,  0,  stackSize  -  separator);	  out.write(stackSize,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
408	[BUG]  [BUGGY]  out.write(stackSize,  0,  stackLenients.length);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize,  0,  stackLenients.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize,  0,  stackLenients.length);	  out.write(stackSize,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
409	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
410	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
411	[BUG]  [BUGGY]  StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
412	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  htmlSafe,  stack[3]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  htmlSafe,  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  htmlSafe,  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
413	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
414	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
415	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
416	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
417	[BUG]  [BUGGY]  StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
418	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  htmlSafe,  stack[3]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  htmlSafe,  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  htmlSafe,  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
419	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
420	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
421	[BUG]  [BUGGY]  if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	222	None	replace
422	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	222	None	replace
423	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[0];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[0];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[0];  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	222	None	replace
424	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	222	None	replace
425	[BUG]  [BUGGY]  ||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  ||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
426	[BUG]  [BUGGY]  if(separator  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
427	[BUG]  [BUGGY]  safeGet(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeGet(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeGet(stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	88	None	replace
428	[BUG]  [BUGGY]  if(stackSize  ==  0  ||  stackSize  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  0  ||  stackSize  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  0  ||  stackSize  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
429	[BUG]  [BUGGY]  if(stackSize  ==  0  ||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  0  ||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  0  ||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
430	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  lenient);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  lenient);	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
431	[BUG]  [BUGGY]  if(lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
432	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  lenient,  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  lenient,  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  lenient,  stack[3]);	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
433	[BUG]  [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);  }	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
434	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  null);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  null);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  null);	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
435	[BUG]  [BUGGY]  out.write('-',  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('-',  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('-',  stackSize);	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
436	[BUG]  [BUGGY]  out.write('-'  +  separator);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('-'  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('-'  +  separator);	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
437	[BUG]  [BUGGY]  out.write( "-- ");  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "-- ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "-- ");	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
438	[BUG]  [BUGGY]  out.defaultWrite( "-- ");  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.defaultWrite( "-- ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.defaultWrite( "-- ");	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
439	[BUG]  [BUGGY]  out.write('-'  +  values.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('-'  +  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('-'  +  values.length);	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
440	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[5]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
441	[BUG]  [BUGGY]  int  stackSize  =  values.length;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  values.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  values.length;	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
442	[BUG]  [BUGGY]  int  stackSize  =  this.separator;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  this.separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  this.separator;	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
443	[BUG]  [BUGGY]  int  stackSize  =  0;  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  0;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  0;	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
444	[BUG]  [BUGGY]  int  stackSize  =  this.values.length;  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  this.values.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  this.values.length;	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
445	[BUG]  [BUGGY]  int  stackSize  =  getStackSize();  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  getStackSize();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  getStackSize();	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
446	[BUG]  [BUGGY]  int  stackSize  =  this.separator.length;  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  this.separator.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  this.separator.length;	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
447	[BUG]  [BUGGY]  int  stackSize  =  this.serializeNulls;  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  this.serializeNulls;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  this.serializeNulls;	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
448	[BUG]  [BUGGY]  this.separator  =  String.valueOf(deferredName);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  String.valueOf(deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  String.valueOf(deferredName);	  this.separator    =    deferredName;    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
449	[BUG]  [BUGGY]  this.separator  =  DEFERRED_NAME;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  DEFERRED_NAME;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  DEFERRED_NAME;	  this.separator    =    deferredName;    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
450	[BUG]  [BUGGY]  this.separator  =  DEFERRED_LITERAL;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  DEFERRED_LITERAL;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  DEFERRED_LITERAL;	  this.separator    =    deferredName;    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
451	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
452	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
453	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
454	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  this.separator;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  this.separator;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  this.separator;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
455	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  1;  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  1;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  1;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
456	[BUG]  [BUGGY]  if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
457	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
458	[BUG]  [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  0;  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  0;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
459	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
460	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
461	[BUG]  [BUGGY]  out.write('0',  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('0',  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('0',  stackSize);	  out.write('0');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
462	[BUG]  [BUGGY]  out.write('0'  +  separator);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('0'  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('0'  +  separator);	  out.write('0');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
463	[BUG]  [BUGGY]  out.write('0'  +  this.separator);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('0'  +  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('0'  +  this.separator);	  out.write('0');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
464	[BUG]  [BUGGY]  out.write( "0 ");  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "0 ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "0 ");	  out.write('0');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
465	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
466	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
467	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
468	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	106	None	replace
469	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	106	None	replace
470	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	106	None	replace
471	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  separator);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize,  separator);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
472	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  deferredName);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize,  deferredName);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
473	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  values.length);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize,  values.length);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
474	[BUG]  [BUGGY]  htmlSafe.serializeNulls(out,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(out,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(out,  stack,  0,  stackSize);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
475	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize,  this.deferredName);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
476	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  this.values.length);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  this.values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  this.values.length);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
477	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize,  DEFERRED_NAME);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
478	[BUG]  [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
479	[BUG]  [BUGGY]  if(separator!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
480	[BUG]  [BUGGY]  if(separator!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
481	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
482	[BUG]  [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
483	[BUG]  [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
484	[BUG]  [BUGGY]  if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
485	[BUG]  [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
486	[BUG]  [BUGGY]  if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
487	[BUG]  [BUGGY]  out.write(stackSize  *  stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  stackSize  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  stackSize  -  1);	  out.write(stackSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
488	[BUG]  [BUGGY]  out.write(stackSize  /  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  /  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  /  1);	  out.write(stackSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
489	[BUG]  [BUGGY]  out.write(this.separator  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator  -  1);	  out.write(stackSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
490	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
491	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[6]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[6]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[6]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
492	[BUG]  [BUGGY]  out.write(stackSize  /  DEFERRED_NUMBER);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  /  DEFERRED_NUMBER);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  /  DEFERRED_NUMBER);	  out.write(stackSize    -    DEFERRED_NUMBER);    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
493	[BUG]  [BUGGY]  out.write(stackSize  *  DEFERRED_NUMBER);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  DEFERRED_NUMBER);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  DEFERRED_NUMBER);	  out.write(stackSize    -    DEFERRED_NUMBER);    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
494	[BUG]  [BUGGY]  out.write(stackSize  +  DEFERRED_NUMBER);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  DEFERRED_NUMBER);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  DEFERRED_NUMBER);	  out.write(stackSize    -    DEFERRED_NUMBER);    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
495	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
496	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
497	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
498	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  separator,  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
499	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
500	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
501	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
502	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stack  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stack	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
503	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
504	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
505	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[separator  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[separator  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[separator	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
506	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
507	[BUG]  [BUGGY]  ||  this.deferredName!=  null  &&  stack.length  >  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  ||  this.deferredName!=  null  &&  stack.length  >  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	||  this.deferredName!=  null  &&  stack.length  >  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
508	[BUG]  [BUGGY]  ||  this.deferredName!=  null  &&  stack.length  >  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  ||  this.deferredName!=  null  &&  stack.length  >  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	||  this.deferredName!=  null  &&  stack.length  >  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
509	[BUG]  [BUGGY]  out.write( "Lenient: "  +  values.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient: "  +  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient: "  +  values.length);	  out.write(   "Lenient:   ");    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
510	[BUG]  [BUGGY]  out.write( "Lenient: "  +  separator);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient: "  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient: "  +  separator);	  out.write(   "Lenient:   ");    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
511	[BUG]  [BUGGY]  out.write( "Lenient: "  +  deferredName);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient: "  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient: "  +  deferredName);	  out.write(   "Lenient:   ");    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
512	[BUG]  [BUGGY]  out.write( "Lenient: "  +  lenient);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient: "  +  lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient: "  +  lenient);	  out.write(   "Lenient:   ");    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
513	[BUG]  [BUGGY]  out.write(this.deferredName  -  separator,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  -  separator,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  separator,  stackSize);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
514	[BUG]  [BUGGY]  out.write(this.deferredName  -  separator,  this.stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  -  separator,  this.stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  separator,  this.stackSize);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
515	[BUG]  [BUGGY]  out.write(this.deferredName  -  indent);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  -  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  indent);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
516	[BUG]  [BUGGY]  out.write(this.deferredName  -  separator,  this.separator);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  -  separator,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  separator,  this.separator);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
517	[BUG]  [BUGGY]  out.write(this.deferredName  -  this.separator);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  -  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  this.separator);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
518	[BUG]  [BUGGY]  out.write(this.deferredName  +  separator);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  +  separator);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
519	[BUG]  [BUGGY]  out.write(this.deferredName  -  separator,  indent);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  -  separator,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  separator,  indent);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
520	[BUG]  [BUGGY]  if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
521	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
522	[BUG]  [BUGGY]  if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
523	[BUG]  [BUGGY]  out.write( "Lenient[ "  +  separator  + "] ");  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient[ "  +  separator  + "] ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient[ "  +  separator  + "] ");	  out.write(   "Lenient[   ");    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
524	[BUG]  [BUGGY]  out.write( "Lenients[ ");  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenients[ ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenients[ ");	  out.write(   "Lenient[   ");    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
525	[BUG]  [BUGGY]  out.write( "Lenient[ "  +  values.length  + "] ");  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient[ "  +  values.length  + "] ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient[ "  +  values.length  + "] ");	  out.write(   "Lenient[   ");    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
526	[BUG]  [BUGGY]  out.write( "Lenient ",  stack[stackSize]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient ",  stack[stackSize]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient ",  stack[stackSize]);	  out.write(   "Lenient[   ");    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
527	[BUG]  [BUGGY]  this.separator  =  DEFERRED_NUMBER;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  DEFERRED_NUMBER;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  DEFERRED_NUMBER;	  this.separator    =    separator;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
528	[BUG]  [BUGGY]  this.separator  =  DEFERRED_NAMES[stackSize];  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  DEFERRED_NAMES[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  DEFERRED_NAMES[stackSize];	  this.separator    =    separator;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
529	[BUG]  [BUGGY]  this.separator  =  DEFERRED_CHAR;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  DEFERRED_CHAR;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  DEFERRED_CHAR;	  this.separator    =    separator;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
530	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
531	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
532	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
533	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	150	None	replace
534	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  );  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	150	None	replace
535	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]  }  );  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	150	None	replace
536	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	150	None	replace
537	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  );  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	150	None	replace
538	[BUG]  [BUGGY]  out.write(stackSize  +  this.deferredName);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  this.deferredName);	  out.write(stackSize    +    separator);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
539	[BUG]  [BUGGY]  out.write(stackSize  +  this.values.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  this.values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  this.values.length);	  out.write(stackSize    +    separator);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
540	[BUG]  [BUGGY]  out.write(stackSize  +  this.lenient);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  this.lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  this.lenient);	  out.write(stackSize    +    separator);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
541	[BUG]  [BUGGY]  Object[]  stack  =  new  Object[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Object[]  stack  =  new  Object[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Object[]  stack  =  new  Object[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
542	[BUG]  [BUGGY]  Stack[]  stack  =  new  Stack[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Stack[]  stack  =  new  Stack[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Stack[]  stack  =  new  Stack[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
543	[BUG]  [BUGGY]  Stack[]  stack  =  new  Stack[size];  System.arraycopy(stack,  0,  stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Stack[]  stack  =  new  Stack[size];  System.arraycopy(stack,  0,  stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Stack[]  stack  =  new  Stack[size];  System.arraycopy(stack,  0,  stack,  0,  size);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
544	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
545	[BUG]  [BUGGY]  int  stackSize  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stackSize,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stackSize,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stackSize,  0,  stackSize);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
546	[BUG]  [BUGGY]  int  stackSize  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stackSize,  stackSize);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stackSize,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stackSize,  stackSize);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
547	[BUG]  [BUGGY]  out.write(this.values[stackSize]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values[stackSize]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values[stackSize]);	  out.write(stack);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
548	[BUG]  [BUGGY]  out.write(stack[0]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack[0]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack[0]);	  out.write(stack);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
549	[BUG]  [BUGGY]  while(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
550	[BUG]  [BUGGY]  while(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
551	[BUG]  [BUGGY]  while(stackSize  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
552	[BUG]  [BUGGY]  while(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
553	[BUG]  [BUGGY]  while(stackSize  <  =  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize  <  =  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize  <  =  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
554	[BUG]  [BUGGY]  while(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
555	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
556	[BUG]  [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
557	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
558	[BUG]  [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
559	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
560	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
561	[BUG]  [BUGGY]  out.write( "Lenient ",  values);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient ",  values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient ",  values);	  out.write(   "Lenientn   ");    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
562	[BUG]  [BUGGY]  out.write(stackSize  +  3);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  3);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  3);	  out.write(stackSize    +    1);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
563	[BUG]  [BUGGY]  out.write(stackSize  *  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  1);	  out.write(stackSize    +    1);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
564	[BUG]  [BUGGY]  out.write(deferredName  -  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  -  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  -  stackSize);	  out.write(stackSize    -    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
565	[BUG]  [BUGGY]  out.write(stackSize  -  separator,  deferredName);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  separator,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  separator,  deferredName);	  out.write(stackSize    -    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
566	[BUG]  [BUGGY]  out.write(stackSize  *  deferredName);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  deferredName);	  out.write(stackSize    -    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
567	[BUG]  [BUGGY]  out.write(stackSize  -  1,  deferredName);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  deferredName);	  out.write(stackSize    -    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
568	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
569	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
570	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  out.write(stack,  0,  values.length);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
571	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
572	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
573	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
574	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
575	[BUG]  [BUGGY]  out.write( ": ");  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( ": ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( ": ");	  out.write(':');    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
576	[BUG]  [BUGGY]  out.write(':',  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(':',  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(':',  stackSize);	  out.write(':');    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
577	[BUG]  [BUGGY]  out.write(':').replace(this.separator,  this.separator);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(':').replace(this.separator,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(':').replace(this.separator,  this.separator);	  out.write(':');    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
578	[BUG]  [BUGGY]  out.write(':'  +  values.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(':'  +  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(':'  +  values.length);	  out.write(':');    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
579	[BUG]  [BUGGY]  out.write(':').replace(stackSize,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(':').replace(stackSize,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(':').replace(stackSize,  stackSize);	  out.write(':');    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
580	[BUG]  [BUGGY]  out.write(':'  +  this.separator);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(':'  +  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(':'  +  this.separator);	  out.write(':');    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
581	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
582	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  *  stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  *  stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  *  stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
583	[BUG]  [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  1);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
584	[BUG]  [BUGGY]  this.separator  =  null;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  null;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  null;	  this.separator    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
585	[BUG]  [BUGGY]  this.separator  =  Character.toLowerCase(stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  Character.toLowerCase(stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  Character.toLowerCase(stackSize);	  this.separator    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
586	[BUG]  [BUGGY]  this.separator  =  String.valueOf(this.separator);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  String.valueOf(this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  String.valueOf(this.separator);	  this.separator    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
587	[BUG]  [BUGGY]  this.separator  =  new  String(deferredName);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  new  String(deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  new  String(deferredName);	  this.separator    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
588	[BUG]  [BUGGY]  this.separator  =  Character.toLowerCase(lenient);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  Character.toLowerCase(lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  Character.toLowerCase(lenient);	  this.separator    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
589	[BUG]  [BUGGY]  this.separator  =!this.separator;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =!this.separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =!this.separator;	  this.separator    =!lenient;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
590	[BUG]  [BUGGY]  this.separator  =!values.length;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =!values.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =!values.length;	  this.separator    =!lenient;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
591	[BUG]  [BUGGY]  this.separator  =!values.isEmpty();  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =!values.isEmpty();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =!values.isEmpty();	  this.separator    =!lenient;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
592	[BUG]  [BUGGY]  this.separator  =!this.lenient;  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =!this.lenient;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =!this.lenient;	  this.separator    =!lenient;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
593	[BUG]  [BUGGY]  this.separator  =!separator;  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =!separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =!separator;	  this.separator    =!lenient;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
594	[BUG]  [BUGGY]  this.separator  =!this.deferredName;  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =!this.deferredName;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =!this.deferredName;	  this.separator    =!lenient;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
595	[BUG]  [BUGGY]  this.separator  =!this.values.length;  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =!this.values.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =!this.values.length;	  this.separator    =!lenient;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
596	[BUG]  [BUGGY]  this.separator  =  lenient  &&  htmlSafe;  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  lenient  &&  htmlSafe;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient  &&  htmlSafe;	  this.separator    =    lenient    ||    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
597	[BUG]  [BUGGY]  this.separator  =  htmlSafe  ||  lenient;  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  htmlSafe  ||  lenient;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  htmlSafe  ||  lenient;	  this.separator    =    lenient    ||    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
598	[BUG]  [BUGGY]  this.separator  =  lenient  ||  stackSize;  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  lenient  ||  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient  ||  stackSize;	  this.separator    =    lenient    ||    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
599	[BUG]  [BUGGY]  this.separator  =  lenient  ||  deferredName;  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  lenient  ||  deferredName;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient  ||  deferredName;	  this.separator    =    lenient    ||    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
600	[BUG]  [BUGGY]  this.separator  =  lenient  ||  htmlSafe  +  1;  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  lenient  ||  htmlSafe  +  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient  ||  htmlSafe  +  1;	  this.separator    =    lenient    ||    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
601	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
602	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
603	[BUG]  [BUGGY]  out.write(this.lenient  -  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.lenient  -  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.lenient  -  stackSize);	  out.write(stackSize    -    this.lenient);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
604	[BUG]  [BUGGY]  out.write(this.values.length  -  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values.length  -  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values.length  -  stackSize);	  out.write(stackSize    -    this.lenient);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
605	[BUG]  [BUGGY]  out.write(this.separator  -  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator  -  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator  -  stackSize);	  out.write(stackSize    -    this.lenient);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
606	[BUG]  [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[stackSize];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
607	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
608	[BUG]  [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
609	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize  >=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize  >=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize  >=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
610	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
611	[BUG]  [BUGGY]  if(separator!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
612	[BUG]  [BUGGY]  ||  stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  ||  stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	||  stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
613	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	140	None	replace
614	[BUG]  [BUGGY]  safeGet(stackSize)>  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeGet(stackSize)>  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeGet(stackSize)>  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  not  a  statement	140	None	replace
615	[BUG]  [BUGGY]  out.write('L'  +  separator);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('L'  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('L'  +  separator);	  out.write('L');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
616	[BUG]  [BUGGY]  out.write('L',  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('L',  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('L',  0,  stackSize);	  out.write('L');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
617	[BUG]  [BUGGY]  out.write('L',  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('L',  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('L',  stackSize);	  out.write('L');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
618	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  values);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(DEFERRED_NAME,  values);	  this.deferredName    =    getDeferredName(DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
619	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  true);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  true);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(DEFERRED_NAME,  true);	  this.deferredName    =    getDeferredName(DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
620	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  DEFERRED_CHARS);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  DEFERRED_CHARS);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(DEFERRED_NAME,  DEFERRED_CHARS);	  this.deferredName    =    getDeferredName(DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
621	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
622	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    size);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
623	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    size);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
624	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    size);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
625	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);  out.write(stack,  0,  values.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);  out.write(stack,  0,  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);  out.write(stack,  0,  values.length);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    size);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
626	[BUG]  [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    size);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
627	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    size);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
628	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
629	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
630	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[5],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[5],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[5],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
631	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
632	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
633	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
634	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  this.separator;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  this.separator;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  this.separator;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
635	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  indent;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  indent;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  indent;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
636	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  Null();  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  Null();  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  Null();  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
637	[BUG]  [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  0;  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
638	[BUG]  [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  stackSize;  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
639	[BUG]  [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  -1;  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  -1;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  -1;  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
640	[BUG]  [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  1;  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  1;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  out.write('n');  }  else  {  indent  =  1;  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
641	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
642	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  htmlSafe,  stack[3]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  htmlSafe,  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  htmlSafe,  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
643	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
644	[BUG]  [BUGGY]  StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
645	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
646	[BUG]  [BUGGY]  out.write('n',  0,  stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n',  0,  stackSize  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n',  0,  stackSize  -  1);	  out.write('n',    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
647	[BUG]  [BUGGY]  out.write('n',  0,  stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n',  0,  stackSize  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n',  0,  stackSize  +  1);	  out.write('n',    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
648	[BUG]  [BUGGY]  out.write('0',  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('0',  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('0',  0,  stackSize);	  out.write('n',    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
649	[BUG]  [BUGGY]  out.write('#',  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('#',  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('#',  0,  stackSize);	  out.write('n',    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
650	[BUG]  [BUGGY]  out.write('n',  0,  this.separator);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n',  0,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n',  0,  this.separator);	  out.write('n',    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
651	[BUG]  [BUGGY]  char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	221	None	replace
652	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack[size];  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack[size];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  this.deferredName  =  stack[size];  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  not  a  statement	221	None	replace
653	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[size];  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[size];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[size];	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	221	None	replace
654	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
655	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
656	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
657	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED_NUMBER;  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  DEFERRED_NUMBER;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED_NUMBER;	  this.deferredName    =    deferred;    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
658	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  DEFERRED;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED;	  this.deferredName    =    deferred;    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
659	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED_NUMBER_ERROR;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  DEFERRED_NUMBER_ERROR;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED_NUMBER_ERROR;	  this.deferredName    =    deferred;    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
660	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED_NOT_ALLOWED;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  DEFERRED_NOT_ALLOWED;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED_NOT_ALLOWED;	  this.deferredName    =    deferred;    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
661	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	149	None	replace
662	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	149	None	replace
663	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	149	None	replace
664	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]  }  ;  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	149	None	replace
665	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	149	None	replace
666	[BUG]  [BUGGY]  out.write(this.deferredName  -  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  -  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  stackSize);	  out.write(stackSize    -    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
667	[BUG]  [BUGGY]  out.write(stackSize  -  this.deferredName,  separator);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.deferredName,  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.deferredName,  separator);	  out.write(stackSize    -    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
668	[BUG]  [BUGGY]  out.write(stackSize  /  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  /  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  /  this.deferredName);	  out.write(stackSize    -    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
669	[BUG]  [BUGGY]  safeSerialize(this.stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(this.stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(this.stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	139	None	replace
670	[BUG]  [BUGGY]  ensureCapacity(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  ensureCapacity(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	ensureCapacity(stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	139	None	replace
671	[BUG]  [BUGGY]  htmlSafe(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe(stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	139	None	replace
672	[BUG]  [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ".equals(lenient));  }  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ".equals(lenient));  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ".equals(lenient));  }	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	139	None	replace
673	[BUG]  [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ".equals(this.htmlSafe));  }  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ".equals(this.htmlSafe));  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ".equals(this.htmlSafe));  }	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	139	None	replace
674	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	218	None	replace
675	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	218	None	replace
676	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	218	None	replace
677	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	218	None	replace
678	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	218	None	replace
679	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]);  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	218	None	replace
680	[BUG]  [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
681	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
682	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
683	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
684	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	130	None	replace
685	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.  [CE]  <identifier>  expected  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
686	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	66	None	replace
687	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	66	None	replace
688	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	66	None	replace
689	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	216	None	replace
690	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	216	None	replace
691	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	216	None	replace
692	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	216	None	replace
693	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	216	None	replace
694	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	177	None	replace
695	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	177	None	replace
696	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[5],  stack[3]);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[5],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[5],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	177	None	replace
697	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	177	None	replace
698	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	177	None	replace
699	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[5]);  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	177	None	replace
700	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	203	None	replace
701	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	203	None	replace
702	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	203	None	replace
703	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	203	None	replace
704	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	203	None	replace
705	[BUG]  [BUGGY]  out.write(stackSize  -  1,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  this.deferredName);	  out.write(stackSize    -    1,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
706	[BUG]  [BUGGY]  out.write(stackSize  -  1,  this.values.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  this.values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  this.values.length);	  out.write(stackSize    -    1,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
707	[BUG]  [BUGGY]  out.write(stackSize  -  1,  this.lenient);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  this.lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  this.lenient);	  out.write(stackSize    -    1,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
708	[BUG]  [BUGGY]  out.write(stackSize  -  1,  this.endent);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  this.endent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  this.endent);	  out.write(stackSize    -    1,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
709	[BUG]  [BUGGY]  out.write(stackSize  -  1,  indent);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  indent);	  out.write(stackSize    -    1,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
710	[BUG]  [BUGGY]  out.write(stackSize  -  1,  this.deferredName,  separator);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  this.deferredName,  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  this.deferredName,  separator);	  out.write(stackSize    -    1,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
711	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
712	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
713	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(values[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
714	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(values[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
715	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[5]);	  htmlSafe.serializeNulls(values[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
716	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(values[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	77	None	replace
717	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[6],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[6],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[6],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[5],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
718	[BUG]  [BUGGY]  out.write( "Lenients: "  +  values.length);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenients: "  +  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenients: "  +  values.length);	  out.write(   "Lenients:   ");    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
719	[BUG]  [BUGGY]  out.write( "Lenients:n ");  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenients:n ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenients:n ");	  out.write(   "Lenients:   ");    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
720	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
721	[BUG]  [BUGGY]  int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
722	[BUG]  [BUGGY]  int[]  stack  =  new  int[this.separatorSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[this.separatorSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[this.separatorSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
723	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
724	[BUG]  [BUGGY]  int[]  stack  =  new  int[this.deferredName.length];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[this.deferredName.length];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[this.deferredName.length];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
725	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(this.separator,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(this.separator,  0,  stack,  0,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(this.separator,  0,  stack,  0,  this.deferredName);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
726	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
727	[BUG]  [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
728	[BUG]  [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize  +  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize  +  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int  stackSize  =  stackSize  +  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
729	[BUG]  [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize  *  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize  *  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int  stackSize  =  stackSize  *  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
730	[BUG]  [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize.length;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize.length;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int  stackSize  =  stackSize.length;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
731	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[0]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[0]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[0]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
732	[BUG]  [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length  +  1);  }  [CE]  illegal  start  of  expression  [FE]                                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length  +  1);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length  +  1);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
733	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[5]);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
734	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[6]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[6]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[6]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[5]);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
735	[BUG]  [BUGGY]  out.write('%',  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%',  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%',  stackSize);	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
736	[BUG]  [BUGGY]  out.write('%'  +  separator);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%'  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%'  +  separator);	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
737	[BUG]  [BUGGY]  out.write('%').replace(this.separator,  this.separator);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%').replace(this.separator,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%').replace(this.separator,  this.separator);	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
738	[BUG]  [BUGGY]  out.write('%'  +  values.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%'  +  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%'  +  values.length);	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
739	[BUG]  [BUGGY]  out.write('%').replace(stackSize,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%').replace(stackSize,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%').replace(stackSize,  stackSize);	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
740	[BUG]  [BUGGY]  out.write('%').replace(stackSize,  '%');  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%').replace(stackSize,  '%');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%').replace(stackSize,  '%');	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
741	[BUG]  [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  }	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
742	[BUG]  [BUGGY]  int[]  stack  =  new  int[size  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
743	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	131	None	replace
744	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	131	None	replace
745	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	131	None	replace
746	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
747	[BUG]  [BUGGY]  if(this.lenient!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.lenient!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.lenient!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
748	[BUG]  [BUGGY]  if(this.htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
749	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
750	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	217	None	replace
751	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
752	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	217	None	replace
753	[BUG]  [BUGGY]  this.deferredName  =  getDelimiter();  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDelimiter();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDelimiter();	  this.deferredName    =    getLenientName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
754	[BUG]  [BUGGY]  this.deferredName  =  getDelegatedName();  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDelegatedName();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDelegatedName();	  this.deferredName    =    getLenientName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
755	[BUG]  [BUGGY]  this.deferredName  =  getLenientName()  +  separator;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getLenientName()  +  separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getLenientName()  +  separator;	  this.deferredName    =    getLenientName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
756	[BUG]  [BUGGY]  this.deferredName  =  getLenientName()  +  1;  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getLenientName()  +  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getLenientName()  +  1;	  this.deferredName    =    getLenientName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
757	[BUG]  [BUGGY]  out.write(this.values);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values);	  out.write(this.lenient);    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
758	[BUG]  [BUGGY]  out.write(this.Lenient);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.Lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.Lenient);	  out.write(this.lenient);    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
759	[BUG]  [BUGGY]  out.write(values.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(values.length);	  out.write(this.lenient);    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
760	[BUG]  [BUGGY]  if(stackSize  ==  stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  stack.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
761	[BUG]  [BUGGY]  if(stackSize  >=  stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  >=  stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  >=  stack.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
762	[BUG]  [BUGGY]  safeSerializeNulls(stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerializeNulls(stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerializeNulls(stack.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	190	None	replace
763	[BUG]  [BUGGY]  safeSerializeNulls(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerializeNulls(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerializeNulls(stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	190	None	replace
764	[BUG]  [BUGGY]  safeSerializeNulls(stackSize)*  stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerializeNulls(stackSize)*  stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerializeNulls(stackSize)*  stack.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	190	None	replace
765	[BUG]  [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
766	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
767	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
768	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
769	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
770	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	164	None	replace
771	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
772	[BUG]  [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  String[]    stack    =    new    String[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
773	[BUG]  [BUGGY]  char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  String[]    stack    =    new    String[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
774	[BUG]  [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);	  String[]    stack    =    new    String[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
775	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[3],  stack[4],  stack[4]);  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  	31	None	replace
776	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  stack[3],  stack[4],  stack[4]);  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  	31	None	replace
777	[BUG]  [BUGGY]  if(this.lenient!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.lenient!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.lenient!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
778	[BUG]  [BUGGY]  if(this.htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
779	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
780	[BUG]  [BUGGY]  if(this.lenient!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.lenient!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.lenient!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
781	[BUG]  [BUGGY]  out.write( "Null ");  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Null ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Null ");	  out.write(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
782	[BUG]  [BUGGY]  out.write( "null ",  values);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "null ",  values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "null ",  values);	  out.write(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
783	[BUG]  [BUGGY]  out.write( "Null. ");  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Null. ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Null. ");	  out.write(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
784	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  separator);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  separator);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
785	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  separator);  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  separator);  stackSize  =  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  separator);  stackSize  =  stackSize;	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
786	[BUG]  [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
787	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  stackSize);  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  stackSize);  stackSize  =  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  stackSize);  stackSize  =  stackSize;	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
788	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  null);  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  null);  stackSize  =  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  null);  stackSize  =  stackSize;	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
789	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stackSize);  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stackSize);  stackSize  =  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stackSize);  stackSize  =  stackSize;	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
790	[BUG]  [BUGGY]  this.serializeNulls(stackSize);  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls(stackSize);  stackSize  =  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls(stackSize);  stackSize  =  stackSize;	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
791	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack);  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack);  stackSize  =  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack);  stackSize  =  stackSize;	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
792	[BUG]  [BUGGY]  out.write(','  +  separator);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(','  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(','  +  separator);	  out.write(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
793	[BUG]  [BUGGY]  out.write(',').replace(this.separator,  this.separator);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(',').replace(this.separator,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(',').replace(this.separator,  this.separator);	  out.write(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
794	[BUG]  [BUGGY]  out.write(',').getBytes();  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(',').getBytes();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(',').getBytes();	  out.write(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
795	[BUG]  [BUGGY]  out.write(','  +  this.separator);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(','  +  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(','  +  this.separator);	  out.write(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
796	[BUG]  [BUGGY]  out.write(',').replace('',  '');  [CE]  empty  character  literal  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(',').replace('',  '');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(',').replace('',  '');	  out.write(',');    	non-compiled	[CE]  empty  character  literal	34	None	replace
797	[BUG]  [BUGGY]  out.write(',').replace(stackSize,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(',').replace(stackSize,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(',').replace(stackSize,  stackSize);	  out.write(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
798	[BUG]  [BUGGY]  this.deferredName  =  getDeprecatedName()  +  separator;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeprecatedName()  +  separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeprecatedName()  +  separator;	  this.deferredName    =    getDeprecatedName();    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
799	[BUG]  [BUGGY]  this.deferredName  =  getDeprecatedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeprecatedName()  +  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeprecatedName()  +  1;	  this.deferredName    =    getDeprecatedName();    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
800	[BUG]  [BUGGY]  this.deferredName  =  getDeprecatedName()  + "n ";  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeprecatedName()  + "n ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeprecatedName()  + "n ";	  this.deferredName    =    getDeprecatedName();    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
801	[BUG]  [BUGGY]  this.deferredName  =  getDeprecatedName()  + "; ";  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeprecatedName()  + "; ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeprecatedName()  + "; ";	  this.deferredName    =    getDeprecatedName();    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
802	[BUG]  [BUGGY]  int  stackSize  =  stackSize  -  separator;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stackSize  -  separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackSize  -  separator;	  int    stackSize    =    stackSize    -    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
803	[BUG]  [BUGGY]  int  stackSize  =  stackSize  /  stackSize;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stackSize  /  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackSize  /  stackSize;	  int    stackSize    =    stackSize    -    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
804	[BUG]  [BUGGY]  int  stackSize  =  this.separator  -  stackSize;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  this.separator  -  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  this.separator  -  stackSize;	  int    stackSize    =    stackSize    -    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
805	[BUG]  [BUGGY]  int  stackSize  =  stackSize  *  stackSize;  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stackSize  *  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackSize  *  stackSize;	  int    stackSize    =    stackSize    -    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
806	[BUG]  [BUGGY]  int  stackSize  =  stackSize  -  1;  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stackSize  -  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackSize  -  1;	  int    stackSize    =    stackSize    -    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
807	[BUG]  [BUGGY]  int  stackSize  =  stackSize  -  separator.length;  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stackSize  -  separator.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackSize  -  separator.length;	  int    stackSize    =    stackSize    -    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
808	[BUG]  [BUGGY]  int  stackSize  =  stackSize  -  this.separator;  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stackSize  -  this.separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackSize  -  this.separator;	  int    stackSize    =    stackSize    -    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
809	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack[0],  stack[1],  stack[3]);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
810	[BUG]  [BUGGY]  htmlSafe.serializeNull(values[0],  stack[1],  stack[2]);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(values[0],  stack[1],  stack[2]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(values[0],  stack[1],  stack[2]);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
811	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2]  +  1);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2]  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack[0],  stack[1],  stack[2]  +  1);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
812	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  lenient);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  lenient);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
813	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  separator);  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  separator);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
814	[BUG]  [BUGGY]  StaxUtil.serializeNull(stack[0],  stack[1],  stack[2]);  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNull(stack[0],  stack[1],  stack[2]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNull(stack[0],  stack[1],  stack[2]);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
815	[BUG]  [BUGGY]  if(separator!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackLenient)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
816	[BUG]  [BUGGY]  if(stackSize  ==  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackLenient)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
817	[BUG]  [BUGGY]  if(stackSize!=  stackLenient.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  stackLenient.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  stackLenient.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackLenient)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
818	[BUG]  [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
819	[BUG]  [BUGGY]  if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
820	[BUG]  [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  separator);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  separator);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  separator);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
821	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  separator);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  separator);	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
822	[BUG]  [BUGGY]  this.serializeNulls  =  values;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  values;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  values;	  this.serializeNulls    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
823	[BUG]  [BUGGY]  this.serializeNulls  =  values[0];  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  values[0];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  values[0];	  this.serializeNulls    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
824	[BUG]  [BUGGY]  this.serializeNulls  =  new  int[stackSize];  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  new  int[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  new  int[stackSize];	  this.serializeNulls    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
825	[BUG]  [BUGGY]  this.serializeNulls  =  values[0].serialize(stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  values[0].serialize(stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  values[0].serialize(stackSize);	  this.serializeNulls    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
826	[BUG]  [BUGGY]  this.serializeNulls  =  values[stackSize];  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  values[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  values[stackSize];	  this.serializeNulls    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
827	[BUG]  [BUGGY]  out.write(stackSize  -  this.values.length  +  separator);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.values.length  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.values.length  +  separator);	  out.write(stackSize    -    this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
828	[BUG]  [BUGGY]  out.write(stackSize  -  this.values.length  +  1);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.values.length  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.values.length  +  1);	  out.write(stackSize    -    this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
829	[BUG]  [BUGGY]  out.write(stackSize  /  this.values.length);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  /  this.values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  /  this.values.length);	  out.write(stackSize    -    this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
830	[BUG]  [BUGGY]  out.write(stackSize  -  this.values.length,  separator);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.values.length,  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.values.length,  separator);	  out.write(stackSize    -    this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
831	[BUG]  [BUGGY]  out.write(stackSize  -  this.values.length,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.values.length,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.values.length,  stackSize);	  out.write(stackSize    -    this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
832	[BUG]  [BUGGY]  out.write('n',  stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n',  stackSize  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n',  stackSize  +  1);	  out.write('n',    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
833	[BUG]  [BUGGY]  out.write('n',  stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n',  stackSize  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n',  stackSize  -  1);	  out.write('n',    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
834	[BUG]  [BUGGY]  out.write('n',  this.separator);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n',  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n',  this.separator);	  out.write('n',    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
835	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	64	None	replace
836	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
837	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
838	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
839	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	64	None	replace
840	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
841	[BUG]  [BUGGY]  out.write('/',  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('/',  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('/',  stackSize);	  out.write('/');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
842	[BUG]  [BUGGY]  out.write('/'  +  separator);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('/'  +  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('/'  +  separator);	  out.write('/');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
843	[BUG]  [BUGGY]  out.write('/'  +  values.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('/'  +  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('/'  +  values.length);	  out.write('/');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
844	[BUG]  [BUGGY]  out.write('/').getBytes();  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('/').getBytes();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('/').getBytes();	  out.write('/');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
845	[BUG]  [BUGGY]  final  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  final  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	final  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
846	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  	163	None	replace
847	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(separator  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(separator  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(separator	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  	163	None	replace
848	[BUG]  [BUGGY]  int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
849	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  	163	None	replace
850	[BUG]  [BUGGY]  this.serializeNulls  =  values.length  -  1;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  values.length  -  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  values.length  -  1;	  this.serializeNulls    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
851	[BUG]  [BUGGY]  this.serializeNulls  =  values.length  +  1;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  values.length  +  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  values.length  +  1;	  this.serializeNulls    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
852	[BUG]  [BUGGY]  this.serializeNulls  =  new  int[size()  ];  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  new  int[size()  ];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  new  int[size()  ];	  this.serializeNulls    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
853	[BUG]  [BUGGY]  this.serializeNulls  =  serializeNulls;  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  serializeNulls;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  serializeNulls;	  this.serializeNulls    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
854	[BUG]  [BUGGY]  this.serializeNulls  =  null;  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  null;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  null;	  this.serializeNulls    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
855	[BUG]  [BUGGY]  if(stackSize!=  0  ||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0  ||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0  ||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
856	[BUG]  [BUGGY]  if(stackSize!=  0  ||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0  ||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0  ||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
857	[BUG]  [BUGGY]  (stackSize  >=  0)?)  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  (stackSize  >=  0)?)  throw  new  IllegalArgumentException( " ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	(stackSize  >=  0)?)  throw  new  IllegalArgumentException( " ");	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
858	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	199	None	replace
859	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	199	None	replace
860	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	199	None	replace
861	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	199	None	replace
862	[BUG]  [BUGGY]  safeSerialize(stack.length)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack.length)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack.length)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
863	[BUG]  [BUGGY]  safeSerialize(stack[i])  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack[i])  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack[i])  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
864	[BUG]  [BUGGY]  safeSerialize(stack,  true)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack,  true)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack,  true)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
865	[BUG]  [BUGGY]  safeSerialize(stackSize)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stackSize)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stackSize)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
866	[BUG]  [BUGGY]  safeSerialize(stackSize)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stackSize)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stackSize)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
867	[BUG]  [BUGGY]  safeSerialize(stack[i])  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack[i])  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack[i])  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
868	[BUG]  [BUGGY]  safeSerialize(stack.length)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack.length)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack.length)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
869	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    lenient;    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
870	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    lenient;    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
871	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    lenient;    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
872	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
873	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
874	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [CE]  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  	54	None	replace
875	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
876	[BUG]  [BUGGY]  if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName  ==  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
877	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
878	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
879	[BUG]  [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
880	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
881	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
882	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	128	None	replace
883	[BUG]  [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
884	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  0);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  0);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  0);	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
885	[BUG]  [BUGGY]  out.write(''+  values.length);  [CE]  empty  character  literal  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(''+  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(''+  values.length);	  out.write('    ');    	non-compiled	[CE]  empty  character  literal	171	None	replace
886	[BUG]  [BUGGY]  out.write('  ',  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('  ',  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('  ',  stackSize);	  out.write('    ');    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
887	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
888	[BUG]  [BUGGY]  int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[separator.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
889	[BUG]  [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
890	[BUG]  [BUGGY]  safeSerialize(stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	190	None	replace
891	[BUG]  [BUGGY]  safeSerialize(stack.length,  lenient))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack.length,  lenient))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack.length,  lenient))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	190	None	replace
892	[BUG]  [BUGGY]  safeSerialize(stack.length,  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack.length,  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack.length,  lenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	190	None	replace
893	[BUG]  [BUGGY]  if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	222	None	replace
894	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[0];  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[0];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[0];  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	222	None	replace
895	[BUG]  [BUGGY]  out.write(this.deferredName  *  separator);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  *  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  *  separator);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
896	[BUG]  [BUGGY]  out.write(this.deferredName  -  this.lenient);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  -  this.lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  this.lenient);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
897	[BUG]  [BUGGY]  out.write(this.deferredName  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  1);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
898	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
899	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
900	[BUG]  [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
901	[BUG]  [BUGGY]  int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
902	[BUG]  [BUGGY]  int[]  stack  =  new  int[2];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[2];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[2];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
903	[BUG]  [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
904	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
905	[BUG]  [BUGGY]  if(htmlSafe)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
906	[BUG]  [BUGGY]  if(htmlSafe)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
907	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
908	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
909	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
910	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  +  Integer.toString(separator);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  +  Integer.toString(separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  +  Integer.toString(separator);	  this.deferredName    =    getDeferredName()    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
911	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  +  Integer.toHexString(separator);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  +  Integer.toHexString(separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  +  Integer.toHexString(separator);	  this.deferredName    =    getDeferredName()    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
912	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  +  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  +  Integer.MAX_VALUE;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  +  Integer.MAX_VALUE;	  this.deferredName    =    getDeferredName()    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
913	[BUG]  [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
914	[BUG]  [BUGGY]  safeSerialize(stack,  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack,  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack,  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  	61	None	replace
915	[BUG]  [BUGGY]  safeSerialize(stack,  0,  stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack,  0,  stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack,  0,  stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  	61	None	replace
916	[BUG]  [BUGGY]  safeSerialize(stack,  0,  stackSize))  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack,  0,  stackSize))  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack,  0,  stackSize))  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  	61	None	replace
917	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[0]  =  new  String(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[0]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[0]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
918	[BUG]  [BUGGY]  int[]  stack  =  new  byte[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  byte[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  byte[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
919	[BUG]  [BUGGY]  Stack[]  stack  =  new  Stack[stackSize  *  stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Stack[]  stack  =  new  Stack[stackSize  *  stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Stack[]  stack  =  new  Stack[stackSize  *  stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
920	[BUG]  [BUGGY]  Arrays.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Arrays.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Arrays.arraycopy(stack,  0,  stack,  0,  stackSize);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
921	[BUG]  [BUGGY]  Stack[]  stack  =  new  Stack[1];  System.arraycopy(stack,  0,  stack,  0,  1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Stack[]  stack  =  new  Stack[1];  System.arraycopy(stack,  0,  stack,  0,  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Stack[]  stack  =  new  Stack[1];  System.arraycopy(stack,  0,  stack,  0,  1);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
922	[BUG]  [BUGGY]  out.write(this.lenient,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.lenient,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.lenient,  0,  stackSize);	  out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
923	[BUG]  [BUGGY]  out.write(stack,  0,  stackSize  -  2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack,  0,  stackSize  -  2);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack,  0,  stackSize  -  2);	  out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
924	[BUG]  [BUGGY]  out.write(this.separator  +  indent);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator  +  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator  +  indent);	  out.write(this.separator);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
925	[BUG]  [BUGGY]  out.write(this.separator  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator  +  1);	  out.write(this.separator);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
926	[BUG]  [BUGGY]  out.write(this.separator,  this.separator);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator,  this.separator);	  out.write(this.separator);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
927	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
928	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values,  stackSize);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
929	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  null);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  null);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  null);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
930	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  indent);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  indent);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
931	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stackSize,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stackSize,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stackSize,  0,  stackSize);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
932	[BUG]  [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	164	None	replace
933	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	164	None	replace
934	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
935	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
936	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.  [CE]  <identifier>  expected  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
937	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	164	None	replace
938	[BUG]  [BUGGY]  int  stackSize  =  stackLenient;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stackLenient;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackLenient;	  if(stackSize!=    stackLenient)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
939	[BUG]  [BUGGY]  if(stackSize!=  lenient.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  lenient.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  lenient.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackLenient)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
940	[BUG]  [BUGGY]  out.write('#'  +  deferredName);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('#'  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('#'  +  deferredName);	  out.write('#');    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
941	[BUG]  [BUGGY]  out.write('>');  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('>');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('>');	  out.write('#');    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
942	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(deferred,  lenient);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(deferred,  lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(deferred,  lenient);	  this.deferredName    =    getDeferredName(deferred);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
943	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(deferred,  indent);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(deferred,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(deferred,  indent);	  this.deferredName    =    getDeferredName(deferred);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
944	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(deferred,  htmlSafe);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(deferred,  htmlSafe);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(deferred,  htmlSafe);	  this.deferredName    =    getDeferredName(deferred);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
945	[BUG]  [BUGGY]  out.write(stackSize  *  REPLACEMENT_CHARS);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  REPLACEMENT_CHARS);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  REPLACEMENT_CHARS);	  out.write(stackSize    *    separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
946	[BUG]  [BUGGY]  out.write(deferredName  *  stackSize);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  *  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  *  stackSize);	  out.write(stackSize    *    separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
947	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  DEFERRED_NAME);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    indent);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
948	[BUG]  [BUGGY]  if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
949	[BUG]  [BUGGY]  String[]  stack  =  new  String[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  String[]    stack    =    new    String[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
950	[BUG]  [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  String[]    stack    =    new    String[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
951	[BUG]  [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);	  String[]    stack    =    new    String[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
952	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
953	[BUG]  [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.htmlSafe!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
954	[BUG]  [BUGGY]  if(htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.htmlSafe!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
955	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length	  if(this.htmlSafe!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  	166	None	replace
956	[BUG]  [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length	  if(this.htmlSafe!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  	166	None	replace
957	[BUG]  [BUGGY]  safeSerialize(values)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(values)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(values)  {  throw  new  IllegalArgumentException( " ");  }	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	139	None	replace
958	[BUG]  [BUGGY]  safeSerialize(this.serialize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(this.serialize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(this.serialize)  {  throw  new  IllegalArgumentException( " ");  }	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	139	None	replace
959	[BUG]  [BUGGY]  safeSerialize(this.lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(this.lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(this.lenient)  {  throw  new  IllegalArgumentException( " ");  }	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	139	None	replace
960	[BUG]  [BUGGY]  out.write(','  +  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(','  +  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(','  +  stackSize);	  out.write(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
961	[BUG]  [BUGGY]  out.write(',').replace('n',  'r');  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(',').replace('n',  'r');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(',').replace('n',  'r');	  out.write(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
962	[BUG]  [BUGGY]  out.write(',').replace('0',  '0');  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(',').replace('0',  '0');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(',').replace('0',  '0');	  out.write(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
963	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(this.deferredName,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(this.deferredName,  0,  stack,  0,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(this.deferredName,  0,  stack,  0,  this.deferredName);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
964	[BUG]  [BUGGY]  System.arraycopy(this.deferredName,  0,  stack,  0,  this.separator);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  System.arraycopy(this.deferredName,  0,  stack,  0,  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	System.arraycopy(this.deferredName,  0,  stack,  0,  this.separator);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
965	[BUG]  [BUGGY]  int[]  stack  =  new  int[this.deferredName];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[this.deferredName];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[this.deferredName];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
966	[BUG]  [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
967	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
968	[BUG]  [BUGGY]  if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
969	[BUG]  [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
970	[BUG]  [BUGGY]  this.serializeNulls  =  Arrays.copyOf(values,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  Arrays.copyOf(values,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  Arrays.copyOf(values,  stackSize);	  this.serializeNulls    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
971	[BUG]  [BUGGY]  this.serializeNulls  =  Arrays.copyOf(values,  values.length);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  Arrays.copyOf(values,  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  Arrays.copyOf(values,  values.length);	  this.serializeNulls    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
972	[BUG]  [BUGGY]  out.write(stackSize,  0,  size);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
973	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);  out.write(stack,  0,  value.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);  out.write(stack,  0,  value.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  0,  size);  out.write(stack,  0,  value.length);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
974	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED_NUMBER_ARRAY;  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  DEFERRED_NUMBER_ARRAY;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED_NUMBER_ARRAY;	  this.deferredName    =    deferred;    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
975	[BUG]  [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  separator);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  separator);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  separator);  }	  if(separator!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
976	[BUG]  [BUGGY]  out.write(this.stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.stackSize  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stackSize  +  1);	  out.write(this.stackSize);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
977	[BUG]  [BUGGY]  out.write(this.stack[0]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.stack[0]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stack[0]);	  out.write(this.stackSize);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
978	[BUG]  [BUGGY]  out.write(this.stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stack,  0,  stackSize);	  out.write(this.stackSize);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
979	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stackSize,  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stackSize,  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stackSize,  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
980	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
981	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  out,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  out,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  out,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
982	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
983	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  DEFERRED_NAME,  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  DEFERRED_NAME,  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  DEFERRED_NAME,  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
984	[BUG]  [BUGGY]  this.serializeNulls  =  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
985	[BUG]  [BUGGY]  this.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
986	[BUG]  [BUGGY]  out.write(this.lenient  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.lenient  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.lenient  -  1);	  out.write(stackSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
987	[BUG]  [BUGGY]  if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
988	[BUG]  [BUGGY]  if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  0);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  0);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  0);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
989	[BUG]  [BUGGY]  if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
990	[BUG]  [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	128	None	replace
991	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
992	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	128	None	replace
993	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.  [CE]  <identifier>  expected  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
994	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	128	None	replace
995	[BUG]  [BUGGY]  (separator  >=  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  (separator  >=  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	(separator  >=  0))  {  throw  new  IllegalArgumentException( " ");  }	  (stackSize    >=    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	90	None	replace
996	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  0);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  0);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  0);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
997	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  0.5);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  0.5);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  0.5);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
998	[BUG]  [BUGGY]  htmlSafe.serialize(values,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(values,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(values,  0,  stackSize);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
999	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  DEFERRED_NUMBER);  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  DEFERRED_NUMBER);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  DEFERRED_NUMBER);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1000	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]                                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize  +  1);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1001	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1002	[BUG]  [BUGGY]  this.serializeNulls  =  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	88	None	replace
1003	[BUG]  [BUGGY]  &&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1004	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1005	[BUG]  [BUGGY]  &&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1006	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1007	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1008	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1009	[BUG]  [BUGGY]  &&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1010	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  separator);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1011	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1012	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  null);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  null);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  null);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1013	[BUG]  [BUGGY]  if(separator!=  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(stackSize!=    0)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1014	[BUG]  [BUGGY]  out.write('-'  +  this.separator);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('-'  +  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('-'  +  this.separator);	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
1015	[BUG]  [BUGGY]  out.write('-'  +  getSeparator());  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('-'  +  getSeparator());  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('-'  +  getSeparator());	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
1016	[BUG]  [BUGGY]  out.write('-'  +  getName());  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('-'  +  getName());  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('-'  +  getName());	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
1017	[BUG]  [BUGGY]  out.write('-'  +  getValue());  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('-'  +  getValue());  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('-'  +  getValue());	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
1018	[BUG]  [BUGGY]  int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[separatorSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1019	[BUG]  [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1020	[BUG]  [BUGGY]  this.separator  =  ++stackSize;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  ++stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  ++stackSize;	  this.separator    =    lenient;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1021	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1022	[BUG]  [BUGGY]  &&  stack.length  >  0)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  stack.length  >  0)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  stack.length  >  0)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1023	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1024	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	66	None	replace
1025	[BUG]  [BUGGY]  if(htmlSafe)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(separator!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1026	[BUG]  [BUGGY]  out.write(stackSize  -  this.indent);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.indent);	  out.write(stackSize    -    indent);    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1027	[BUG]  [BUGGY]  if(!lenient)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1028	[BUG]  [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1029	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1030	[BUG]  [BUGGY]  out.write( "Lenient() ");  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient() ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient() ");	  out.write(   "Lenient   ");    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1031	[BUG]  [BUGGY]  safeSerializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(serializeNulls)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	143	None	replace
1032	[BUG]  [BUGGY]  int[]  stack  =  new  int[serializeNulls];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[serializeNulls];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[serializeNulls];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(serializeNulls)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1033	[BUG]  [BUGGY]  safeSerializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(serializeNulls)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	143	None	replace
1034	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
1035	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
1036	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1037	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1038	[BUG]  [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  0);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  0);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  0);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1039	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[0];	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
1040	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  0);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  0);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize,  0);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1041	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values,  0,  stackSize);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1042	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize  +  1);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1043	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  0.5);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  0.5);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize,  0.5);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1044	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  lenient);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize,  lenient);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1045	[BUG]  [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
1046	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.lenient!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.lenient!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
1047	[BUG]  [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
1048	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.lenient!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.lenient!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
1049	[BUG]  [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  value;  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  value;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  value;  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
1050	[BUG]  [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
1051	[BUG]  [BUGGY]  out.write(deferredName  *  separator);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  *  separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  *  separator);	  out.write(deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1052	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1053	[BUG]  [BUGGY]  out.write(stackSize  *  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	194	None	replace
1054	[BUG]  [BUGGY]  out.write(stack[0]  ==  0)&&(stackSize!=  0))  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack[0]  ==  0)&&(stackSize!=  0))  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack[0]  ==  0)&&(stackSize!=  0))  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	194	None	replace
1055	[BUG]  [BUGGY]  out.write(stack[0]  ==  -1? "   "  :  stack[1]  ==  -1? "  <  null> "  :  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack[0]  ==  -1? "   "  :  stack[1]  ==  -1? "  <  null> "  :  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack[0]  ==  -1? "   "  :  stack[1]  ==  -1? "  <  null> "  :  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	194	None	replace
1056	[BUG]  [BUGGY]  out.write(stack[0]  ==  -1? "   "  :  stack[1]  ==  -1? "  <  null> "  :  stackSize)  {  out.write('n');  }  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack[0]  ==  -1? "   "  :  stack[1]  ==  -1? "  <  null> "  :  stackSize)  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack[0]  ==  -1? "   "  :  stack[1]  ==  -1? "  <  null> "  :  stackSize)  {  out.write('n');  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	194	None	replace
1057	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1058	[BUG]  [BUGGY]  if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1059	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1060	[BUG]  [BUGGY]  if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1061	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1062	[BUG]  [BUGGY]  out.write('0'  +  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('0'  +  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('0'  +  DEFERRED_NAME);	  out.write('0');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1063	[BUG]  [BUGGY]  out.write('0'  +  DEFERRED_NUMBER);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('0'  +  DEFERRED_NUMBER);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('0'  +  DEFERRED_NUMBER);	  out.write('0');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1064	[BUG]  [BUGGY]  out.write('0'  +  getValue());  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('0'  +  getValue());  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('0'  +  getValue());	  out.write('0');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1065	[BUG]  [BUGGY]  if(this.separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1066	[BUG]  [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  1;  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  1;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  1;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1067	[BUG]  [BUGGY]  int  stackSize  =(separator!=  null)?  0  :  stackSize;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =(separator!=  null)?  0  :  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =(separator!=  null)?  0  :  stackSize;	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1068	[BUG]  [BUGGY]  int  stackSize  =(separator  ==  null)?  0  :  stackSize;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =(separator  ==  null)?  0  :  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =(separator  ==  null)?  0  :  stackSize;	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1069	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	107	None	replace
1070	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	107	None	replace
1071	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	199	None	replace
1072	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	199	None	replace
1073	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  2,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  2,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  2,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	199	None	replace
1074	[BUG]  [BUGGY]  if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  null;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  null;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1075	[BUG]  [BUGGY]  out.write('/'  +  this.separator);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('/'  +  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('/'  +  this.separator);	  out.write('/');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1076	[BUG]  [BUGGY]  out.write('/',  stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('/',  stackSize  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('/',  stackSize  -  1);	  out.write('/');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1077	[BUG]  [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1078	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1079	[BUG]  [BUGGY]  this.serializeNulls  =  Arrays.copyOf(stackSize,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  Arrays.copyOf(stackSize,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  Arrays.copyOf(stackSize,  stackSize);	  this.serializeNulls    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1080	[BUG]  [BUGGY]  this.serializeNulls  =  0;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  0;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  0;	  this.serializeNulls    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1081	[BUG]  [BUGGY]  this.serializeNulls  =  Arrays.copyOf(stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  Arrays.copyOf(stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  Arrays.copyOf(stackSize);	  this.serializeNulls    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1082	[BUG]  [BUGGY]  this.serializeNulls  =  Arrays.asList(stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  Arrays.asList(stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  Arrays.asList(stackSize);	  this.serializeNulls    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1083	[BUG]  [BUGGY]  this.serializeNulls  =  Arrays.copyOf(stackSize,  values.length);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  Arrays.copyOf(stackSize,  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  Arrays.copyOf(stackSize,  values.length);	  this.serializeNulls    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1084	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values);  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values);  stackSize  =  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values);  stackSize  =  stackSize;	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1085	[BUG]  [BUGGY]  indent  =  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  indent  =  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	indent  =  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1086	[BUG]  [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1087	[BUG]  [BUGGY]  htmlSafe.serializeNulls(deferredName);  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(deferredName);  stackSize  =  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(deferredName);  stackSize  =  stackSize;	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1088	[BUG]  [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	java.lang.Integer[]  stack  =  new  java.lang.Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1089	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1090	[BUG]  [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1091	[BUG]  [BUGGY]  out.write(stackSize  *  this.values.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  this.values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  this.values.length);	  out.write(stackSize    -    this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1092	[BUG]  [BUGGY]  out.write(stackSize  -  this.values.length  -  1);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.values.length  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.values.length  -  1);	  out.write(stackSize    -    this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1093	[BUG]  [BUGGY]  safeSerialize(stack[i])  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack[i])  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack[i])  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
1094	[BUG]  [BUGGY]  safeSerialize(stack,  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack,  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack,  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
1095	[BUG]  [BUGGY]  safeSerialize(stack,  0,  stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack,  0,  stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack,  0,  stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
1096	[BUG]  [BUGGY]  safeSerialize(stack.length)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack.length)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack.length)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
1097	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1098	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1099	[BUG]  [BUGGY]  out.write('L'  +  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('L'  +  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('L'  +  DEFERRED_NAME);	  out.write('L');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1100	[BUG]  [BUGGY]  out.write('L',  'n');  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('L',  'n');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('L',  'n');	  out.write('L');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1101	[BUG]  [BUGGY]  out.write('L',  '/');  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('L',  '/');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('L',  '/');	  out.write('L');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1102	[BUG]  [BUGGY]  out.write('L'  +  'n');  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('L'  +  'n');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('L'  +  'n');	  out.write('L');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1103	[BUG]  [BUGGY]  out.write( "[null] ");  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[null] ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[null] ");	  out.write(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1104	[BUG]  [BUGGY]  out.write( "  <  null> ");  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "  <  null> ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "  <  null> ");	  out.write(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1105	[BUG]  [BUGGY]  out.write( "null ").write(stackSize);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "null ").write(stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "null ").write(stackSize);	  out.write(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1106	[BUG]  [BUGGY]  out.write( "null ").write(this.separator);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "null ").write(this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "null ").write(this.separator);	  out.write(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1107	[BUG]  [BUGGY]  out.write( "[Lenient] ").write(stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[Lenient] ").write(stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] ").write(stackSize);	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1108	[BUG]  [BUGGY]  out.write( "[Lenient] "  +  this.separator);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[Lenient] "  +  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] "  +  this.separator);	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1109	[BUG]  [BUGGY]  out.write( "[Lenient] "  +  lenient);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[Lenient] "  +  lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] "  +  lenient);	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1110	[BUG]  [BUGGY]  out.write(stackSize  -  indent.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  indent.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  indent.length);	  out.write(stackSize    -    separator.length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1111	[BUG]  [BUGGY]  out.write(stackSize  *  separator.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  separator.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  separator.length);	  out.write(stackSize    -    separator.length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1112	[BUG]  [BUGGY]  out.write(stackSize  -  1,  separator.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  separator.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  separator.length);	  out.write(stackSize    -    separator.length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1113	[BUG]  [BUGGY]  (separator  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  (separator  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	(separator  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(separator!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	87	None	replace
1114	[BUG]  [BUGGY]  if(separator!=  null  ||  stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null  ||  stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null  ||  stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(separator!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1115	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1116	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  	165	None	replace
1117	[BUG]  [BUGGY]  if(htmlSafe)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1118	[BUG]  [BUGGY]  out.write('%'  +  getValues());  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%'  +  getValues());  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%'  +  getValues());	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1119	[BUG]  [BUGGY]  out.write('%',  indent);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%',  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%',  indent);	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1120	[BUG]  [BUGGY]  out.write('%'  +  getValue());  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%'  +  getValue());  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%'  +  getValue());	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1121	[BUG]  [BUGGY]  out.write('%').replace(stackSize,  0);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%').replace(stackSize,  0);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%').replace(stackSize,  0);	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1122	[BUG]  [BUGGY]  if(this.separator!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.separator!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.separator!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1123	[BUG]  [BUGGY]  if(separator!=  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	140	None	replace
1124	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  valueSize);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  valueSize);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  valueSize);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1125	[BUG]  [BUGGY]  this.separator  =  DEFERRED_CHARS;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  DEFERRED_CHARS;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  DEFERRED_CHARS;	  this.separator    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
1126	[BUG]  [BUGGY]  out.print( "Lenient ");  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.print( "Lenient ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.print( "Lenient ");	  out.defaultWrite(   "Lenient   ");    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1127	[BUG]  [BUGGY]  out.append( "Lenient ");  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.append( "Lenient ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.append( "Lenient ");	  out.defaultWrite(   "Lenient   ");    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1128	[BUG]  [BUGGY]  out.println( "Lenient ");  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.println( "Lenient ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.println( "Lenient ");	  out.defaultWrite(   "Lenient   ");    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1129	[BUG]  [BUGGY]  this.separator  =  _separator  +  1;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  _separator  +  1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  _separator  +  1;	  this.separator    =    _separator;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1130	[BUG]  [BUGGY]  this.separator  =  TYPE_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  TYPE_SEPARATOR;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  TYPE_SEPARATOR;	  this.separator    =    _separator;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1131	[BUG]  [BUGGY]  this.separator  =  -1;  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  -1;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  -1;	  this.separator    =    _separator;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1132	[BUG]  [BUGGY]  while(stackSize!=  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize!=  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize!=  1)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1133	[BUG]  [BUGGY]  while(this.separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(this.separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(this.separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1134	[BUG]  [BUGGY]  while(stackSize!=  3)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize!=  3)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize!=  3)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1135	[BUG]  [BUGGY]  safeSerialize(stack,  0,  stackSize))  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stack,  0,  stackSize))  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stack,  0,  stackSize))  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    int[size()    ];    }    	non-compiled	[CE]  	59	None	replace
1136	[BUG]  [BUGGY]  safeSerialize(stackSize)>  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stackSize)>  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stackSize)>  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    int[size()    ];    }    	non-compiled	[CE]  not  a  statement	59	None	replace
1137	[BUG]  [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  int  stackSize  =  stackSize;  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1138	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  stackLenient;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  for(int  i  =  stackLenient;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  for(int  i  =  stackLenient;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1139	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length  +  1);  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length  +  1);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length  +  1);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1140	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(separator!=    null)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1141	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }	  if(separator!=    null)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1142	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
1143	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	217	None	replace
1144	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
1145	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1146	[BUG]  [BUGGY]  if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1147	[BUG]  [BUGGY]  if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1148	[BUG]  [BUGGY]  out.write(stackSize  -  1,  value.length);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  value.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  value.length);	  out.write(stackSize    -    1,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1149	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[5],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[5],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[5],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1150	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1151	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  null);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  null);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  null);  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1152	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  data[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  data[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  data[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    values[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1153	[BUG]  [BUGGY]  out.write( "Lenient:  {  0  }   ");  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient:  {  0  }   ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient:  {  0  }   ");	  out.write(   "Lenient:   ");    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1154	[BUG]  [BUGGY]  out.write( "Lenient: "  +  this.separator);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient: "  +  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient: "  +  this.separator);	  out.write(   "Lenient:   ");    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1155	[BUG]  [BUGGY]  out.write(stack[0]  ==  0)  {  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack[0]  ==  0)  {  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack[0]  ==  0)  {	  if(stackSize    ==    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	195	None	replace
1156	[BUG]  [BUGGY]  out.write(stackSize  +  1).replace('ufffd',  'ufffd');  [CE]  unclosed  character  literal  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  1).replace('ufffd',  'ufffd');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  1).replace('ufffd',  'ufffd');	  out.write(stackSize    +    1);    	non-compiled	[CE]  unclosed  character  literal	158	None	replace
1157	[BUG]  [BUGGY]  if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
1158	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1159	[BUG]  [BUGGY]  indent  =  htmlSafe.serializeNulls(stackSize);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  indent  =  htmlSafe.serializeNulls(stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	indent  =  htmlSafe.serializeNulls(stackSize);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1160	[BUG]  [BUGGY]  htmlSafe.serializeNull(values);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(values);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1161	[BUG]  [BUGGY]  htmlSafe.serialize(values,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(values,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(values,  stackSize);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1162	[BUG]  [BUGGY]  htmlSafe.serializeNulls(this.values);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(this.values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(this.values);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1163	[BUG]  [BUGGY]  htmlSafe.serialize(values);  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(values);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1164	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]  +  1);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1165	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	63	None	replace
1166	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1167	[BUG]  [BUGGY]  if(lenient!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    lenient)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
1168	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	216	None	replace
1169	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	216	None	replace
1170	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[1],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[1],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[1],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	216	None	replace
1171	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1172	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	133	None	replace
1173	[BUG]  [BUGGY]  if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1174	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1175	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	136	None	replace
1176	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1177	[BUG]  [BUGGY]  if(separator!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  0)  {  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1178	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1179	[BUG]  [BUGGY]  out.write(this.deferredName  + "n ");  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  + "n ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  + "n ");	  out.write(this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
1180	[BUG]  [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1181	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1182	[BUG]  [BUGGY]  Integer[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Integer[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1183	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	137	None	replace
1184	[BUG]  [BUGGY]  out.write( "Lenients:  {  0  }   ");  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenients:  {  0  }   ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenients:  {  0  }   ");	  out.write(   "Lenients:   ");    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1185	[BUG]  [BUGGY]  out.write( "Lenients:  {   ");  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenients:  {   ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenients:  {   ");	  out.write(   "Lenients:   ");    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1186	[BUG]  [BUGGY]  out.write(this.values.length  -  this.lenient);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values.length  -  this.lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values.length  -  this.lenient);	  out.write(stackSize    -    this.lenient);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1187	[BUG]  [BUGGY]  out.write(this.Lenient  -  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.Lenient  -  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.Lenient  -  stackSize);	  out.write(stackSize    -    this.lenient);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1188	[BUG]  [BUGGY]  this.separator  =  deferred;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  deferred;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  deferred;	  this.separator    =    separator;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1189	[BUG]  [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1190	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1191	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  this.stack[2]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  this.stack[2]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack[0],  stack[1],  this.stack[2]);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1192	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  null);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  null);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack[0],  stack[1],  null);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1193	[BUG]  [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [CE]  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	162	None	replace
1194	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	162	None	replace
1195	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
1196	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.  [CE]  <identifier>  expected  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
1197	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	162	None	replace
1198	[BUG]  [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1199	[BUG]  [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1200	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  separator);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  separator);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  separator);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1201	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1202	[BUG]  [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1203	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;  [CE]  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	149	None	replace
1204	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]  }  ;  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	149	None	replace
1205	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  indent);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  indent);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
1206	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  DEFERRED_NAME);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
1207	[BUG]  [BUGGY]  if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1208	[BUG]  [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1209	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1210	[BUG]  [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	130	None	replace
1211	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	130	None	replace
1212	[BUG]  [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  if(serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1213	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1214	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	130	None	replace
1215	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  REPLACEMENT_CHARS);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  REPLACEMENT_CHARS);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(DEFERRED_NAME,  REPLACEMENT_CHARS);	  this.deferredName    =    getDeferredName(DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1216	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  lenient);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(DEFERRED_NAME,  lenient);	  this.deferredName    =    getDeferredName(DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1217	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[4],  stack[4]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	177	None	replace
1218	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0.0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0.0;  }	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
1219	[BUG]  [BUGGY]  int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  >  expected  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  >  expected	185	None	replace
1220	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
1221	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	218	None	replace
1222	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	218	None	replace
1223	[BUG]  [BUGGY]  out.write(stackSize  +  indent);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  indent);	  out.write(stackSize    +    separator);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1224	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1225	[BUG]  [BUGGY]  out.write(this.values.length  *  2);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values.length  *  2);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values.length  *  2);	  out.write(this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
1226	[BUG]  [BUGGY]  out.write( "Lenient[ "  +  this.separator  + "] ");  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient[ "  +  this.separator  + "] ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient[ "  +  this.separator  + "] ");	  out.write(   "Lenient[   ");    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1227	[BUG]  [BUGGY]  out.write( "Lenient[ "  +  this.deferredName  + "] ");  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient[ "  +  this.deferredName  + "] ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient[ "  +  this.deferredName  + "] ");	  out.write(   "Lenient[   ");    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1228	[BUG]  [BUGGY]  out.write( "Lenient[ ").write(stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient[ ").write(stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient[ ").write(stackSize);	  out.write(   "Lenient[   ");    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1229	[BUG]  [BUGGY]  out.write( "Lenient[ "  +  lenient  + "] ");  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient[ "  +  lenient  + "] ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient[ "  +  lenient  + "] ");	  out.write(   "Lenient[   ");    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1230	[BUG]  [BUGGY]  if(stackSize!=  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1231	[BUG]  [BUGGY]  this.serializeNulls  =  stackSize  >>  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  stackSize  >>  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  stackSize  >>  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	86	None	replace
1232	[BUG]  [BUGGY]  indent  =  stackSize  >>  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  indent  =  stackSize  >>  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	indent  =  stackSize  >>  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	86	None	replace
1233	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[5]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
1234	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  htmlSafe);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  htmlSafe);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  htmlSafe);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
1235	[BUG]  [BUGGY]  if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
1236	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
1237	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[2];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[2];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[2];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
1238	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[6]);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1239	[BUG]  [BUGGY]  out.write(this.values.length  -  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.values.length  -  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values.length  -  this.deferredName);	  out.write(stackSize    -    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1240	[BUG]  [BUGGY]  out.write(this.separator  -  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator  -  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator  -  this.deferredName);	  out.write(stackSize    -    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1241	[BUG]  [BUGGY]  out.write(stackSize  -  this.deferredName,  indent);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.deferredName,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.deferredName,  indent);	  out.write(stackSize    -    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1242	[BUG]  [BUGGY]  out.write(''+  this.separator);  [CE]  empty  character  literal  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(''+  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(''+  this.separator);	  out.write('    ');    	non-compiled	[CE]  empty  character  literal	171	None	replace
1243	[BUG]  [BUGGY]  out.write(''+  getValue());  [CE]  empty  character  literal  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(''+  getValue());  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(''+  getValue());	  out.write('    ');    	non-compiled	[CE]  empty  character  literal	171	None	replace
1244	[BUG]  [BUGGY]  out.write(separator  -  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(separator  -  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(separator  -  DEFERRED_NAME);	  out.write(stackSize    -    DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
1245	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  }	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    size);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1246	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  }  );  [CE]  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]    +    1);    	non-compiled	[CE]  	42	None	replace
1247	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  }  ;  [CE]  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]    +    1);    	non-compiled	[CE]  	42	None	replace
1248	[BUG]  [BUGGY]  &&  separator)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1249	[BUG]  [BUGGY]  &&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1250	[BUG]  [BUGGY]  &&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1251	[BUG]  [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  separator)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1252	[BUG]  [BUGGY]  &&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1253	[BUG]  [BUGGY]  this.separator  =!htmlSafe;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =!htmlSafe;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =!htmlSafe;	  this.separator    =!lenient;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1254	[BUG]  [BUGGY]  this.separator  =!this.htmlSafe;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =!this.htmlSafe;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =!this.htmlSafe;	  this.separator    =!lenient;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1255	[BUG]  [BUGGY]  (separator!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  (separator!=  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	(separator!=  0))  {  throw  new  IllegalArgumentException( " ");  }	  (stackSize    >>    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	89	None	replace
1256	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  0.5);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  0.5);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  0.5);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1257	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(separator,  0,  stack,  0,  stackSize);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(separator,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize],  System.arraycopy(separator,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize],    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	96	None	replace
1258	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  size);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  size);	  int[]    stack    =    new    int[stackSize],    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	96	None	replace
1259	[BUG]  [BUGGY]  out.write( ".separator ".charAt(0))  {  if(stackSize!=  0)  {  out.write('n');  }  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( ".separator ".charAt(0))  {  if(stackSize!=  0)  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( ".separator ".charAt(0))  {  if(stackSize!=  0)  {  out.write('n');  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  	197	None	replace
1260	[BUG]  [BUGGY]  out.write( ".separator ".charAt(stackSize  -  1))  {  if(stackSize!=  0)  {  out.write('n');  }  [CE]  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( ".separator ".charAt(stackSize  -  1))  {  if(stackSize!=  0)  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( ".separator ".charAt(stackSize  -  1))  {  if(stackSize!=  0)  {  out.write('n');  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  	197	None	replace
1261	[BUG]  [BUGGY]  out.write( ".separator ".charAt(0))  {  if(stackSize!=  '0')  {  out.write('n');  }  [CE]  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( ".separator ".charAt(0))  {  if(stackSize!=  '0')  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( ".separator ".charAt(0))  {  if(stackSize!=  '0')  {  out.write('n');  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  	197	None	replace
1262	[BUG]  [BUGGY]  out.write( ".separator ".charAt(stackSize  -  1))  {  if(stackSize!=  '0')  {  out.write('n');  }  [CE]  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( ".separator ".charAt(stackSize  -  1))  {  if(stackSize!=  '0')  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( ".separator ".charAt(stackSize  -  1))  {  if(stackSize!=  '0')  {  out.write('n');  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  	197	None	replace
1263	[BUG]  [BUGGY]  out.write('n');  if(separator!=  stackSize)  {  out.write('n');  }  else  {  indent  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n');  if(separator!=  stackSize)  {  out.write('n');  }  else  {  indent  =  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n');  if(separator!=  stackSize)  {  out.write('n');  }  else  {  indent  =  stackSize;  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1264	[BUG]  [BUGGY]  out.write( ".separator ".charAt(stackSize  -  1))  {  if(stackSize!=  stackSize)  {  out.write('n');  }  [CE]  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( ".separator ".charAt(stackSize  -  1))  {  if(stackSize!=  stackSize)  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( ".separator ".charAt(stackSize  -  1))  {  if(stackSize!=  stackSize)  {  out.write('n');  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  	197	None	replace
1265	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  + ".Lenient ";  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  + ".Lenient ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  + ".Lenient ";	  this.deferredName    =    getDeferredName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1266	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  + ",null ";  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  + ",null ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  + ",null ";	  this.deferredName    =    getDeferredName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1267	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  + "-Lenient ";  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  + "-Lenient ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  + "-Lenient ";	  this.deferredName    =    getDeferredName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1268	[BUG]  [BUGGY]  this.deferredName  =  getDeclaringName();  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeclaringName();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeclaringName();	  this.deferredName    =    getLenientName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1269	[BUG]  [BUGGY]  this.deferredName  =  getDeserializeNulls();  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeserializeNulls();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeserializeNulls();	  this.deferredName    =    getLenientName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1270	[BUG]  [BUGGY]  this.deferredName  =  getDeepestName();  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeepestName();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeepestName();	  this.deferredName    =    getLenientName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1271	[BUG]  [BUGGY]  this.deferredName  =  getDeclarationName();  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeclarationName();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeclarationName();	  this.deferredName    =    getLenientName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1272	[BUG]  [BUGGY]  if(separator!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(stackSize!=    stack.length)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1273	[BUG]  [BUGGY]  if(stackSize!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(stackSize!=    stack.length)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1274	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  );  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	134	None	replace
1275	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]  }  );  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	134	None	replace
1276	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	131	None	replace
1277	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]  }  ;  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	131	None	replace
1278	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	65	None	replace
1279	[BUG]  [BUGGY]  this.separator  =  STRICT_LEN  +  separator;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  STRICT_LEN  +  separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  STRICT_LEN  +  separator;	  this.separator    =    STRICT_LEN;    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
1280	[BUG]  [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  0);  out.write(stack,  0,  0);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  0);  out.write(stack,  0,  0);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  0);  out.write(stack,  0,  0);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
1281	[BUG]  [BUGGY]  this.deferredName  =  getDeprecatedName(DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeprecatedName(DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeprecatedName(DEFERRED_NAME);	  this.deferredName    =    getDeprecatedName();    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1282	[BUG]  [BUGGY]  this.deferredName  =  getDeprecatedName(deferred);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeprecatedName(deferred);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeprecatedName(deferred);	  this.deferredName    =    getDeprecatedName();    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1283	[BUG]  [BUGGY]  this.separator  =  lenient  ||  htmlSafe.equals(deferredName);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  lenient  ||  htmlSafe.equals(deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient  ||  htmlSafe.equals(deferredName);	  this.separator    =    lenient    ||    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1284	[BUG]  [BUGGY]  this.separator  =  lenient  ||  htmlSafe.equals(values);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  lenient  ||  htmlSafe.equals(values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient  ||  htmlSafe.equals(values);	  this.separator    =    lenient    ||    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1285	[BUG]  [BUGGY]  this.separator  =  separator  ||  htmlSafe;  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  separator  ||  htmlSafe;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  separator  ||  htmlSafe;	  this.separator    =    lenient    ||    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1286	[BUG]  [BUGGY]  this.separator  =  lenient  ||  htmlSafe.equals(values[0]);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  lenient  ||  htmlSafe.equals(values[0]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient  ||  htmlSafe.equals(values[0]);	  this.separator    =    lenient    ||    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1287	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  );  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	150	None	replace
1288	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]  }  );  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	150	None	replace
1289	[BUG]  [BUGGY]  out.write(separator  -  DEFERRED_NUMBER);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(separator  -  DEFERRED_NUMBER);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(separator  -  DEFERRED_NUMBER);	  out.write(stackSize    -    DEFERRED_NUMBER);    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1290	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1291	[BUG]  [BUGGY]  int  stackSize  =  stackSize  -  SHORT_SIZE;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stackSize  -  SHORT_SIZE;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackSize  -  SHORT_SIZE;	  int    stackSize    =    stackSize    -    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1292	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1293	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1294	[BUG]  [BUGGY]  &&(this.deferredName!=  null  ||  this.deferredName!=  null))  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&(this.deferredName!=  null  ||  this.deferredName!=  null))  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&(this.deferredName!=  null  ||  this.deferredName!=  null))  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1295	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1296	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	System.arraycopy(stack,  0,  stack,  0,  this.deferredName);	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1297	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1298	[BUG]  [BUGGY]  out.write(stackSize  -  this.lenientName);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.lenientName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.lenientName);	  out.write(stackSize    -    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
1299	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  HTML_SAFE_REPLACEMENT_CHARS,  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1300	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[5],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[5],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[5],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1301	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4],  stack[5],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4],  stack[5],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[4],  stack[5],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1302	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  this.serializeNulls);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  this.serializeNulls);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  this.serializeNulls);	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
1303	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  0,  stackSize,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1304	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	18	None	replace
1305	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	18	None	replace
1306	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  values.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(values,  0,  stack,  1,  stackSize);  out.write(stack,  0,  values.length);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
1307	[BUG]  [BUGGY]  int[]  stack  =  new  int[length];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[length];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[length];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
1308	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1309	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1310	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1311	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[3],  stack[4],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[3],  stack[4],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[3],  stack[4],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1312	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1313	[BUG]  [BUGGY]  out.write( "Lenient000 ");  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient000 ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient000 ");	  out.write(   "u000   ");    	non-compiled	[CE]  illegal  start  of  expression	220	None	replace
1314	[BUG]  [BUGGY]  out.write(this.separator  -  2);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.separator  -  2);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator  -  2);	  out.write(stackSize    -    2);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1315	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  0);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  0);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  0);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1316	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  0.5);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  0.5);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  0.5);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1317	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  lenient);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  lenient);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1318	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize  +  1);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1319	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  -1);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  -1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  -1);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1320	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1321	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackS  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackS  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackS	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  	54	None	replace
1322	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  }  [CE]  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  	54	None	replace
1323	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stack!=  null)  {  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize]  }  [CE]  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(stack!=  null)  {  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize]  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stack!=  null)  {  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize]  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  	54	None	replace
1324	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[st  [CE]  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[st  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[st	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  	54	None	replace
1325	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[s  [CE]  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[s  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[s	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  	54	None	replace
1326	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	135	None	replace
1327	[BUG]  [BUGGY]  out.write(':'  +  deferredName);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(':'  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(':'  +  deferredName);	  out.write(':');    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1328	[BUG]  [BUGGY]  out.write(':'  +  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(':'  +  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(':'  +  stackSize);	  out.write(':');    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1329	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  indent;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  indent;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  indent;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    lenient;    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
1330	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1331	[BUG]  [BUGGY]  out.println( "Lenient: ");  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.println( "Lenient: ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.println( "Lenient: ");	  out.defaultWrite(   "Lenient   ");    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1332	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  DEFERRED_NUMBER);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  DEFERRED_NUMBER);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  DEFERRED_NUMBER);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1333	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  DEFERRED_NAME);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1334	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  indent);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  indent);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1335	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  1);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize,  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize,  1);	  htmlSafe.serializeNull(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1336	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1337	[BUG]  [BUGGY]  if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1338	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1339	[BUG]  [BUGGY]  if(stackSize  ==  stack.length)throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  stack.length)throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  stack.length)throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	190	None	replace
1340	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	throw  new  IllegalArgumentException( " ");	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
1341	[BUG]  [BUGGY]  if(stackSize!=  stack.length)throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  stack.length)throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  stack.length)throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	190	None	replace
1342	[BUG]  [BUGGY]  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  new  IllegalArgumentException( " ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	new  IllegalArgumentException( " ");	  if(stackSize!=    stack.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
1343	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1344	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1345	[BUG]  [BUGGY]  if(htmlSafe!=  null  &&  lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null  &&  lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null  &&  lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
1346	[BUG]  [BUGGY]  if(htmlSafe!=  null  &&  lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null  &&  lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null  &&  lenient)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
1347	[BUG]  [BUGGY]  if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1348	[BUG]  [BUGGY]  if(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1349	[BUG]  [BUGGY]  if(stackSize!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1350	[BUG]  [BUGGY]  out.write( "   ");  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "   ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "   ");	  out.write(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1351	[BUG]  [BUGGY]  out.write(stackSize  -  DEFERRED_NAME,  deferredName);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  DEFERRED_NAME,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  DEFERRED_NAME,  deferredName);	  out.write(stackSize    -    DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
1352	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	177	None	replace
1353	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize  -  1);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1354	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize  +  1);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1355	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1356	[BUG]  [BUGGY]  this.separator  =  'n';  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  'n';  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  'n';	  this.separator    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
1357	[BUG]  [BUGGY]  this.separator  =  ' "';  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  ' "';  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  ' "';	  this.separator    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
1358	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  1,  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  1,  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  1,  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	18	None	replace
1359	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  0,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	18	None	replace
1360	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  arguments[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  arguments[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  arguments[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    values[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1361	[BUG]  [BUGGY]  if(stackSize  <  =  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  <  =  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  <  =  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
1362	[BUG]  [BUGGY]  htmlSafe.serializeNullValues(stackSize,  values);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNullValues(stackSize,  values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNullValues(stackSize,  values);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1363	[BUG]  [BUGGY]  htmlSafe.serialize(stackSize,  values);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stackSize,  values);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stackSize,  values);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1364	[BUG]  [BUGGY]  htmlSafe.serializeNullValues(stackSize);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNullValues(stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNullValues(stackSize);	  htmlSafe.serializeNulls(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1365	[BUG]  [BUGGY]  out.write('L'  +  deferredName);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('L'  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('L'  +  deferredName);	  out.write('L');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1366	[BUG]  [BUGGY]  out.append('L');  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.append('L');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.append('L');	  out.write('L');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1367	[BUG]  [BUGGY]  out.write(stack.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stack.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack.length);	  out.write(stack);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
1368	[BUG]  [BUGGY]  out.write(stackSize  -  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  stackSize);	  out.write(stack);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
1369	[BUG]  [BUGGY]  out.write( "Lenient[ "  +  deferredName  + "] ");  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient[ "  +  deferredName  + "] ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient[ "  +  deferredName  + "] ");	  out.write(   "Lenient[   ");    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1370	[BUG]  [BUGGY]  out.write(stackSize  +  1).replace('n',  'r');  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  1).replace('n',  'r');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  1).replace('n',  'r');	  out.write(stackSize    +    1);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
1371	[BUG]  [BUGGY]  this.separator  =  ++separator;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  ++separator;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  ++separator;	  this.separator    =    _separator;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1372	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  );  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	134	None	replace
1373	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	134	None	replace
1374	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	134	None	replace
1375	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.htmlSafe!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
1376	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.htmlSafe!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
1377	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.htmlSafe!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
1378	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(this.htmlSafe!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
1379	[BUG]  [BUGGY]  out.write(stackSize  -  1,  desferredName);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  desferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  desferredName);	  out.write(stackSize    -    1,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1380	[BUG]  [BUGGY]  out.write(stackSize  -  1,  stack.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  stack.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  stack.length);	  out.write(stackSize    -    1,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1381	[BUG]  [BUGGY]  out.write(stackSize  -  1,  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  DEFERRED_NAME);	  out.write(stackSize    -    1,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1382	[BUG]  [BUGGY]  out.write(stackSize  -  1,  values.length);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  1,  values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  values.length);	  out.write(stackSize    -    1,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1383	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1384	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1385	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stack  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stack	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1386	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stack  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stack	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stack    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1387	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[0],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[0],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[0],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1388	[BUG]  [BUGGY]  this.serializeNulls  =  generateNulls(stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  generateNulls(stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  generateNulls(stackSize);	  this.serializeNulls    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1389	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1390	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1391	[BUG]  [BUGGY]  if(htmlSafe!=  null  &&  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null  &&  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null  &&  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);	  if(htmlSafe!=    null)    {    htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    }    	non-compiled	[CE]  	209	None	replace
1392	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1393	[BUG]  [BUGGY]  if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1394	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  	146	None	replace
1395	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  stack[3],  stack[4],  stack[5]);  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  stack[3],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  stack[3],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  	31	None	replace
1396	[BUG]  [BUGGY]  if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1397	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1398	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  deferredName.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  deferredName.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  deferredName.length);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1399	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1400	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(values[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1401	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[3]);	  htmlSafe.serializeNulls(values[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1402	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1403	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  + "  lenient ";  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  + "  lenient ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  + "  lenient ";	  this.deferredName    =    getDeferredName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1404	[BUG]  [BUGGY]  out.write('n');  else  if(stackSize!=  lenient)  {  indent  =  stackSize;  }  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n');  else  if(stackSize!=  lenient)  {  indent  =  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n');  else  if(stackSize!=  lenient)  {  indent  =  stackSize;  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  	197	None	replace
1405	[BUG]  [BUGGY]  out.write('n');  if(lenient)  {  indent  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n');  if(lenient)  {  indent  =  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n');  if(lenient)  {  indent  =  stackSize;  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1406	[BUG]  [BUGGY]  out.write('n');  if(separator!=  null)  {  indent  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n');  if(separator!=  null)  {  indent  =  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n');  if(separator!=  null)  {  indent  =  stackSize;  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1407	[BUG]  [BUGGY]  out.write('n');  else  if(stackSize!=  0)  {  indent  =  0;  }  [CE]  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n');  else  if(stackSize!=  0)  {  indent  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n');  else  if(stackSize!=  0)  {  indent  =  0;  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  	197	None	replace
1408	[BUG]  [BUGGY]  out.write('n');  indent  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n');  indent  =  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n');  indent  =  stackSize;	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1409	[BUG]  [BUGGY]  out.write('n');  if(separator!=  null)  {  out.write('n');  }  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n');  if(separator!=  null)  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n');  if(separator!=  null)  {  out.write('n');  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    indent    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1410	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize  -  1);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize  -  1);	  int[]    stack    =    new    int[stackSize],    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	96	None	replace
1411	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize  +  1);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize  +  1);	  int[]    stack    =    new    int[stackSize],    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	96	None	replace
1412	[BUG]  [BUGGY]  this.serializeNulls  =  values!=  null?  values.length  :  0;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  values!=  null?  values.length  :  0;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  values!=  null?  values.length  :  0;	  this.serializeNulls    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1413	[BUG]  [BUGGY]  this.serializeNulls  =  values  ==  null?  values.length  :  0;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.serializeNulls  =  values  ==  null?  values.length  :  0;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  values  ==  null?  values.length  :  0;	  this.serializeNulls    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1414	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1415	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	128	None	replace
1416	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  2,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  2,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  2,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1417	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[5]);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1418	[BUG]  [BUGGY]  out.write(stackSize,  0,  stackLenient.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize,  0,  stackLenient.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize,  0,  stackLenient.length);	  out.write(stackSize,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
1419	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName);	  htmlSafe.serializeNulls(values[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
1420	[BUG]  [BUGGY]  out.write('n',  indent);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('n',  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n',  indent);	  out.write('n',    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1421	[BUG]  [BUGGY]  out.write(this.deferredName  -  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  -  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  DEFERRED_NAME);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1422	[BUG]  [BUGGY]  out.write(this.deferredName  -  deferred);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName  -  deferred);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  deferred);	  out.write(this.deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1423	[BUG]  [BUGGY]  out.write(stackSize  +  deferredName);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  deferredName);	  out.write(stackSize    +    separator);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1424	[BUG]  [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    int[size()    ];    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1425	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  +  1];  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  +  1];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  +  1];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    int[size()    ];    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1426	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  -  1];  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  -  1];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  -  1];  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    int[size()    ];    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1427	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  <identifier>  expected  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  <identifier>  expected	221	None	replace
1428	[BUG]  [BUGGY]  &&!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1429	[BUG]  [BUGGY]  &&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1430	[BUG]  [BUGGY]  &&  stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1431	[BUG]  [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1432	[BUG]  [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1433	[BUG]  [BUGGY]  &&!lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&!lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&!lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1434	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	63	None	replace
1435	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
1436	[BUG]  [BUGGY]  if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
1437	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
1438	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  out[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  out[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  out[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
1439	[BUG]  [BUGGY]  out.write( "Lenient ",  deferredName);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient ",  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient ",  deferredName);	  out.write(   "Lenientn   ");    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1440	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1441	[BUG]  [BUGGY]  if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1442	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  this.deferredName  =  stack.length;  }	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1443	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1444	[BUG]  [BUGGY]  if(values  ==  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(values  ==  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(values  ==  null)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  }	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1445	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize  -  1);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize  -  1);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize  -  1);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1446	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize  +  1);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize  +  1);  out.write(stack,  0,  size);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize  +  1);  out.write(stack,  0,  size);	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1447	[BUG]  [BUGGY]  out.write(stackSize  -  this.deferredName,  deferredName);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.deferredName,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.deferredName,  deferredName);	  out.write(stackSize    -    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1448	[BUG]  [BUGGY]  out.write(stackSize  -  this.deferredName,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.deferredName,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.deferredName,  0,  stackSize);	  out.write(stackSize    -    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1449	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  ;  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	131	None	replace
1450	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	131	None	replace
1451	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	131	None	replace
1452	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1453	[BUG]  [BUGGY]  if(this.lenient!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.lenient!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.lenient!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1454	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1455	[BUG]  [BUGGY]  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1456	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1457	[BUG]  [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1458	[BUG]  [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1459	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
1460	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
1461	[BUG]  [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [CE]  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  	54	None	replace
1462	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [CE]  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  	54	None	replace
1463	[BUG]  [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
1464	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  ;  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	137	None	replace
1465	[BUG]  [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  }  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	137	None	replace
1466	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	137	None	replace
1467	[BUG]  [BUGGY]  if(lenient)  {  safeSerialize(stackSize);  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  safeSerialize(stackSize);  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  safeSerialize(stackSize);  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
1468	[BUG]  [BUGGY]  if(!lenient)  {  safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
1469	[BUG]  [BUGGY]  if(!lenient)  {  safeSerialize(stackSize);  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  safeSerialize(stackSize);  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  safeSerialize(stackSize);  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
1470	[BUG]  [BUGGY]  if(lenient)  {  safeSerialize(stackSize);  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  safeSerialize(stackSize);  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  safeSerialize(stackSize);  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
1471	[BUG]  [BUGGY]  if(lenient)  {  safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
1472	[BUG]  [BUGGY]  if(!lenient)  {  safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  }  [CE]  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  }	  safeSerialize(stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	169	None	replace
1473	[BUG]  [BUGGY]  if(!lenient)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  String[]    stack    =    new    String[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1474	[BUG]  [BUGGY]  if(separator!=  null)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  String[]    stack    =    new    String[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1475	[BUG]  [BUGGY]  if(separator!=  null)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  String[]    stack    =    new    String[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1476	[BUG]  [BUGGY]  if(separator!=  null)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  else  {  out.write('n');  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  else  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  else  {  out.write('n');  }	  String[]    stack    =    new    String[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1477	[BUG]  [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize  +  1);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize  +  1);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize  +  1);  out.write(stack,  0,  stackSize);	  String[]    stack    =    new    String[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1478	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName.length);  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1479	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  deferredName.length);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  deferredName.length);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  deferredName.length);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1480	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[1],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[1],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[1],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	216	None	replace
1481	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	216	None	replace
1482	[BUG]  [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  value[i];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  value[i];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  value[i];  }	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
1483	[BUG]  [BUGGY]  this.lenient  =  lenient;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.lenient  =  lenient;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.lenient  =  lenient;	  if(stackSize!=    lenient)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
1484	[BUG]  [BUGGY]  out.write( "Lenients: "  +  deferredName);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenients: "  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenients: "  +  deferredName);	  out.write(   "Lenients:   ");    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1485	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  ;  [CE]  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	149	None	replace
1486	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	149	None	replace
1487	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	149	None	replace
1488	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    ;    	non-compiled	[CE]  	149	None	replace
1489	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  }	  int[]    stack    =    new    int[size];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    size);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
1490	[BUG]  [BUGGY]  this.separator  =  lenient  <  <  htmlSafe;  [CE]  >  expected  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  lenient  <  <  htmlSafe;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient  <  <  htmlSafe;	  this.separator    =    lenient    ||    htmlSafe;    	non-compiled	[CE]  >  expected	10	None	replace
1491	[BUG]  [BUGGY]  this.separator  =  lenient  ||  htmlSafe.equals(this.separator);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.separator  =  lenient  ||  htmlSafe.equals(this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient  ||  htmlSafe.equals(this.separator);	  this.separator    =    lenient    ||    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1492	[BUG]  [BUGGY]  out.write(stackSize  -  deferredName.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  deferredName.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  deferredName.length);	  out.write(stackSize    -    separator.length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1493	[BUG]  [BUGGY]  out.write(stackSize  -  separator.length,  deferredName);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  separator.length,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  separator.length,  deferredName);	  out.write(stackSize    -    separator.length);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1494	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3];  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	107	None	replace
1495	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	107	None	replace
1496	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
1497	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	176	None	replace
1498	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	176	None	replace
1499	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  	202	None	replace
1500	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
1501	[BUG]  [BUGGY]  out.write(':').append(values.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(':').append(values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(':').append(values.length);	  out.write(':');    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1502	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[4],  stack[3]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  	211	None	replace
1503	[BUG]  [BUGGY]  if(separator  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(separator!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1504	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	217	None	replace
1505	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
1506	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	217	None	replace
1507	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
1508	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
1509	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
1510	[BUG]  [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
1511	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1512	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  }	  if(separator!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1513	[BUG]  [BUGGY]  out.write('#').append(values.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('#').append(values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('#').append(values.length);	  out.write('#');    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
1514	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[s  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[s  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[s	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  	51	None	replace
1515	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1516	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1517	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  indent,  deferredName);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  indent,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  indent,  deferredName);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    indent);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1518	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  deserredName,  indent);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  deserredName,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  deserredName,  indent);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    indent);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1519	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[4],  stack[4],  stack[4]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  	161	None	replace
1520	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  	19	None	replace
1521	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  	19	None	replace
1522	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  lenient);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  lenient);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1523	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  1);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  1);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1524	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  DEFERRED_NAME);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1525	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  indent);  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  indent);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1526	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  DEFERRED_INDENT);  [CE]  illegal  start  of  expression  [FE]                                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize,  DEFERRED_INDENT);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize,  DEFERRED_INDENT);	  htmlSafe.serialize(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1527	[BUG]  [BUGGY]  if(this.serializeNulls)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.serializeNulls)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.serializeNulls)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1528	[BUG]  [BUGGY]  if(this.serializeNulls)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.serializeNulls)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.serializeNulls)  {  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1529	[BUG]  [BUGGY]  _serializeNulls(stackSize);  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  _serializeNulls(stackSize);  stackSize  =  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	_serializeNulls(stackSize);  stackSize  =  stackSize;	  htmlSafe.serializeNulls(stackSize);    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1530	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[1,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	218	None	replace
1531	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
1532	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	213	None	replace
1533	[BUG]  [BUGGY]  out.write('-'  +  deferredName);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('-'  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('-'  +  deferredName);	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
1534	[BUG]  [BUGGY]  out.write('-',  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('-',  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('-',  0,  stackSize);	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
1535	[BUG]  [BUGGY]  out.append('-');  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.append('-');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.append('-');	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
1536	[BUG]  [BUGGY]  out.write('-',  stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('-',  stackSize  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('-',  stackSize  -  1);	  out.write('-');    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
1537	[BUG]  [BUGGY]  out.write( "[Lenient] ").replace('n',  'r');  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[Lenient] ").replace('n',  'r');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] ").replace('n',  'r');	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1538	[BUG]  [BUGGY]  out.write( "[Lenient] ").replace(stackSize,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[Lenient] ").replace(stackSize,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] ").replace(stackSize,  stackSize);	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1539	[BUG]  [BUGGY]  out.write( "[Lenient] ").replace('0',  '0');  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[Lenient] ").replace('0',  '0');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] ").replace('0',  '0');	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1540	[BUG]  [BUGGY]  out.write( "[Lenient] ").replace(stack,  null);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "[Lenient] ").replace(stack,  null);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] ").replace(stack,  null);	  out.write(   "[Lenient]   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1541	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[1],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[1],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[1],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	199	None	replace
1542	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1,    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	199	None	replace
1543	[BUG]  [BUGGY]  this.deferredName  =  getDelegate().deferredName();  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDelegate().deferredName();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDelegate().deferredName();	  this.deferredName    =    getLenientName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1544	[BUG]  [BUGGY]  this.deferredName  =  deferred  +  getLenientName();  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  deferred  +  getLenientName();  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  deferred  +  getLenientName();	  this.deferredName    =    getLenientName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1545	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
1546	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
1547	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  }  else  {  out.write('n');  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  }  else  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  }  else  {  out.write('n');  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
1548	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[0],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[0],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[0],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1549	[BUG]  [BUGGY]  int  stackSize  =(stackSize  <  0)?  0  :  stackSize;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =(stackSize  <  0)?  0  :  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =(stackSize  <  0)?  0  :  stackSize;	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1550	[BUG]  [BUGGY]  int  stackSize  =(stackSize  >  0)?  stackSize  :  0;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =(stackSize  >  0)?  stackSize  :  0;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =(stackSize  >  0)?  stackSize  :  0;	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1551	[BUG]  [BUGGY]  int  stackSize  =(stackSize  <  =  0)?  0  :  stackSize;  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =(stackSize  <  =  0)?  0  :  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =(stackSize  <  =  0)?  0  :  stackSize;	  int    stackSize    =    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1552	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  deferred);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  deferred);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(DEFERRED_NAME,  deferred);	  this.deferredName    =    getDeferredName(DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1553	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(deferredName);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(deferredName);	  this.deferredName    =    getDeferredName(DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1554	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME,  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(DEFERRED_NAME,  DEFERRED_NAME);	  this.deferredName    =    getDeferredName(DEFERRED_NAME);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1555	[BUG]  [BUGGY]  int  stackSize  =  this.stackSize  -  stackSize;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  this.stackSize  -  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  this.stackSize  -  stackSize;	  int    stackSize    =    stackSize    -    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1556	[BUG]  [BUGGY]  int  stackSize  =  stack.length  -  stackSize;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stack.length  -  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stack.length  -  stackSize;	  int    stackSize    =    stackSize    -    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1557	[BUG]  [BUGGY]  int  stackSize  =  size  -  stackSize;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  size  -  stackSize;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  size  -  stackSize;	  int    stackSize    =    stackSize    -    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1558	[BUG]  [BUGGY]  out.write(this.deferredName,  0,  this.stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName,  0,  this.stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName,  0,  this.stackSize);	  out.write(this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
1559	[BUG]  [BUGGY]  out.write(this.deferredName,  lenient);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.deferredName,  lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName,  lenient);	  out.write(this.deferredName);    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
1560	[BUG]  [BUGGY]  if(stackSize!=  0)  {  int[]  stack  =  values.toArray(new  int[stackSize]);  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  int[]  stack  =  values.toArray(new  int[stackSize]);  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  int[]  stack  =  values.toArray(new  int[stackSize]);  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1561	[BUG]  [BUGGY]  if(stackSize!=  0)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  int  stackSize  =  stackSize;  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1562	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  0,  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1563	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackLenient;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackLenient;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackLenient;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1564	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  1;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    new    String(values.length);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1565	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  deferredName);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  deferredName);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  deferredName);  this.deferredName  =  stack[stackSize];  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1566	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.lenient!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.lenient!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    lenient)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
1567	[BUG]  [BUGGY]  if(stackSize  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1568	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize  -  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize  -  1);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1569	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3];  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3];    	non-compiled	[CE]  	65	None	replace
1570	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  	148	None	replace
1571	[BUG]  [BUGGY]  &&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1572	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  }  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  	148	None	replace
1573	[BUG]  [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1574	[BUG]  [BUGGY]  &&!lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&!lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&!lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[s	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1575	[BUG]  [BUGGY]  &&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&  this.serializeNulls)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize]    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1576	[BUG]  [BUGGY]  this.deferredName  =  getDeprecatedName()  + "  lenient ";  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeprecatedName()  + "  lenient ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeprecatedName()  + "  lenient ";	  this.deferredName    =    getDeprecatedName();    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1577	[BUG]  [BUGGY]  this.deferredName  =  getDeprecatedName()  + "- "  +  lenient;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeprecatedName()  + "- "  +  lenient;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeprecatedName()  + "- "  +  lenient;	  this.deferredName    =    getDeprecatedName();    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1578	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  DEFERRED_NUMBER);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  DEFERRED_NUMBER);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize,  DEFERRED_NUMBER);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1579	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  indent);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize,  indent);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1580	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  1);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize,  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize,  1);	  htmlSafe.serializeNulls(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1581	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1582	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[3],  stack[4]);  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[4],    stack[3],    stack[4]);    	non-compiled	[CE]  	76	None	replace
1583	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
1584	[BUG]  [BUGGY]  if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
1585	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
1586	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[stack.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[stack.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[stack.length];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
1587	[BUG]  [BUGGY]  out.write(this.stackSize  +  this.separator);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.stackSize  +  this.separator);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stackSize  +  this.separator);	  out.write(this.stackSize);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1588	[BUG]  [BUGGY]  out.write(this.stackSize  *  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(this.stackSize  *  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stackSize  *  stackSize);	  out.write(this.stackSize);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1589	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  <identifier>  expected  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  <identifier>  expected	201	None	replace
1590	[BUG]  [BUGGY]  out.write( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "UTF-8 ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "UTF-8 ");	  out.write(   "u000   ");    	non-compiled	[CE]  illegal  start  of  expression	220	None	replace
1591	[BUG]  [BUGGY]  safeSerialize(stackSize,  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stackSize,  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stackSize,  lenient)  {  throw  new  IllegalArgumentException( " ");  }	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	139	None	replace
1592	[BUG]  [BUGGY]  int  stackSize  =  safeSerialize(stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  safeSerialize(stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  safeSerialize(stackSize);	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
1593	[BUG]  [BUGGY]  int  stackSize  =  safeSerialize(stackSize)-  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  safeSerialize(stackSize)-  throw  new  IllegalArgumentException( " ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  safeSerialize(stackSize)-  throw  new  IllegalArgumentException( " ");	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
1594	[BUG]  [BUGGY]  safeSerialize(stackSize)>  lenient.length;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stackSize)>  lenient.length;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stackSize)>  lenient.length;	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	139	None	replace
1595	[BUG]  [BUGGY]  safeSerialize(stackSize)  <  =  0;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  safeSerialize(stackSize)  <  =  0;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stackSize)  <  =  0;	  safeSerialize(stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
1596	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1597	[BUG]  [BUGGY]  if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    out,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1598	[BUG]  [BUGGY]  &&!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&!lenient)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1599	[BUG]  [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1600	[BUG]  [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1601	[BUG]  [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(s  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  &&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(s  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	&&!lenient  &&  stack.length  >  0)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(s	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1602	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
1603	[BUG]  [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
1604	[BUG]  [BUGGY]  out.write(stackSize  /  this.lenient);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  /  this.lenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  /  this.lenient);	  out.write(stackSize    -    this.lenient);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1605	[BUG]  [BUGGY]  out.append('0');  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.append('0');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.append('0');	  out.write('0');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1606	[BUG]  [BUGGY]  out.write('0'  +  deferredName);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('0'  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('0'  +  deferredName);	  out.write('0');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1607	[BUG]  [BUGGY]  out.write('0').append(values.length);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('0').append(values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('0').append(values.length);	  out.write('0');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1608	[BUG]  [BUGGY]  out.write(stackSize  -  this.values.length  *  2);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  this.values.length  *  2);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.values.length  *  2);	  out.write(stackSize    -    this.values.length);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1609	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stackSize,  stackLenient);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stackSize,  stackLenient);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stackSize,  stackLenient);	  htmlSafe.serializeNulls(stackSize,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1610	[BUG]  [BUGGY]  if(!lenient)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(!lenient)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(!lenient)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1611	[BUG]  [BUGGY]  if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1612	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1613	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Integer[]    stack    =    new    Integer[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1614	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  this.deferredName);  this.deferredName  =  stack[stackSize];  }	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	222	None	replace
1615	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize]  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize]	  if(this.deferredName!=    null)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    this.deferredName);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  	222	None	replace
1616	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[0],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[0],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[0],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1617	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[5],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
1618	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[6],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[6],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[6],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[5],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
1619	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[5],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[5],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
1620	[BUG]  [BUGGY]  out.write(stackSize  -  DEFERRED_NUMBER,  deferredName);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  DEFERRED_NUMBER,  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  DEFERRED_NUMBER,  deferredName);	  out.write(stackSize    -    DEFERRED_NUMBER);    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1621	[BUG]  [BUGGY]  out.write('%',  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%',  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%',  0,  stackSize);	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1622	[BUG]  [BUGGY]  out.write('%'  +  deferredName);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('%'  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%'  +  deferredName);	  out.write('%');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1623	[BUG]  [BUGGY]  out.write('/'  +  deferredName);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('/'  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('/'  +  deferredName);	  out.write('/');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1624	[BUG]  [BUGGY]  out.write('/',  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('/',  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('/',  0,  stackSize);	  out.write('/');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1625	[BUG]  [BUGGY]  out.write('/').append(values.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('/').append(values.length);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('/').append(values.length);	  out.write('/');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1626	[BUG]  [BUGGY]  out.write(stackSize  -  deferredName,  indent);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  -  deferredName,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  deferredName,  indent);	  out.write(stackSize    -    deferredName);    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
1627	[BUG]  [BUGGY]  out.write(stackSize  *  HTML_SAFE_REPLACEMENT_CHARS);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  HTML_SAFE_REPLACEMENT_CHARS);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  HTML_SAFE_REPLACEMENT_CHARS);	  out.write(stackSize    *    separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
1628	[BUG]  [BUGGY]  out.write(stackSize  *  DEFERREDName);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  DEFERREDName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  DEFERREDName);	  out.write(stackSize    *    separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
1629	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1630	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  deferredName);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  deferredName);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1631	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  0.5);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  0.5);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  0.5);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1632	[BUG]  [BUGGY]  htmlSafe.serialize(stack[0],  stack[1],  stack[2]);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serialize(stack[0],  stack[1],  stack[2]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack[0],  stack[1],  stack[2]);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1633	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  DEFERRED_NAME);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack[0],  stack[1],  stack[2],  DEFERRED_NAME);	  htmlSafe.serializeNull(stack[0],    stack[1],    stack[2]);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1634	[BUG]  [BUGGY]  out.write(deferredName  -  separator,  indent);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  -  separator,  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  -  separator,  indent);	  out.write(deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1635	[BUG]  [BUGGY]  out.write(deferredName  -  this.indent);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  -  this.indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  -  this.indent);	  out.write(deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1636	[BUG]  [BUGGY]  out.write(deferredName  -  INDEX_NUMBER);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(deferredName  -  INDEX_NUMBER);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  -  INDEX_NUMBER);	  out.write(deferredName    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1637	[BUG]  [BUGGY]  out.write( "Lenient ",  indent);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "Lenient ",  indent);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient ",  indent);	  out.write(   "Lenient   ");    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1638	[BUG]  [BUGGY]  out.write( "nLenient ");  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write( "nLenient ");  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "nLenient ");	  out.write(   "Lenient   ");    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1639	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	136	None	replace
1640	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED_NAMES[stackSize];  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  DEFERRED_NAMES[stackSize];  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED_NAMES[stackSize];	  this.deferredName    =    deferred;    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1641	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED_NON_OBJECT;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  DEFERRED_NON_OBJECT;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED_NON_OBJECT;	  this.deferredName    =    deferred;    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1642	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
1643	[BUG]  [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack	  if(htmlSafe)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	162	None	replace
1644	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  deferredName,  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  deferredName,  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  deferredName,  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1645	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  invalidate,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  invalidate,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  invalidate,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    indent,    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1646	[BUG]  [BUGGY]  if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1647	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1648	[BUG]  [BUGGY]  if(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1649	[BUG]  [BUGGY]  out.write('u',  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write('u',  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('u',  0,  stackSize);	  out.write('n',    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1650	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
1651	[BUG]  [BUGGY]  out.write(stackSize  *  stackSize)  {  if(lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  stackSize)  {  if(lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  stackSize)  {  if(lenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	194	None	replace
1652	[BUG]  [BUGGY]  out.write(stackSize  *  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	194	None	replace
1653	[BUG]  [BUGGY]  out.write(stackSize  *  stackSize)  {  out.write('n');  }  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(stackSize  *  stackSize)  {  out.write('n');  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  stackSize)  {  out.write('n');  }	  if(stackSize!=    stackSize)    {    out.write('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	194	None	replace
1654	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	64	None	replace
1655	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	64	None	replace
1656	[BUG]  [BUGGY]  Stack  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Stack  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Stack  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1657	[BUG]  [BUGGY]  Stack[]  stack  =  new  Stack[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Stack[]  stack  =  new  Stack[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Stack[]  stack  =  new  Stack[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1658	[BUG]  [BUGGY]  Stack[]  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Stack[]  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize  +  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Stack[]  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize  +  1);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1659	[BUG]  [BUGGY]  Stack[]  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Stack[]  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Stack[]  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  Stack[]    stack    =    new    Stack[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1660	[BUG]  [BUGGY]  out.write(''+  deferredName);  [CE]  empty  character  literal  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(''+  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(''+  deferredName);	  out.write('    ');    	non-compiled	[CE]  empty  character  literal	171	None	replace
1661	[BUG]  [BUGGY]  out.append('  ');  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.append('  ');  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.append('  ');	  out.write('    ');    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1662	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  +  DEFERRED_NAME;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  +  DEFERRED_NAME;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  +  DEFERRED_NAME;	  this.deferredName    =    getDeferredName()    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1663	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  +  deferredName;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  +  deferredName;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  +  deferredName;	  this.deferredName    =    getDeferredName()    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1664	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  +  deferred;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  getDeferredName()  +  deferred;  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  +  deferred;	  this.deferredName    =    getDeferredName()    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1665	[BUG]  [BUGGY]  while(stackSize!=  stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize!=  stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize!=  stack.length)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1666	[BUG]  [BUGGY]  while(stackSize!=  indent)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize!=  indent)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize!=  indent)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1667	[BUG]  [BUGGY]  while(stackSize!=  values.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize!=  values.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize!=  values.length)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1668	[BUG]  [BUGGY]  while(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1669	[BUG]  [BUGGY]  while(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1670	[BUG]  [BUGGY]  while(stackSize!=  256)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  while(stackSize!=  256)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize!=  256)  {  throw  new  IllegalArgumentException( " ");  }	  while(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1671	[BUG]  [BUGGY]  Integer[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  Integer[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1672	[BUG]  [BUGGY]  Integer[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  Integer[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  1);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  1);	  Integer[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1673	[BUG]  [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1674	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[7]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[7]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[7]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1675	[BUG]  [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName  ==  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1676	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize  ==  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1677	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(separator!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(separator!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(separator!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1678	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackLenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(this.deferredName!=    null)    {    if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1679	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1680	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	204	None	replace
1681	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	204	None	replace
1682	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED_NAME  + "; ";  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  this.deferredName  =  DEFERRED_NAME  + "; ";  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED_NAME  + "; ";	  this.deferredName    =    DEFERRED_NAME;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1683	[BUG]  [BUGGY]  int  stackSize  =  stackSize;  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  int  stackSize  =  stackSize;  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackSize;  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
1684	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(stack.length());  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(stack.length());  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(stack.length());  }	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
1685	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[stackSize];  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[stackSize];  }	  for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
1686	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  );  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	150	None	replace
1687	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  },  deferredName);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  },  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  },  deferredName);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	150	None	replace
1688	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	150	None	replace
1689	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  },  deferredName);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  },  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  },  deferredName);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    }    );    	non-compiled	[CE]  	150	None	replace
1690	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[2,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	106	None	replace
1691	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  1,  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  1,  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  1,  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3,    0,    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	106	None	replace
1692	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4,  stack[4]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4,  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4,  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  	28	None	replace
1693	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[5],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[5],  stack[4]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[5],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1694	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4],  stack[5]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4],  stack[4],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[4],    stack[4],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1695	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
1696	[BUG]  [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
1697	[BUG]  [BUGGY]  if(separator!=  indent)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  indent)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  indent)  {  throw  new  IllegalArgumentException( " ");  }	  if(separator!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1698	[BUG]  [BUGGY]  out.write(','  +  deferredName);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  out.write(','  +  deferredName);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(','  +  deferredName);	  out.write(',');    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1699	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
1700	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3]);  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3]);	  StaxUtil.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	154	None	replace
1701	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackLenient.length;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackLenient.length;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackLenient.length;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1702	[BUG]  [BUGGY]  if(serializeNulls)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(serializeNulls)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[4]);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1703	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]    	non-compiled	[CE]  	133	None	replace
1704	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    lenient;    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
1705	[BUG]  [BUGGY]  if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;      [BUGGY]  if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]        [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  if(stackSize!=    0)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    lenient;    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
