bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  indent,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  this.separator  =  lenient;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.separator  =  lenient;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient;	  this.separator    =    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
7	[BUG]  [BUGGY]  this.separator  =  separator;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.separator  =  separator;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  separator;	  this.separator    =    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  this.separator  =!lenient;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.separator  =!lenient;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =!lenient;	  this.separator    =    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  this.separator  =  _separator;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.separator  =  _separator;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  _separator;	  this.separator    =    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
10	[BUG]  [BUGGY]  this.separator  =  lenient  ||  htmlSafe;  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.separator  =  lenient  ||  htmlSafe;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  lenient  ||  htmlSafe;	  this.separator    =    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
11	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
12	[BUG]  [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
13	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
14	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
15	[BUG]  [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
16	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  size);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
17	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	1	None	replace
19	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
23	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
26	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  out.write('L');  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write('L');  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('L');	  out.write('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  out.write('%');  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write('%');  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('%');	  out.write('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  out.write(',');  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(',');  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(',');	  out.write('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  out.write( "Lenient ");  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write( "Lenient ");  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient ");	  out.write('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  out.write('/');  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write('/');  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('/');	  out.write('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[6]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  1);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  1);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]  +  1);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  this.deferredName  =  DEFERRED_NAME;  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.deferredName  =  DEFERRED_NAME;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  DEFERRED_NAME;	  this.deferredName    =    getDeferredName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  +  separator;  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.deferredName  =  getDeferredName()  +  separator;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  +  separator;	  this.deferredName    =    getDeferredName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  +  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.deferredName  =  getDeferredName()  +  1;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  +  1;	  this.deferredName    =    getDeferredName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.deferredName  =  getDeferredName(DEFERRED_NAME);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(DEFERRED_NAME);	  this.deferredName    =    getDeferredName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  this.deferredName  =  getLenientName();  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.deferredName  =  getLenientName();  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getLenientName();	  this.deferredName    =    getDeferredName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName()  + "n ";  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.deferredName  =  getDeferredName()  + "n ";  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName()  + "n ";	  this.deferredName    =    getDeferredName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
50	[BUG]  [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
51	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
52	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
53	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stack  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stack  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stack	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  	21	None	replace
54	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  	21	None	replace
55	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
56	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  null;  }	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
57	[BUG]  [BUGGY]  int  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int  stackSize  =  stackSize;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackSize;	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
58	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  0;  }	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
59	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  int[size()  ];  }	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
60	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values.length);  }	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
61	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  new  String(values[i]);  }	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
62	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
64	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	5	None	replace
65	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	5	None	replace
66	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	5	None	replace
67	[BUG]  [BUGGY]  out.write(this.separator);  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(this.separator);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.separator);	  out.write(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
68	[BUG]  [BUGGY]  out.write(stackSize  +  separator);  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  +  separator);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  separator);	  out.write(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack,  0,  stackSize);	  out.write(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
70	[BUG]  [BUGGY]  out.write(this.stackSize);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(this.stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.stackSize);	  out.write(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
71	[BUG]  [BUGGY]  out.write(stack);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stack);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stack);	  out.write(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
72	[BUG]  [BUGGY]  out.write(stackSize,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize,  0,  stackSize);	  out.write(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
73	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
75	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
76	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
77	[BUG]  [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(values[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
78	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  values[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  out.write(stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  -  1);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
80	[BUG]  [BUGGY]  out.write(stackSize  -  separator.length);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  -  separator.length);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  separator.length);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  out.write(stackSize  -  this.lenient);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  -  this.lenient);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.lenient);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  out.write(stackSize  -  this.deferredName);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  -  this.deferredName);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.deferredName);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
83	[BUG]  [BUGGY]  out.write(stackSize  -  1,  separator);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  -  1,  separator);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  1,  separator);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
84	[BUG]  [BUGGY]  out.write(stackSize  -  this.values.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  -  this.values.length);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  this.values.length);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
85	[BUG]  [BUGGY]  out.write(stackSize  *  separator);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  *  separator);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  *  separator);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
87	[BUG]  [BUGGY]  if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
88	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
89	[BUG]  [BUGGY]  (stackSize  >>  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  (stackSize  >>  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	(stackSize  >>  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
90	[BUG]  [BUGGY]  (stackSize  >=  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  (stackSize  >=  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	(stackSize  >=  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
91	[BUG]  [BUGGY]  int  stackSize  =  stackSize  -  stackSize;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int  stackSize  =  stackSize  -  stackSize;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int  stackSize  =  stackSize  -  stackSize;	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
92	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
93	[BUG]  [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
94	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
95	[BUG]  [BUGGY]  Stack[]  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  Stack[]  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Stack[]  stack  =  new  Stack[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
96	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize],  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  	17	None	replace
97	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
98	[BUG]  [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
99	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  out.write(stack,  0,  size);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
100	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  size);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
101	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
102	[BUG]  [BUGGY]  out.write('n',  stackSize);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write('n',  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n',  stackSize);	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
103	[BUG]  [BUGGY]  out.write('n',  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write('n',  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('n',  0,  stackSize);	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
104	[BUG]  [BUGGY]  out.defaultWrite( "Lenient ");  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.defaultWrite( "Lenient ");  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.defaultWrite( "Lenient ");	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
105	[BUG]  [BUGGY]  out.write('0');  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write('0');  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('0');	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
106	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3,  0,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	2	None	replace
107	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [CE]  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3];	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	2	None	replace
108	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
109	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
110	[BUG]  [BUGGY]  this.serializeNulls  =  values.length;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.serializeNulls  =  values.length;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  values.length;	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
111	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3]);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
112	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stackSize);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
113	[BUG]  [BUGGY]  out.write( "Lenient: ");  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write( "Lenient: ");  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient: ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
114	[BUG]  [BUGGY]  out.write( "Lenientn ");  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write( "Lenientn ");  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenientn ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
115	[BUG]  [BUGGY]  out.write( "Lenients: ");  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write( "Lenients: ");  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenients: ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
116	[BUG]  [BUGGY]  out.write( "null ");  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write( "null ");  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "null ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
117	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack,  0,  stackSize);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
118	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stackSize,  stackSize);  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stackSize,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stackSize,  stackSize);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
119	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNull(stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack,  0,  stackSize);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
120	[BUG]  [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2]);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNull(stack[0],  stack[1],  stack[2]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNull(stack[0],  stack[1],  stack[2]);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
121	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stackSize);  stackSize  =  stackSize;	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
122	[BUG]  [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serialize(stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serialize(stack,  0,  stackSize);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
123	[BUG]  [BUGGY]  out.write( "Lenient[ ");  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write( "Lenient[ ");  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "Lenient[ ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
124	[BUG]  [BUGGY]  out.write( "[Lenient] ");  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write( "[Lenient] ");  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "[Lenient] ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
125	[BUG]  [BUGGY]  out.write(this.deferredName  -  separator);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(this.deferredName  -  separator);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName  -  separator);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
126	[BUG]  [BUGGY]  out.write(deferredName  -  separator);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(deferredName  -  separator);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(deferredName  -  separator);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
127	[BUG]  [BUGGY]  out.write(stackSize  -  2);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  -  2);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  2);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
128	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
129	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	20	None	replace
130	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
131	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	2	None	replace
132	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
133	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	2	None	replace
134	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	2	None	replace
135	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	5	None	replace
136	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	5	None	replace
137	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	5	None	replace
138	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
139	[BUG]  [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	18	None	replace
140	[BUG]  [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
141	[BUG]  [BUGGY]  this.serializeNulls  =  stackSize;  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.serializeNulls  =  stackSize;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.serializeNulls  =  stackSize;	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
142	[BUG]  [BUGGY]  if(stackSize!=  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
143	[BUG]  [BUGGY]  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(serializeNulls)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
144	[BUG]  [BUGGY]  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
145	[BUG]  [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
146	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
147	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
148	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize]	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  	21	None	replace
149	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [CE]  [FE]        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  ;	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	1	None	replace
150	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [CE]  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]  }  );	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	1	None	replace
151	[BUG]  [BUGGY]  this.deferredName  =  getDeferredName(deferred);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.deferredName  =  getDeferredName(deferred);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeferredName(deferred);	  this.deferredName    =    getDeferredName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
152	[BUG]  [BUGGY]  this.deferredName  =  getDeprecatedName();  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.deferredName  =  getDeprecatedName();  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  getDeprecatedName();	  this.deferredName    =    getDeferredName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
153	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[5]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[5]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[5]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
154	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
155	[BUG]  [BUGGY]  out.write(this.values.length);  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(this.values.length);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.values.length);	  out.write(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
156	[BUG]  [BUGGY]  out.write(this.lenient);  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(this.lenient);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.lenient);	  out.write(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
157	[BUG]  [BUGGY]  out.write(this.deferredName);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(this.deferredName);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(this.deferredName);	  out.write(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
158	[BUG]  [BUGGY]  out.write(stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  +  1);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  +  1);	  out.write(stackSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
159	[BUG]  [BUGGY]  this.separator  =  deferredName;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.separator  =  deferredName;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  deferredName;	  this.separator    =    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
160	[BUG]  [BUGGY]  this.separator  =  STRICT_LEN;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.separator  =  STRICT_LEN;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  =  STRICT_LEN;	  this.separator    =    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
161	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[4],  stack[4]);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[4],  stack[4]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[4],  stack[3],  stack[4],  stack[4],  stack[4]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
162	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
163	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [CE]  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  	16	None	replace
164	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  out,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
165	[BUG]  [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
166	[BUG]  [BUGGY]  if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.htmlSafe!=  null)  {  if(stackSize!=  stackSize)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
167	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack.length;  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
168	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(separator!=  null)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
169	[BUG]  [BUGGY]  safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	safeSerialize(stackSize)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  	22	None	replace
170	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  indent);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  indent);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  indent);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
171	[BUG]  [BUGGY]  out.write('  ');  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write('  ');  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('  ');	  out.write('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
172	[BUG]  [BUGGY]  out.write(':');  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(':');  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(':');	  out.write('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
173	[BUG]  [BUGGY]  out.write('-');  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write('-');  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('-');	  out.write('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
174	[BUG]  [BUGGY]  out.write('#');  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write('#');  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write('#');	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
175	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
176	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
177	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	3	None	replace
178	[BUG]  [BUGGY]  this.deferredName  =  deferred;  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.deferredName  =  deferred;  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.deferredName  =  deferred;	  this.deferredName    =    getDeferredName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
179	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
180	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
181	[BUG]  [BUGGY]  out.write(stackSize  -  indent);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  -  indent);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  indent);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
182	[BUG]  [BUGGY]  out.write(stackSize  -  deferredName);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  -  deferredName);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  deferredName);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
183	[BUG]  [BUGGY]  out.write(stackSize  -  DEFERRED_NAME);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  -  DEFERRED_NAME);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  DEFERRED_NAME);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
184	[BUG]  [BUGGY]  out.write(stackSize  -  DEFERRED_NUMBER);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write(stackSize  -  DEFERRED_NUMBER);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write(stackSize  -  DEFERRED_NUMBER);	  out.write(stackSize    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
186	[BUG]  [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  0)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  lenient;  }	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
187	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  lenient)  {  for(int  i  =  stackSize;  i  <  stackSize;  ++i)  {  stack[i]  =  values[i];  }	  if(stackSize!=    stackSize)    {    for(int    i    =    stackSize;    i    <    stackSize;    ++i)    {    stack[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
188	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
189	[BUG]  [BUGGY]  if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
190	[BUG]  [BUGGY]  if(stackSize!=  stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  stack.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  stack.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
191	[BUG]  [BUGGY]  if(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  stackLenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
192	[BUG]  [BUGGY]  while(stackSize!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  while(stackSize!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	while(stackSize!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize!=    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
193	[BUG]  [BUGGY]  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  stack.length)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
194	[BUG]  [BUGGY]  if(stackSize!=  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
195	[BUG]  [BUGGY]  if(stackSize  ==  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize  ==  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize  ==  stackSize)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
196	[BUG]  [BUGGY]  if(stackSize!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
197	[BUG]  [BUGGY]  if(stackSize!=  stackSize)  {  out.write('n');  }  else  {  indent  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  stackSize)  {  out.write('n');  }  else  {  indent  =  stackSize;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  stackSize)  {  out.write('n');  }  else  {  indent  =  stackSize;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
198	[BUG]  [BUGGY]  if(stackSize!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(stackSize!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(stackSize!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
199	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	5	None	replace
200	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
201	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  out.write(stack,  0,  stackSize);  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    1,    stackSize);    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
202	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
203	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	1	None	replace
204	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
205	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
206	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[5],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
207	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName);  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  deferredName);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
208	[BUG]  [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
209	[BUG]  [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(htmlSafe!=  null)  {  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3]);  }	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
210	[BUG]  [BUGGY]  this.separator  = " ";  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  this.separator  = " ";  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	this.separator  = " ";	  this.separator    =    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
211	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[3]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[4],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
212	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[5],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
213	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
214	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
215	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack.length;  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack.length;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
216	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1,  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	2	None	replace
217	[BUG]  [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	StaxUtil.serializeNulls(stack[0],  stack[1],  stack[2],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
218	[BUG]  [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	htmlSafe.serializeNulls(stack[0],  stack[1],  stack[2],  stack[1,  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3],  stack[3]);	  htmlSafe.serializeNulls(stack[0],    stack[1],    stack[2],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3],    stack[3]);    	non-compiled	[CE]  	2	None	replace
219	[BUG]  [BUGGY]  out.write( "lenient ");  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write( "lenient ");  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "lenient ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
220	[BUG]  [BUGGY]  out.write( "u000 ");  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  out.write( "u000 ");  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	out.write( "u000 ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
221	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  not  a  statement	21	None	replace
222	[BUG]  [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	if(this.deferredName!=  null)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  this.deferredName);  this.deferredName  =  stack[stackSize];  }	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
223	[BUG]  [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite    [CONTEXT]    public  final  void  setLenient(boolean  lenient)  {  this.lenient  =  lenient;    [BUGGY]  Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];  [BUGGY]      [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	236	236	1	replace	Integer[]  stack  =  new  Integer[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  this.deferredName  =  stack[stackSize];	  if(stackSize!=    stackSize)    {    int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    this.deferredName    =    stack[stackSize];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
