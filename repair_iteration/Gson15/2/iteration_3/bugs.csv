bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  4;  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  4;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  4;	  this.lenient    =    lenient    ||    values.length    <    4;    	non-compiled	[CE]  not  a  statement	6	None	replace
2	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  >  4;  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  >  4;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  >  4;	  this.lenient    =    lenient    ||    values.length    <    4;    	non-compiled	[CE]  not  a  statement	6	None	replace
3	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length  <  4;  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length  <  4;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length  <  4;	  this.lenient    =    lenient    ||    values.length    <    4;    	non-compiled	[CE]  not  a  statement	6	None	replace
4	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  <  3;  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  <  3;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  <  3;	  this.lenient    =    lenient    ||    values.length    <    4;    	non-compiled	[CE]  not  a  statement	6	None	replace
5	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0],  stackSize  +  stackSize]  :  values[0];  [CE]  :  expected  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0],  stackSize  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0],  stackSize  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  :  expected	7	None	replace
6	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  3]  :  values[0];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  3]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  3]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	7	None	replace
7	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  htmlSafe.equals(deferredName);  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  htmlSafe.equals(deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  htmlSafe.equals(deferredName);	  this.lenient    =    lenient    ||    htmlSafe.equals(deferredName);    	non-compiled	[CE]  not  a  statement	35	None	replace
8	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values[deferredName]);  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values[deferredName]);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values[deferredName]);	  this.lenient    =    lenient    ||    htmlSafe.equals(deferredName);    	non-compiled	[CE]  not  a  statement	35	None	replace
9	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  serializeNulls.equals(deferredName);  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  serializeNulls.equals(deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  serializeNulls.equals(deferredName);	  this.lenient    =    lenient    ||    htmlSafe.equals(deferredName);    	non-compiled	[CE]  not  a  statement	35	None	replace
10	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  separator.equals(deferredName);  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  separator.equals(deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  separator.equals(deferredName);	  this.lenient    =    lenient    ||    htmlSafe.equals(deferredName);    	non-compiled	[CE]  not  a  statement	35	None	replace
11	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  deferredName.equals(htmlSafe);  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  deferredName.equals(htmlSafe);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  deferredName.equals(htmlSafe);	  this.lenient    =    lenient    ||    htmlSafe.equals(deferredName);    	non-compiled	[CE]  not  a  statement	35	None	replace
12	[BUG]  [BUGGY]  htmlSafe.setLenient(false);  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(false);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(false);	  htmlSafe.setLenient(true);    	non-compiled	[CE]  not  a  statement	101	None	replace
13	[BUG]  [BUGGY]  htmlSafe.setLenient(true,  lenient);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(true,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(true,  lenient);	  htmlSafe.setLenient(true);    	non-compiled	[CE]  not  a  statement	101	None	replace
14	[BUG]  [BUGGY]  htmlSafe.setLenient(true,  false);  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(true,  false);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(true,  false);	  htmlSafe.setLenient(true);    	non-compiled	[CE]  not  a  statement	101	None	replace
15	[BUG]  [BUGGY]  htmlSafe.setLenient(true,  true);  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(true,  true);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(true,  true);	  htmlSafe.setLenient(true);    	non-compiled	[CE]  not  a  statement	101	None	replace
16	[BUG]  [BUGGY]  htmlSafe.setLenient(true,  null);  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(true,  null);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(true,  null);	  htmlSafe.setLenient(true);    	non-compiled	[CE]  not  a  statement	101	None	replace
17	[BUG]  [BUGGY]  htmlSafe.setLenient(false,  lenient);  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(false,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(false,  lenient);	  htmlSafe.setLenient(true);    	non-compiled	[CE]  not  a  statement	101	None	replace
18	[BUG]  [BUGGY]  this.lenient  =  lenient  |  REPLACEMENT_CHARS;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  |  REPLACEMENT_CHARS;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  |  REPLACEMENT_CHARS;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
19	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  &  REPLACEMENT_CHARS;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  &  REPLACEMENT_CHARS;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  &  REPLACEMENT_CHARS;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
20	[BUG]  [BUGGY]  this.lenient  =!lenient  &&  TYPE_LITERAL  |  REPLACEMENT_CHARS;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!lenient  &&  TYPE_LITERAL  |  REPLACEMENT_CHARS;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!lenient  &&  TYPE_LITERAL  |  REPLACEMENT_CHARS;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
21	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  +  1;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  +  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  +  1;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
22	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  |  DEFERREDName;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  |  DEFERREDName;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  |  DEFERREDName;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
23	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  |  DEFERRED_NAME;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  |  DEFERRED_NAME;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  |  DEFERRED_NAME;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
24	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize);  }  [CE]  <identifier>  expected  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize);  }	  int[]    stack    =    getStackSize();    setLenient(stack,    0,    stackSize);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
25	[BUG]  [BUGGY]  String[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize);  [CE]  <identifier>  expected  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize);	  int[]    stack    =    getStackSize();    setLenient(stack,    0,    stackSize);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
26	[BUG]  [BUGGY]  setLenient(stack,  0,  stackSize);  [CE]  <identifier>  expected  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  setLenient(stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	setLenient(stack,  0,  stackSize);	  int[]    stack    =    getStackSize();    setLenient(stack,    0,    stackSize);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
27	[BUG]  [BUGGY]  Integer  stackSize  =  getStackSize();  setLenient(stackSize,  0,  stackSize);  [CE]  <identifier>  expected  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  Integer  stackSize  =  getStackSize();  setLenient(stackSize,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	Integer  stackSize  =  getStackSize();  setLenient(stackSize,  0,  stackSize);	  int[]    stack    =    getStackSize();    setLenient(stack,    0,    stackSize);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
28	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize  -  1);  [CE]  <identifier>  expected  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize  -  1);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize  -  1);	  int[]    stack    =    getStackSize();    setLenient(stack,    0,    stackSize);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
29	[BUG]  [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName);  [CE]  <identifier>  expected  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)this.values.get(0);  setLenient(deferredName);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
30	[BUG]  [BUGGY]  int  deferredName  =(int)values.get(0);  setLenient(deferredName);  [CE]  <identifier>  expected  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  deferredName  =(int)values.get(0);  setLenient(deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  deferredName  =(int)values.get(0);  setLenient(deferredName);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
31	[BUG]  [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  lenient);  [CE]  <identifier>  expected  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)values.get(0);  setLenient(deferredName,  lenient);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
32	[BUG]  [BUGGY]  setLenient(values.get(0));  [CE]  <identifier>  expected  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  setLenient(values.get(0));  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	setLenient(values.get(0));	  String    deferredName    =(String)values.get(0);    setLenient(deferredName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
33	[BUG]  [BUGGY]  int  separator  =(int)values.get(0);  setLenient(deferredName);  [CE]  <identifier>  expected  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  separator  =(int)values.get(0);  setLenient(deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  separator  =(int)values.get(0);  setLenient(deferredName);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
34	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0  +  stackSize]  :  values[1];  [CE]  <identifier>  expected  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0  +  stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0  +  stackSize]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[1];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
35	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[1];  [CE]  <identifier>  expected  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[1];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
36	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  stackSize]  :  values[1];  [CE]  <identifier>  expected  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  stackSize]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[1];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
37	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  stackSize]  :  values[1];  [CE]  :  expected  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  stackSize]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[1];    	non-compiled	[CE]  :  expected	81	None	replace
38	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[2];  [CE]  <identifier>  expected  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[2];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[2];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[1];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
39	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[stackSize  +  1];  [CE]  <identifier>  expected  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    1];    	non-compiled	[CE]  <identifier>  expected	70	None	replace
40	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize]  :  values[stackSize  +  1];  [CE]  <identifier>  expected  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize]  :  values[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    1];    	non-compiled	[CE]  <identifier>  expected	70	None	replace
41	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  1];  [CE]  <identifier>  expected  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    1];    	non-compiled	[CE]  <identifier>  expected	70	None	replace
42	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize;  [CE]  <identifier>  expected  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize;	  this.lenient    =    lenient    ||    stackSize;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
43	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  =  Integer.MAX_VALUE;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  =  Integer.MAX_VALUE;	  this.lenient    =    lenient    ||    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
44	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  +  1;  [CE]  <identifier>  expected  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  +  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  +  1;	  this.lenient    =    lenient    ||    stackSize;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
45	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  =  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  =  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  =  1;	  this.lenient    =    lenient    ||    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
46	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  =  Integer.MIN_VALUE;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  =  Integer.MIN_VALUE;	  this.lenient    =    lenient    ||    stackSize;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
47	[BUG]  [BUGGY]  if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.lenient    =!htmlSafe;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
48	[BUG]  [BUGGY]  if(!lenient)  {  this.lenient  =!htmlSafe;  }  [CE]  <identifier>  expected  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  this.lenient  =!htmlSafe;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  this.lenient  =!htmlSafe;  }	  this.lenient    =!htmlSafe;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
49	[BUG]  [BUGGY]  if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [CE]  <identifier>  expected  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }	  this.lenient    =!htmlSafe;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
50	[BUG]  [BUGGY]  if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  out.write(stackSize);  }  [CE]  <identifier>  expected  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  out.write(stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  out.write(stackSize);  }	  this.lenient    =!htmlSafe;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
51	[BUG]  [BUGGY]  if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  setLenient(true);  }  [CE]  <identifier>  expected  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  setLenient(true);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  this.lenient  =!htmlSafe;  }  else  {  setLenient(true);  }	  this.lenient    =!htmlSafe;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
52	[BUG]  [BUGGY]  this.lenient  =  lenient  +  4;  [CE]  <identifier>  expected  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  4;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  4;	  this.lenient    =    lenient    +    3;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
53	[BUG]  [BUGGY]  this.lenient  =  lenient  +  6;  [CE]  <identifier>  expected  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  6;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  6;	  this.lenient    =    lenient    +    3;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
54	[BUG]  [BUGGY]  _serializeNulls(stack,  separator,  lenient);  [CE]  <identifier>  expected  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stack,  separator,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stack,  separator,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
55	[BUG]  [BUGGY]  _serializeNulls(stackSize,  separator,  lenient);  [CE]  <identifier>  expected  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  separator,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  separator,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
56	[BUG]  [BUGGY]  _serializeNulls(stackSize,  stackSize,  values,  lenient);  [CE]  <identifier>  expected  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  stackSize,  values,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  stackSize,  values,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
57	[BUG]  [BUGGY]  _serializeNulls(stackSize,  0,  stackSize);  [CE]  <identifier>  expected  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  0,  stackSize);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
58	[BUG]  [BUGGY]  _serializeNull(stack,  separator,  lenient);  [CE]  <identifier>  expected  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNull(stack,  separator,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNull(stack,  separator,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
59	[BUG]  [BUGGY]  _serializeNulls(stackSize,  stackSize,  deferredName);  [CE]  <identifier>  expected  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  stackSize,  deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  stackSize,  deferredName);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
60	[BUG]  [BUGGY]  _serializeNulls(stackSize,  stackStackSize,  values,  lenient);  [CE]  <identifier>  expected  [FE]                                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  stackStackSize,  values,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  stackStackSize,  values,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
61	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[0];  [CE]  <identifier>  expected  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0];    	non-compiled	[CE]  <identifier>  expected	57	None	replace
62	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[0];  [CE]  <identifier>  expected  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0];    	non-compiled	[CE]  <identifier>  expected	57	None	replace
63	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[0];  [CE]  <identifier>  expected  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0];    	non-compiled	[CE]  <identifier>  expected	57	None	replace
64	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[stackSize]  :  values[stackSize];  [CE]  <identifier>  expected  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  indent[stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize];    	non-compiled	[CE]  <identifier>  expected	56	None	replace
65	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize]  :  values[stackSize];  [CE]  <identifier>  expected  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize];    	non-compiled	[CE]  <identifier>  expected	56	None	replace
66	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  items[stackSize]  :  values[stackSize];  [CE]  <identifier>  expected  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  items[stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  items[stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize];    	non-compiled	[CE]  <identifier>  expected	56	None	replace
67	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  htmlSafe.equals(values[0]);  [CE]  <identifier>  expected  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  htmlSafe.equals(values[0]);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  htmlSafe.equals(values[0]);	  this.lenient    =    lenient    ||    htmlSafe.equals(values[0]);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
68	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values[1]);  [CE]  <identifier>  expected  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values[1]);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values[1]);	  this.lenient    =    lenient    ||    htmlSafe.equals(values[0]);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
69	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values[0].equals(htmlSafe);  [CE]  <identifier>  expected  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values[0].equals(htmlSafe);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values[0].equals(htmlSafe);	  this.lenient    =    lenient    ||    htmlSafe.equals(values[0]);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
70	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  values[0]);  [CE]  <identifier>  expected  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  values[0]);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values,  values[0]);	  this.lenient    =    lenient    ||    htmlSafe.equals(values[0]);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
71	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values[0],  values[1]);  [CE]  <identifier>  expected  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values[0],  values[1]);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values[0],  values[1]);	  this.lenient    =    lenient    ||    htmlSafe.equals(values[0]);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
72	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equalsIgnoreCase(values[0]);  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equalsIgnoreCase(values[0]);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equalsIgnoreCase(values[0]);	  this.lenient    =    lenient    ||    htmlSafe.equals(values[0]);    	non-compiled	[CE]  not  a  statement	106	None	replace
73	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  1]  :  values[stackSize];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  1]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  1]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    1]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	25	None	replace
74	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  ==  1;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  ==  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  ==  1;	  this.lenient    =    lenient    &&    values.length    ==    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
75	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length  >  1;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length  >  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length  >  1;	  this.lenient    =    lenient    &&    values.length    ==    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
76	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize!=  1;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize!=  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize!=  1;	  this.lenient    =    lenient    &&    values.length    ==    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
77	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length  ==  2;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length  ==  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length  ==  2;	  this.lenient    =    lenient    &&    values.length    ==    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
78	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  >=  1;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  >=  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  >=  1;	  this.lenient    =    lenient    &&    values.length    ==    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
79	[BUG]  [BUGGY]  this.lenient  =  lenient  *  1L;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  *  1L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  *  1L;	  this.lenient    =    lenient    +    1L;    	non-compiled	[CE]  not  a  statement	46	None	replace
80	[BUG]  [BUGGY]  this.lenient  =  lenient  +  1l;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  1l;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  1l;	  this.lenient    =    lenient    +    1L;    	non-compiled	[CE]  not  a  statement	46	None	replace
81	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  htmlSafe.separator;  [CE]  not  a  statement  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  htmlSafe.separator;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  htmlSafe.separator;	  this.lenient    =    lenient    ||    htmlSafe.separator;    	non-compiled	[CE]  not  a  statement	105	None	replace
82	[BUG]  [BUGGY]  this.lenient  =  htmlSafe.lenient  ||  lenient;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  htmlSafe.lenient  ||  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  htmlSafe.lenient  ||  lenient;	  this.lenient    =    lenient    ||    htmlSafe.separator;    	non-compiled	[CE]  not  a  statement	105	None	replace
83	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.deferredName;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.deferredName;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.deferredName;	  this.lenient    =    lenient    ||    htmlSafe.separator;    	non-compiled	[CE]  not  a  statement	105	None	replace
84	[BUG]  [BUGGY]  this.lenient  =  htmlSafe.separator  ||  lenient;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  htmlSafe.separator  ||  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  htmlSafe.separator  ||  lenient;	  this.lenient    =    lenient    ||    htmlSafe.separator;    	non-compiled	[CE]  not  a  statement	105	None	replace
85	[BUG]  [BUGGY]  this.lenient  =  lenient  ==  false?  values[0]  :  values[1];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ==  false?  values[0]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ==  false?  values[0]  :  values[1];	  this.lenient    =    lenient    ==    null?    values[0]    :    values[1];    	non-compiled	[CE]  not  a  statement	62	None	replace
86	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  TYPE_LITERAL;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  TYPE_LITERAL;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  TYPE_LITERAL;	  this.lenient    =    lenient    ||    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	68	None	replace
87	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  TYPE_LITERAL  +  1;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  TYPE_LITERAL  +  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  TYPE_LITERAL  +  1;	  this.lenient    =    lenient    ||    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	68	None	replace
88	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  ||  lenient;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  ||  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  ||  lenient;	  this.lenient    =    lenient    ||    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	68	None	replace
89	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  TYPE_LITERAL  *  2;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  TYPE_LITERAL  *  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  TYPE_LITERAL  *  2;	  this.lenient    =    lenient    ||    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	68	None	replace
90	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  +  DEFERREDName;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  +  DEFERREDName;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  +  DEFERREDName;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  not  a  statement	66	None	replace
91	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  +  indent;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  +  indent;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  +  indent;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  not  a  statement	66	None	replace
92	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  +  deferredName;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  +  deferredName;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  +  deferredName;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  not  a  statement	66	None	replace
93	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  +  DEFERRED_NAME;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  +  DEFERRED_NAME;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  +  DEFERRED_NAME;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  not  a  statement	66	None	replace
94	[BUG]  [BUGGY]  this.lenient  =  lenient  +  separator;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  separator;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  separator;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  not  a  statement	66	None	replace
95	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  +  REPLACEMENT_CHARS;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  +  REPLACEMENT_CHARS;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  +  REPLACEMENT_CHARS;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  not  a  statement	66	None	replace
96	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize!=  0;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize!=  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize!=  0;	  this.lenient    =    lenient    ||    stackSize!=    0;    	non-compiled	[CE]  not  a  statement	30	None	replace
97	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  >=  0;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  >=  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  >=  0;	  this.lenient    =    lenient    ||    stackSize!=    0;    	non-compiled	[CE]  not  a  statement	30	None	replace
98	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  >>  0;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  >>  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  >>  0;	  this.lenient    =    lenient    ||    stackSize!=    0;    	non-compiled	[CE]  not  a  statement	30	None	replace
99	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[1];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1];    	non-compiled	[CE]  not  a  statement	60	None	replace
100	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[1];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1];    	non-compiled	[CE]  not  a  statement	60	None	replace
101	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[2];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[2];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[2];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1];    	non-compiled	[CE]  not  a  statement	60	None	replace
102	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[1];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1];    	non-compiled	[CE]  not  a  statement	60	None	replace
103	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[1];  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1];    	non-compiled	[CE]  not  a  statement	60	None	replace
104	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  >  0;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  >  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  >  0;	  this.lenient    =    lenient    ||    stackSize    >    0;    	non-compiled	[CE]  not  a  statement	129	None	replace
105	[BUG]  [BUGGY]  this.lenient  =!this.deferredName;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!this.deferredName;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!this.deferredName;	  this.lenient    =!this.separator;    	non-compiled	[CE]  not  a  statement	55	None	replace
106	[BUG]  [BUGGY]  this.lenient  =!this.values.length;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!this.values.length;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!this.values.length;	  this.lenient    =!this.separator;    	non-compiled	[CE]  not  a  statement	55	None	replace
107	[BUG]  [BUGGY]  this.lenient  =  values!=  null?  values[0].lenient  :  values[1].lenient;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  values!=  null?  values[0].lenient  :  values[1].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  values!=  null?  values[0].lenient  :  values[1].lenient;	  this.lenient    =    lenient    >>    null?    values[0].lenient    :    values[1].lenient;    	non-compiled	[CE]  not  a  statement	125	None	replace
108	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length;	  this.lenient    =    lenient    ||    values.length;    	non-compiled	[CE]  not  a  statement	37	None	replace
109	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  +  1;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  +  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  +  1;	  this.lenient    =    lenient    ||    values.length;    	non-compiled	[CE]  not  a  statement	37	None	replace
110	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  *  2;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  *  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  *  2;	  this.lenient    =    lenient    ||    values.length;    	non-compiled	[CE]  not  a  statement	37	None	replace
111	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  ==  0;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  ==  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  ==  0;	  this.lenient    =    lenient    ||    stackSize    ==    0;    	non-compiled	[CE]  not  a  statement	29	None	replace
112	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  0L;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  0L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  0L;	  this.lenient    =    lenient    ||    stackSize    ==    0;    	non-compiled	[CE]  not  a  statement	29	None	replace
113	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  +  stackSize]  :  values[0];  [CE]  :  expected  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    +    stackSize]    :    values[0];    	non-compiled	[CE]  :  expected	10	None	replace
114	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  +  stackSize]  :  values[1];  [CE]  :  expected  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  +  stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  +  stackSize]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    +    stackSize]    :    values[0];    	non-compiled	[CE]  :  expected	10	None	replace
115	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  *  stackSize]  :  values[0];  [CE]  :  expected  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  *  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  *  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    +    stackSize]    :    values[0];    	non-compiled	[CE]  :  expected	10	None	replace
116	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  +  stackSize]  :  values[0];  [CE]  :  expected  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    +    stackSize]    :    values[0];    	non-compiled	[CE]  :  expected	10	None	replace
117	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  +  stackSize]  :  values[0];  [CE]  :  expected  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    +    stackSize]    :    values[0];    	non-compiled	[CE]  :  expected	10	None	replace
118	[BUG]  [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    indent,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
119	[BUG]  [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    indent,    stackSize);    }    	non-compiled	[CE]  not  a  statement	90	None	replace
120	[BUG]  [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    indent,    stackSize);    }    	non-compiled	[CE]  not  a  statement	90	None	replace
121	[BUG]  [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    indent,    stackSize);    }    	non-compiled	[CE]  not  a  statement	90	None	replace
122	[BUG]  [BUGGY]  if(htmlSafe)  {  if(lenient)  {  this.lenient  =  htmlSafe;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  if(lenient)  {  this.lenient  =  htmlSafe;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  if(lenient)  {  this.lenient  =  htmlSafe;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    indent,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
123	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  htmlSafe.equals(values.length);  [CE]  not  a  statement  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  htmlSafe.equals(values.length);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  htmlSafe.equals(values.length);	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  not  a  statement	107	None	replace
124	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  values.length);  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  values.length);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values,  values.length);	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  not  a  statement	107	None	replace
125	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  stackSize);  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values,  stackSize);	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  not  a  statement	107	None	replace
126	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length.equals(htmlSafe.values);  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length.equals(htmlSafe.values);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length.equals(htmlSafe.values);	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  not  a  statement	107	None	replace
127	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length.equals(htmlSafe.equals(values.length));  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length.equals(htmlSafe.equals(values.length));  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length.equals(htmlSafe.equals(values.length));	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  not  a  statement	107	None	replace
128	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values.length,  values.length);  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values.length,  values.length);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values.length,  values.length);	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  not  a  statement	107	None	replace
129	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[1  +  stackSize];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[1  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[1  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1    +    stackSize];    	non-compiled	[CE]  not  a  statement	80	None	replace
130	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[1  +  stackSize];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[1  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[1  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1    +    stackSize];    	non-compiled	[CE]  not  a  statement	80	None	replace
131	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[1  +  stackSize];  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[1  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[1  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1    +    stackSize];    	non-compiled	[CE]  not  a  statement	80	None	replace
132	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[1  +  1];  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[1  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[1  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1    +    stackSize];    	non-compiled	[CE]  not  a  statement	80	None	replace
133	[BUG]  [BUGGY]  this.lenient  =!separator  &&  values.length  >  0;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!separator  &&  values.length  >  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!separator  &&  values.length  >  0;	  this.lenient    =!separator;    	non-compiled	[CE]  not  a  statement	51	None	replace
134	[BUG]  [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  false);  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  false);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)values.get(0);  setLenient(deferredName,  false);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  not  a  statement	38	None	replace
135	[BUG]  [BUGGY]  setLenient(values,  true);  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  setLenient(values,  true);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	setLenient(values,  true);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  not  a  statement	38	None	replace
136	[BUG]  [BUGGY]  if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  true);  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  true);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  true);  }	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  not  a  statement	38	None	replace
137	[BUG]  [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  true);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  true);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  true);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  not  a  statement	38	None	replace
138	[BUG]  [BUGGY]  if(values.size()  >  1)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  true);  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(values.size()  >  1)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  true);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(values.size()  >  1)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  true);  }	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  not  a  statement	38	None	replace
139	[BUG]  [BUGGY]  int  deferredName  =(int)values.get(0);  setLenient(deferredName,  true);  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  deferredName  =(int)values.get(0);  setLenient(deferredName,  true);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  deferredName  =(int)values.get(0);  setLenient(deferredName,  true);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  not  a  statement	38	None	replace
140	[BUG]  [BUGGY]  if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  not  a  statement	38	None	replace
141	[BUG]  [BUGGY]  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize);    	non-compiled	[CE]  not  a  statement	110	None	replace
142	[BUG]  [BUGGY]  int  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize);    	non-compiled	[CE]  not  a  statement	110	None	replace
143	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize);  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize);  }	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize);    	non-compiled	[CE]  not  a  statement	110	None	replace
144	[BUG]  [BUGGY]  String[]  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String[]  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String[]  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize);    	non-compiled	[CE]  not  a  statement	110	None	replace
145	[BUG]  [BUGGY]  Integer  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  Integer  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	Integer  stackSize  =  getStackSize();  setLenient(stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize);    	non-compiled	[CE]  not  a  statement	110	None	replace
146	[BUG]  [BUGGY]  setLenient(stackSize,  lenient);  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  setLenient(stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	setLenient(stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize);    	non-compiled	[CE]  not  a  statement	110	None	replace
147	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[0];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    1]    :    values[0];    	non-compiled	[CE]  not  a  statement	8	None	replace
148	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  1]  :  values[0];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  1]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    1]    :    values[0];    	non-compiled	[CE]  not  a  statement	8	None	replace
149	[BUG]  [BUGGY]  char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	char[]  stack  =  new  char[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  not  a  statement	99	None	replace
150	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  size);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  not  a  statement	99	None	replace
151	[BUG]  [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String[]  stack  =  new  String[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  not  a  statement	99	None	replace
152	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  new  int[stackSize  +  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	99	None	replace
153	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  	99	None	replace
154	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length  ==  3;  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length  ==  3;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length  ==  3;	  this.lenient    =    lenient    ||    values.length    ==    3;    	non-compiled	[CE]  	84	None	replace
155	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  3;  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  3;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  3;	  this.lenient    =    lenient    ||    values.length    ==    3;    	non-compiled	[CE]  	84	None	replace
156	[BUG]  [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  null);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  null);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  null);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    null);    	non-compiled	[CE]  	39	None	replace
157	[BUG]  [BUGGY]  setLenient(values,  null);  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  setLenient(values,  null);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	setLenient(values,  null);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    null);    	non-compiled	[CE]  not  a  statement	39	None	replace
158	[BUG]  [BUGGY]  int  deferredName  =(int)values.get(0);  setLenient(deferredName,  null);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  deferredName  =(int)values.get(0);  setLenient(deferredName,  null);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  deferredName  =(int)values.get(0);  setLenient(deferredName,  null);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    null);    	non-compiled	[CE]  not  a  statement	39	None	replace
159	[BUG]  [BUGGY]  Object  deferredName  =  values.get(0);  setLenient(deferredName,  null);  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  Object  deferredName  =  values.get(0);  setLenient(deferredName,  null);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	Object  deferredName  =  values.get(0);  setLenient(deferredName,  null);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    null);    	non-compiled	[CE]  not  a  statement	39	None	replace
160	[BUG]  [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  new  Null());  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  new  Null());  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)values.get(0);  setLenient(deferredName,  new  Null());	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    null);    	non-compiled	[CE]  not  a  statement	39	None	replace
161	[BUG]  [BUGGY]  this.lenient  =  null;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  null;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  null;	  this.lenient    =    false;    	non-compiled	[CE]  not  a  statement	54	None	replace
162	[BUG]  [BUGGY]  lenient  =  true;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =  true;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =  true;	  this.lenient    =    false;    	non-compiled	[CE]  not  a  statement	54	None	replace
163	[BUG]  [BUGGY]  This.lenient  =  true;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  This.lenient  =  true;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	This.lenient  =  true;	  this.lenient    =    false;    	non-compiled	[CE]  not  a  statement	54	None	replace
164	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  4;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  4;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  4;	  this.lenient    =    lenient    ||    values.length    ==    4;    	non-compiled	[CE]  not  a  statement	85	None	replace
165	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length  ==  4;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length  ==  4;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length  ==  4;	  this.lenient    =    lenient    ||    values.length    ==    4;    	non-compiled	[CE]  not  a  statement	85	None	replace
166	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[size]  :  values[stackSize  +  stackSize];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[size]  :  values[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[size]  :  values[stackSize  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	77	None	replace
167	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  separator];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  separator];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  separator];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	77	None	replace
168	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[stackSize  +  1];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	77	None	replace
169	[BUG]  [BUGGY]  int  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	113	None	replace
170	[BUG]  [BUGGY]  String[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	113	None	replace
171	[BUG]  [BUGGY]  setLenient(stackSize,  stackSize,  lenient);  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  setLenient(stackSize,  stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	setLenient(stackSize,  stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	113	None	replace
172	[BUG]  [BUGGY]  Integer  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  [CE]  not  a  statement  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  Integer  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	Integer  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	113	None	replace
173	[BUG]  [BUGGY]  int[]  stackSize  =  getStackSize();  if(stackSize!=  null)  {  setLenient(stackSize,  stackSize,  lenient);  }  [CE]  not  a  statement  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stackSize  =  getStackSize();  if(stackSize!=  null)  {  setLenient(stackSize,  stackSize,  lenient);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stackSize  =  getStackSize();  if(stackSize!=  null)  {  setLenient(stackSize,  stackSize,  lenient);  }	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	113	None	replace
174	[BUG]  [BUGGY]  lenient  =  TYPE_LITERAL  +  1;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =  TYPE_LITERAL  +  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =  TYPE_LITERAL  +  1;	  lenient    =    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	116	None	replace
175	[BUG]  [BUGGY]  lenient  =  TYPE_LITERAL  +  separator;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =  TYPE_LITERAL  +  separator;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =  TYPE_LITERAL  +  separator;	  lenient    =    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	116	None	replace
176	[BUG]  [BUGGY]  lenient  =  TYPE_LITERAL.equals(values);  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =  TYPE_LITERAL.equals(values);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =  TYPE_LITERAL.equals(values);	  lenient    =    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	116	None	replace
177	[BUG]  [BUGGY]  this.lenient  =  lenient  |  1;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  |  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  |  1;	  this.lenient    =    lenient    &    1;    	non-compiled	[CE]  not  a  statement	115	None	replace
178	[BUG]  [BUGGY]  this.lenient  =  lenient  &  1L;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &  1L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &  1L;	  this.lenient    =    lenient    &    1;    	non-compiled	[CE]  not  a  statement	115	None	replace
179	[BUG]  [BUGGY]  this.lenient  =  lenient  &  2;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &  2;	  this.lenient    =    lenient    &    1;    	non-compiled	[CE]  not  a  statement	115	None	replace
180	[BUG]  [BUGGY]  this.lenient  =!this.lenients;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!this.lenients;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!this.lenients;	  this.lenient    =!this.lenient;    	non-compiled	[CE]  not  a  statement	50	None	replace
181	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  3];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  3];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  3];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    3];    	non-compiled	[CE]  not  a  statement	123	None	replace
182	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[stackSize];  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	97	None	replace
183	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[size  +  stackSize]  :  values[stackSize];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[size  +  stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[size  +  stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	97	None	replace
184	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  3]  :  values[stackSize];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  3]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  3]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	97	None	replace
185	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  *  stackSize]  :  values[stackSize];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  *  stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  *  stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	97	None	replace
186	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  6]  :  values[stackSize];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  6]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  6]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	97	None	replace
187	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  4]  :  values[stackSize];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  4]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  4]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	97	None	replace
188	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  >>  1;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  >>  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  >>  1;	  this.lenient    =    lenient    ||    stackSize!=    1;    	non-compiled	[CE]  not  a  statement	15	None	replace
189	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize!=  2;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize!=  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize!=  2;	  this.lenient    =    lenient    ||    stackSize!=    1;    	non-compiled	[CE]  not  a  statement	15	None	replace
190	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2;  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  2;	  this.lenient    =    lenient    ||    stackSize!=    1;    	non-compiled	[CE]  not  a  statement	15	None	replace
191	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  generateNulls;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  generateNulls;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  generateNulls;	  this.lenient    =    generateNulls;    	non-compiled	[CE]  not  a  statement	18	None	replace
192	[BUG]  [BUGGY]  This.lenient  =  lenient;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  This.lenient  =  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	This.lenient  =  lenient;	  this.lenient    =    generateNulls;    	non-compiled	[CE]  not  a  statement	18	None	replace
193	[BUG]  [BUGGY]  this.lenient  =  lenient  <  null?  values[1].lenient  :  values[1].lenient;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  null?  values[1].lenient  :  values[1].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  null?  values[1].lenient  :  values[1].lenient;	  this.lenient    =    lenient    <    null?    values[1].lenient    :    values[0].lenient;    	non-compiled	[CE]  not  a  statement	20	None	replace
194	[BUG]  [BUGGY]  this.lenient  =  lenient  <  null?  values[1].lenient  :  values[2].lenient;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  null?  values[1].lenient  :  values[2].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  null?  values[1].lenient  :  values[2].lenient;	  this.lenient    =    lenient    <    null?    values[1].lenient    :    values[0].lenient;    	non-compiled	[CE]  not  a  statement	20	None	replace
195	[BUG]  [BUGGY]  if(htmlSafe)  {  if(lenient)  {  out.write(stackSize,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  if(lenient)  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  if(lenient)  {  out.write(stackSize,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
196	[BUG]  [BUGGY]  if(!lenient)  {  if(this.lenient)  {  out.write(stackSize,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  if(this.lenient)  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  if(this.lenient)  {  out.write(stackSize,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
197	[BUG]  [BUGGY]  if(htmlSafe)  {  if(lenient)  {  out.write(stackSize,  stackSize);  return;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  if(lenient)  {  out.write(stackSize,  stackSize);  return;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  if(lenient)  {  out.write(stackSize,  stackSize);  return;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
198	[BUG]  [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  return;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    return;    }    	non-compiled	[CE]  not  a  statement	119	None	replace
199	[BUG]  [BUGGY]  if(!lenient)  {  if(this.lenient)  {  out.write(stackSize,  stackSize);  return;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  if(this.lenient)  {  out.write(stackSize,  stackSize);  return;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  if(this.lenient)  {  out.write(stackSize,  stackSize);  return;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
200	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[1]  :  values[1  +  stackSize];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[1]  :  values[1  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[1]  :  values[1  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1    +    stackSize];    	non-compiled	[CE]  not  a  statement	79	None	replace
201	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[2  +  stackSize];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[2  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[2  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1    +    stackSize];    	non-compiled	[CE]  not  a  statement	79	None	replace
202	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[1]  :  values[1  +  stackSize];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[1]  :  values[1  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[1]  :  values[1  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1    +    stackSize];    	non-compiled	[CE]  not  a  statement	79	None	replace
203	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  value[0]  :  values[1  +  stackSize];  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  value[0]  :  values[1  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  value[0]  :  values[1  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1    +    stackSize];    	non-compiled	[CE]  not  a  statement	79	None	replace
204	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  ||  TYPE_LITERAL  +  1;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  ||  TYPE_LITERAL  +  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  ||  TYPE_LITERAL  +  1;	  this.lenient    =    TYPE_LITERAL    ||    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	67	None	replace
205	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  ||  TYPE_LITERAL  *  2;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  ||  TYPE_LITERAL  *  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  ||  TYPE_LITERAL  *  2;	  this.lenient    =    TYPE_LITERAL    ||    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	67	None	replace
206	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  ||!lenient;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  ||!lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  ||!lenient;	  this.lenient    =    TYPE_LITERAL    ||    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	67	None	replace
207	[BUG]  [BUGGY]  this.lenient  =!lenient  &&  TYPE_LITERAL;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!lenient  &&  TYPE_LITERAL;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!lenient  &&  TYPE_LITERAL;	  this.lenient    =    TYPE_LITERAL    ||    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	67	None	replace
208	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0],  stackSize]  :  values[stackSize];  [CE]  :  expected  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0],  stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0],  stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  :  expected	126	None	replace
209	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  stackSize  :  values[stackSize];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  stackSize  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  stackSize  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	126	None	replace
210	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0  +  stackSize]  :  values[stackSize];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0  +  stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[0  +  stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	126	None	replace
211	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1  +  stackSize]  :  values[stackSize];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1  +  stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1  +  stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	126	None	replace
212	[BUG]  [BUGGY]  this.lenient  =  lenient  ==  null?  values[0]  :  values[1].lenient;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ==  null?  values[0]  :  values[1].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ==  null?  values[0]  :  values[1].lenient;	  this.lenient    =    lenient    <    null?    values[0]    :    values[1].lenient;    	non-compiled	[CE]  not  a  statement	19	None	replace
213	[BUG]  [BUGGY]  this.lenient  =  lenient!=  null?  values[0]  :  values[1].lenient;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient!=  null?  values[0]  :  values[1].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient!=  null?  values[0]  :  values[1].lenient;	  this.lenient    =    lenient    <    null?    values[0]    :    values[1].lenient;    	non-compiled	[CE]  not  a  statement	19	None	replace
214	[BUG]  [BUGGY]  this.lenient  =  lenient  >=  null?  values[0]  :  values[1].lenient;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  >=  null?  values[0]  :  values[1].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  >=  null?  values[0]  :  values[1].lenient;	  this.lenient    =    lenient    <    null?    values[0]    :    values[1].lenient;    	non-compiled	[CE]  not  a  statement	19	None	replace
215	[BUG]  [BUGGY]  this.lenient  =  lenient  >>  null?  values[0]  :  values[1].lenient;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  >>  null?  values[0]  :  values[1].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  >>  null?  values[0]  :  values[1].lenient;	  this.lenient    =    lenient    <    null?    values[0]    :    values[1].lenient;    	non-compiled	[CE]  not  a  statement	19	None	replace
216	[BUG]  [BUGGY]  this.lenient  =  lenient  <  null?  values[1]  :  values[0].lenient;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  null?  values[1]  :  values[0].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  null?  values[1]  :  values[0].lenient;	  this.lenient    =    lenient    <    null?    values[0]    :    values[1].lenient;    	non-compiled	[CE]  not  a  statement	19	None	replace
217	[BUG]  [BUGGY]  String[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	109	None	replace
218	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(stack  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(stack  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(stack  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	109	None	replace
219	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(separator!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(separator!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(separator!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	109	None	replace
220	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(separator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(separator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(separator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	109	None	replace
221	[BUG]  [BUGGY]  int[]  stack  =  getSeparator();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getSeparator();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getSeparator();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	109	None	replace
222	[BUG]  [BUGGY]  char[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  char[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	char[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	109	None	replace
223	[BUG]  [BUGGY]  lenient  =  false;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =  false;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =  false;	  lenient    =!lenient;    	non-compiled	[CE]  not  a  statement	94	None	replace
224	[BUG]  [BUGGY]  lenient  =(values.length  >  0)?  values[0]  :!lenient;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =(values.length  >  0)?  values[0]  :!lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =(values.length  >  0)?  values[0]  :!lenient;	  lenient    =!lenient;    	non-compiled	[CE]  not  a  statement	94	None	replace
225	[BUG]  [BUGGY]  lenient  =  null;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =  null;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =  null;	  lenient    =!lenient;    	non-compiled	[CE]  not  a  statement	94	None	replace
226	[BUG]  [BUGGY]  lenient  =(values.length  <  2)?  true  :!lenient;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =(values.length  <  2)?  true  :!lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =(values.length  <  2)?  true  :!lenient;	  lenient    =!lenient;    	non-compiled	[CE]  not  a  statement	94	None	replace
227	[BUG]  [BUGGY]  lenient  =(values.length  ==  0)?  true  :!lenient;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =(values.length  ==  0)?  true  :!lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =(values.length  ==  0)?  true  :!lenient;	  lenient    =!lenient;    	non-compiled	[CE]  not  a  statement	94	None	replace
228	[BUG]  [BUGGY]  lenient  =(values.length  >  0)?  values[1]  :!lenient;  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =(values.length  >  0)?  values[1]  :!lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =(values.length  >  0)?  values[1]  :!lenient;	  lenient    =!lenient;    	non-compiled	[CE]  not  a  statement	94	None	replace
229	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[1  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[1  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[1  +  stackSize]  :  values[0];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	9	None	replace
230	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[0  +  stackSize]  :  values[0];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	9	None	replace
231	[BUG]  [BUGGY]  String[]  stack  =  getStackSize();  if(stack!=  null)  {  out.write(stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String[]  stack  =  getStackSize();  if(stack!=  null)  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String[]  stack  =  getStackSize();  if(stack!=  null)  {  out.write(stack,  0,  stackSize);  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	103	None	replace
232	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(separator!=  null)  {  out.write(stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(separator!=  null)  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(separator!=  null)  {  out.write(stack,  0,  stackSize);  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	103	None	replace
233	[BUG]  [BUGGY]  String[]  stack  =  getStackSize();  if(separator!=  null)  {  out.write(stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String[]  stack  =  getStackSize();  if(separator!=  null)  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String[]  stack  =  getStackSize();  if(separator!=  null)  {  out.write(stack,  0,  stackSize);  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	103	None	replace
234	[BUG]  [BUGGY]  out.write(stack,  0,  stackSize);  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  out.write(stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	out.write(stack,  0,  stackSize);	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	103	None	replace
235	[BUG]  [BUGGY]  String  stackSize  =  getStackSize();  if(stackSize!=  null)  {  out.write(stackSize,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  stackSize  =  getStackSize();  if(stackSize!=  null)  {  out.write(stackSize,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  stackSize  =  getStackSize();  if(stackSize!=  null)  {  out.write(stackSize,  0,  stackSize);  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	103	None	replace
236	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  [CE]  not  a  statement  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	103	None	replace
237	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2;	  this.lenient    =    lenient    ||    values.length    <    2;    	non-compiled	[CE]  not  a  statement	3	None	replace
238	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length  <  2;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length  <  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length  <  2;	  this.lenient    =    lenient    ||    values.length    <    2;    	non-compiled	[CE]  not  a  statement	3	None	replace
239	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  >  2;  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  >  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  >  2;	  this.lenient    =    lenient    ||    values.length    <    2;    	non-compiled	[CE]  not  a  statement	3	None	replace
240	[BUG]  [BUGGY]  ||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
241	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  0;  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  0;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  0;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  not  a  statement	111	None	replace
242	[BUG]  [BUGGY]  ||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||  stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
243	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  not  a  statement	111	None	replace
244	[BUG]  [BUGGY]  (stackSize  ==  0)?)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  (stackSize  ==  0)?)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	(stackSize  ==  0)?)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
245	[BUG]  [BUGGY]  (stackSize  ==  lenient)?)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  (stackSize  ==  lenient)?)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	(stackSize  ==  lenient)?)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
246	[BUG]  [BUGGY]  int  stackSize  =  stackSize;  [CE]  not  a  statement  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  stackSize  =  stackSize;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  stackSize  =  stackSize;	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  not  a  statement	111	None	replace
247	[BUG]  [BUGGY]  this.lenient  =  lenient  ==  null?  values[0].lenient  :  values[2].lenient;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ==  null?  values[0].lenient  :  values[2].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ==  null?  values[0].lenient  :  values[2].lenient;	  this.lenient    =    lenient    ==    null?    values[0].lenient    :    values[1].lenient;    	non-compiled	[CE]  not  a  statement	75	None	replace
248	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  1L;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  1L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  1L;	  this.lenient    =    lenient    ||    stackSize    ==    1;    	non-compiled	[CE]  not  a  statement	13	None	replace
249	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[stackSize];  [CE]  not  a  statement  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	114	None	replace
250	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[stackSize];  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	114	None	replace
251	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[stackSize];  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	114	None	replace
252	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0],  stackSize]  :  values[0];  [CE]  :  expected  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0],  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0],  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1    +    stackSize]    :    values[0];    	non-compiled	[CE]  :  expected	11	None	replace
253	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[size]  :  values[stackSize];  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[size]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[size]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	58	None	replace
254	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[0];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	58	None	replace
255	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[1  +  stackSize]  :  values[1];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[1  +  stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[1  +  stackSize]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1    +    stackSize]    :    values[1];    	non-compiled	[CE]  not  a  statement	26	None	replace
256	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1  +  1]  :  values[1];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1  +  1]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1  +  1]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1    +    stackSize]    :    values[1];    	non-compiled	[CE]  not  a  statement	26	None	replace
257	[BUG]  [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  stackSize);  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  stackSize);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    stackSize);    	non-compiled	[CE]  not  a  statement	40	None	replace
258	[BUG]  [BUGGY]  int  deferredName  =(int)values.get(0);  setLenient(deferredName,  stackSize);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  deferredName  =(int)values.get(0);  setLenient(deferredName,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  deferredName  =(int)values.get(0);  setLenient(deferredName,  stackSize);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    stackSize);    	non-compiled	[CE]  not  a  statement	40	None	replace
259	[BUG]  [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  stackSize,  lenient);  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)values.get(0);  setLenient(deferredName,  stackSize,  lenient);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    stackSize);    	non-compiled	[CE]  not  a  statement	40	None	replace
260	[BUG]  [BUGGY]  int  stackSize  =  values.get(0);  setLenient(deferredName,  stackSize);  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  stackSize  =  values.get(0);  setLenient(deferredName,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  stackSize  =  values.get(0);  setLenient(deferredName,  stackSize);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    stackSize);    	non-compiled	[CE]  not  a  statement	40	None	replace
261	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length!=  2;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length!=  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length!=  2;	  this.lenient    =    lenient    ||    values.length    ==    2;    	non-compiled	[CE]  not  a  statement	14	None	replace
262	[BUG]  [BUGGY]  this.lenient  =  lenient  *  2;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  *  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  *  2;	  this.lenient    =    lenient    +    2;    	non-compiled	[CE]  not  a  statement	45	None	replace
263	[BUG]  [BUGGY]  this.lenient  =  lenient  /  2;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  /  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  /  2;	  this.lenient    =    lenient    +    2;    	non-compiled	[CE]  not  a  statement	45	None	replace
264	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  htmlSafe.equals(values);  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  htmlSafe.equals(values);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  htmlSafe.equals(values);	  this.lenient    =    lenient    ||    htmlSafe.equals(values);    	non-compiled	[CE]  not  a  statement	36	None	replace
265	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  null);  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  null);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values,  null);	  this.lenient    =    lenient    ||    htmlSafe.equals(values);    	non-compiled	[CE]  not  a  statement	36	None	replace
266	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  separator);  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  separator);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values,  separator);	  this.lenient    =    lenient    ||    htmlSafe.equals(values);    	non-compiled	[CE]  not  a  statement	36	None	replace
267	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  serializeNulls.equals(values);  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  serializeNulls.equals(values);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  serializeNulls.equals(values);	  this.lenient    =    lenient    ||    htmlSafe.equals(values);    	non-compiled	[CE]  not  a  statement	36	None	replace
268	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  true);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  true);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values,  true);	  this.lenient    =    lenient    ||    htmlSafe.equals(values);    	non-compiled	[CE]  not  a  statement	36	None	replace
269	[BUG]  [BUGGY]  this.lenient  =  values[0].lenient  <  null?  values[1].lenient  :  values[2].lenient;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  values[0].lenient  <  null?  values[1].lenient  :  values[2].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  values[0].lenient  <  null?  values[1].lenient  :  values[2].lenient;	  this.lenient    =    lenient    <    null?    values[0].lenient    :    values[2].lenient;    	non-compiled	[CE]  not  a  statement	21	None	replace
270	[BUG]  [BUGGY]  This.lenient  =  false;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  This.lenient  =  false;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	This.lenient  =  false;	  this.lenient    =    true;    	non-compiled	[CE]  not  a  statement	53	None	replace
271	[BUG]  [BUGGY]  this.lenient  =!this.calculateNulls;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!this.calculateNulls;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!this.calculateNulls;	  this.lenient    =!calculateNulls;    	non-compiled	[CE]  not  a  statement	93	None	replace
272	[BUG]  [BUGGY]  this.lenient  =!calculateNulls  ||!calculateNulls;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!calculateNulls  ||!calculateNulls;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!calculateNulls  ||!calculateNulls;	  this.lenient    =!calculateNulls;    	non-compiled	[CE]  not  a  statement	93	None	replace
273	[BUG]  [BUGGY]  this.lenient  =!serializeNulls;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!serializeNulls;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!serializeNulls;	  this.lenient    =!calculateNulls;    	non-compiled	[CE]  not  a  statement	93	None	replace
274	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.separator]  :  values[0];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.separator]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.separator]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	120	None	replace
275	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  1]  :  values[0];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  1]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	120	None	replace
276	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[this.stackSize  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[this.stackSize  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[this.stackSize  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	120	None	replace
277	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  *  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  *  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  *  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	120	None	replace
278	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  separator]  :  values[0];  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  separator]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  separator]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	120	None	replace
279	[BUG]  [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
280	[BUG]  [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize);  }  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
281	[BUG]  [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize);  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
282	[BUG]  [BUGGY]  if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
283	[BUG]  [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||  lenient)  {  this.lenient  =  htmlSafe;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
284	[BUG]  [BUGGY]  htmlSafe.setLenient(stackSize,  values,  lenient);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(stackSize,  values,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(stackSize,  values,  lenient);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
285	[BUG]  [BUGGY]  htmlSafe.setLenient(values,  null);  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(values,  null);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(values,  null);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
286	[BUG]  [BUGGY]  htmlSafe.setLenient(values,  null,  lenient);  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(values,  null,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(values,  null,  lenient);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
287	[BUG]  [BUGGY]  htmlSafe.setLenient(values,  lenient,  stackSize);  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(values,  lenient,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(values,  lenient,  stackSize);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
288	[BUG]  [BUGGY]  htmlSafe.setLenient(stack,  values,  lenient);  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(stack,  values,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(stack,  values,  lenient);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
289	[BUG]  [BUGGY]  htmlSafe.setLenient(values,  0,  lenient);  [CE]  not  a  statement  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(values,  0,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(values,  0,  lenient);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
290	[BUG]  [BUGGY]  htmlSafe.setLenient(values,  true);  [CE]  not  a  statement  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(values,  true);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(values,  true);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
291	[BUG]  [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  indent);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  indent);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  indent);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    indent);    	non-compiled	[CE]  not  a  statement	41	None	replace
292	[BUG]  [BUGGY]  int  deferredName  =(int)values.get(0);  setLenient(deferredName,  indent);  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  deferredName  =(int)values.get(0);  setLenient(deferredName,  indent);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  deferredName  =(int)values.get(0);  setLenient(deferredName,  indent);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    indent);    	non-compiled	[CE]  not  a  statement	41	None	replace
293	[BUG]  [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  lenient);  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)this.values.get(0);  setLenient(deferredName,  lenient);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    indent);    	non-compiled	[CE]  not  a  statement	41	None	replace
294	[BUG]  [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  indent,  htmlSafe);  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  indent,  htmlSafe);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)values.get(0);  setLenient(deferredName,  indent,  htmlSafe);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    indent);    	non-compiled	[CE]  not  a  statement	41	None	replace
295	[BUG]  [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  separator);  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  separator);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)values.get(0);  setLenient(deferredName,  separator);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    indent);    	non-compiled	[CE]  not  a  statement	41	None	replace
296	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stacks.length  <  1;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stacks.length  <  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stacks.length  <  1;	  this.lenient    =    lenient    ||    stacks.length    <    1;    	non-compiled	[CE]  not  a  statement	121	None	replace
297	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stacks.length  <  2;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stacks.length  <  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stacks.length  <  2;	  this.lenient    =    lenient    ||    stacks.length    <    1;    	non-compiled	[CE]  not  a  statement	121	None	replace
298	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stacks.length  >  1;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stacks.length  >  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stacks.length  >  1;	  this.lenient    =    lenient    ||    stacks.length    <    1;    	non-compiled	[CE]  not  a  statement	121	None	replace
299	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stacks.length  ==  1;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stacks.length  ==  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stacks.length  ==  1;	  this.lenient    =    lenient    ||    stacks.length    <    1;    	non-compiled	[CE]  not  a  statement	121	None	replace
300	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stacks.length  >=  1;  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stacks.length  >=  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stacks.length  >=  1;	  this.lenient    =    lenient    ||    stacks.length    <    1;    	non-compiled	[CE]  not  a  statement	121	None	replace
301	[BUG]  [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(true);  }  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(true);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(true);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    setLenient(true);    }    	non-compiled	[CE]  not  a  statement	117	None	replace
302	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(true);  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(true);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(true);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    setLenient(true);    }    	non-compiled	[CE]  not  a  statement	117	None	replace
303	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    setLenient(true);    }    	non-compiled	[CE]  not  a  statement	117	None	replace
304	[BUG]  [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(true);  }  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(true);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(true);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    setLenient(true);    }    	non-compiled	[CE]  not  a  statement	117	None	replace
305	[BUG]  [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(true);  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(true);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(true);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    setLenient(true);    }    	non-compiled	[CE]  not  a  statement	117	None	replace
306	[BUG]  [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    setLenient(true);    }    	non-compiled	[CE]  not  a  statement	117	None	replace
307	[BUG]  [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    1,    lenient,    stackSize);    }    	non-compiled	[CE]  not  a  statement	91	None	replace
308	[BUG]  [BUGGY]  safely())  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  safely())  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	safely())  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    1,    lenient,    stackSize);    }    	non-compiled	[CE]  	91	None	replace
309	[BUG]  [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    1,    lenient,    stackSize);    }    	non-compiled	[CE]  not  a  statement	91	None	replace
310	[BUG]  [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    1,    lenient,    stackSize);    }    	non-compiled	[CE]  not  a  statement	91	None	replace
311	[BUG]  [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  this.lenient  =  lenient;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    1,    lenient,    stackSize);    }    	non-compiled	[CE]  not  a  statement	91	None	replace
312	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length  >  0;  [CE]  not  a  statement  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length  >  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length  >  0;	  this.lenient    =    lenient    &&    htmlSafe;    	non-compiled	[CE]  not  a  statement	32	None	replace
313	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  0;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  0;	  this.lenient    =    lenient    &&    htmlSafe;    	non-compiled	[CE]  not  a  statement	32	None	replace
314	[BUG]  [BUGGY]  this.lenient  =  htmlSafe  &&  lenient;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  htmlSafe  &&  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  htmlSafe  &&  lenient;	  this.lenient    =    lenient    &&    htmlSafe;    	non-compiled	[CE]  not  a  statement	32	None	replace
315	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  1;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  1;	  this.lenient    =    lenient    &&    values.length    <    1;    	non-compiled	[CE]  not  a  statement	2	None	replace
316	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  indent  <  1;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  indent  <  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  indent  <  1;	  this.lenient    =    lenient    &&    values.length    <    1;    	non-compiled	[CE]  not  a  statement	2	None	replace
317	[BUG]  [BUGGY]  String[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  not  a  statement	42	None	replace
318	[BUG]  [BUGGY]  setLenient(stack,  null,  lenient);  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  setLenient(stack,  null,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	setLenient(stack,  null,  lenient);	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  	42	None	replace
319	[BUG]  [BUGGY]  if(stackSize  ==  getStackSize())  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  [CE]  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  getStackSize())  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  getStackSize())  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  	42	None	replace
320	[BUG]  [BUGGY]  setLenient(null,  null,  lenient);  [CE]  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  setLenient(null,  null,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	setLenient(null,  null,  lenient);	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  	42	None	replace
321	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient,  values);  [CE]  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient,  values);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient,  values);	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  	42	None	replace
322	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  stackSize]  :  values[stackSize];  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[stackSize  +  stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  	24	None	replace
323	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length  >=  1;  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length  >=  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length  >=  1;	  this.lenient    =    lenient    ||    values.length    >=    1;    	non-compiled	[CE]  not  a  statement	5	None	replace
324	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  1;  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  1;	  this.lenient    =    lenient    ||    values.length    >=    1;    	non-compiled	[CE]  not  a  statement	5	None	replace
325	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >>  1;  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >>  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >>  1;	  this.lenient    =    lenient    ||    values.length    >=    1;    	non-compiled	[CE]  not  a  statement	5	None	replace
326	[BUG]  [BUGGY]  this.lenient  =  htmlSafe  ||!lenient;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  htmlSafe  ||!lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  htmlSafe  ||!lenient;	  this.lenient    =    htmlSafe    ||    lenient;    	non-compiled	[CE]  not  a  statement	34	None	replace
327	[BUG]  [BUGGY]  this.lenient  =!lenient  ||  htmlSafe;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!lenient  ||  htmlSafe;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!lenient  ||  htmlSafe;	  this.lenient    =    htmlSafe    ||    lenient;    	non-compiled	[CE]  not  a  statement	34	None	replace
328	[BUG]  [BUGGY]  safely(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  safely(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	safely(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  	112	None	replace
329	[BUG]  [BUGGY]  if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  not  a  statement	112	None	replace
330	[BUG]  [BUGGY]  (stackSize  ==  lenient)?)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  (stackSize  ==  lenient)?)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	(stackSize  ==  lenient)?)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
331	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  0;  }  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  0;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  0;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  not  a  statement	112	None	replace
332	[BUG]  [BUGGY]  this.lenient  =  values[0].lenient!=  null?  values[1].lenient  :  values[0].lenient;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  values[0].lenient!=  null?  values[1].lenient  :  values[0].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  values[0].lenient!=  null?  values[1].lenient  :  values[0].lenient;	  this.lenient    =    values[0].lenient    <    null?    values[1].lenient    :    values[0].lenient;    	non-compiled	[CE]  not  a  statement	22	None	replace
333	[BUG]  [BUGGY]  this.lenient  =  values[0].lenient  ==  null?  values[1].lenient  :  values[0].lenient;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  values[0].lenient  ==  null?  values[1].lenient  :  values[0].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  values[0].lenient  ==  null?  values[1].lenient  :  values[0].lenient;	  this.lenient    =    values[0].lenient    <    null?    values[1].lenient    :    values[0].lenient;    	non-compiled	[CE]  not  a  statement	22	None	replace
334	[BUG]  [BUGGY]  this.lenient  =  values[0].lenient  <  null?  values[1].lenient  :  values[1].lenient;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  values[0].lenient  <  null?  values[1].lenient  :  values[1].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  values[0].lenient  <  null?  values[1].lenient  :  values[1].lenient;	  this.lenient    =    values[0].lenient    <    null?    values[1].lenient    :    values[0].lenient;    	non-compiled	[CE]  not  a  statement	22	None	replace
335	[BUG]  [BUGGY]  this.lenient  =  values[1].lenient  <  null?  values[0].lenient  :  values[1].lenient;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  values[1].lenient  <  null?  values[0].lenient  :  values[1].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  values[1].lenient  <  null?  values[0].lenient  :  values[1].lenient;	  this.lenient    =    values[0].lenient    <    null?    values[1].lenient    :    values[0].lenient;    	non-compiled	[CE]  not  a  statement	22	None	replace
336	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  :  values[stackSize  +  stackSize];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  :  values[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  :  values[stackSize  +  stackSize];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	72	None	replace
337	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize[0]  :  values[stackSize  +  1];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize[0]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  stackSize[0]  :  values[stackSize  +  1];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	72	None	replace
338	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize[0]  :  values[stackSize  +  stackSize];  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize[0]  :  values[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  stackSize[0]  :  values[stackSize  +  stackSize];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	72	None	replace
339	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[stackSize  +  1];  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[stackSize  +  1];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	72	None	replace
340	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[stackSize  +  1];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    1];    	non-compiled	[CE]  not  a  statement	124	None	replace
341	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[stackSize  +  1];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    1];    	non-compiled	[CE]  not  a  statement	124	None	replace
342	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[stackSize  +  1];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    1];    	non-compiled	[CE]  not  a  statement	124	None	replace
343	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  items[stackSize  +  1];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  items[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  items[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    1];    	non-compiled	[CE]  not  a  statement	124	None	replace
344	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  lenient  <  <  1;  [CE]  illegal  start  of  type  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  lenient  <  <  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  lenient  <  <  1;	  this.lenient    =    lenient    <    <    1;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
345	[BUG]  [BUGGY]  this.lenient  =  lenient  <  <  2;  [CE]  illegal  start  of  type  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  <  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  <  2;	  this.lenient    =    lenient    <    <    1;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
346	[BUG]  [BUGGY]  this.lenient  =  lenient?  true  :  lenient  <  <  1;  [CE]  illegal  start  of  type  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  true  :  lenient  <  <  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  true  :  lenient  <  <  1;	  this.lenient    =    lenient    <    <    1;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
347	[BUG]  [BUGGY]  this.lenient  =  lenient  <  <  4;  [CE]  illegal  start  of  type  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  <  4;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  <  4;	  this.lenient    =    lenient    <    <    1;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
348	[BUG]  [BUGGY]  this.lenient  =  lenient?  true  :  false;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  true  :  false;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  true  :  false;	  this.lenient    =    lenient    <    <    1;    	non-compiled	[CE]  not  a  statement	95	None	replace
349	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	86	None	replace
350	[BUG]  [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	86	None	replace
351	[BUG]  [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	86	None	replace
352	[BUG]  [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
353	[BUG]  [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	86	None	replace
354	[BUG]  [BUGGY]  this.lenient  =  lenient  [Delete]  null?  values[0]  :  values[1];  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  [Delete]  null?  values[0]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  [Delete]  null?  values[0]  :  values[1];	  this.lenient    =    lenient!=    null?    values[0]    :    values[1];    	non-compiled	[CE]  	61	None	replace
355	[BUG]  [BUGGY]  this.lenient  =!lenient?  TYPE_LITERAL  +  1  :  TYPE_LITERAL;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!lenient?  TYPE_LITERAL  +  1  :  TYPE_LITERAL;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!lenient?  TYPE_LITERAL  +  1  :  TYPE_LITERAL;	  this.lenient    =    TYPE_LITERAL    +    1;    	non-compiled	[CE]  not  a  statement	65	None	replace
356	[BUG]  [BUGGY]  this.lenient  =!lenient?  TYPE_LITERAL  +  1  :  0;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!lenient?  TYPE_LITERAL  +  1  :  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!lenient?  TYPE_LITERAL  +  1  :  0;	  this.lenient    =    TYPE_LITERAL    +    1;    	non-compiled	[CE]  not  a  statement	65	None	replace
357	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  +  2;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  +  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  +  2;	  this.lenient    =    TYPE_LITERAL    +    1;    	non-compiled	[CE]  not  a  statement	65	None	replace
358	[BUG]  [BUGGY]  if(htmlSafe)  {  if(lenient)  {  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  if(lenient)  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  if(lenient)  {  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
359	[BUG]  [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
360	[BUG]  [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	89	None	replace
361	[BUG]  [BUGGY]  if(!lenient)  {  if(this.lenient)  {  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  if(this.lenient)  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  if(this.lenient)  {  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
362	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  >  1L;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  >  1L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  >  1L;	  this.lenient    =    lenient    ||    values.length    >    1;    	non-compiled	[CE]  not  a  statement	4	None	replace
363	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  >  3;  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  >  3;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  >  3;	  this.lenient    =    lenient    ||    values.length    >    1;    	non-compiled	[CE]  not  a  statement	4	None	replace
364	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[1]  :  values[1];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[1]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[1]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1];    	non-compiled	[CE]  not  a  statement	59	None	replace
365	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[2];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[2];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[2];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1];    	non-compiled	[CE]  not  a  statement	59	None	replace
366	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[1]  :  values[1];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[1]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[1]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1];    	non-compiled	[CE]  not  a  statement	59	None	replace
367	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[1  +  lenient];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[1  +  lenient];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[1  +  lenient];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    lenient];    	non-compiled	[CE]  not  a  statement	71	None	replace
368	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize]  :  values[stackSize  +  separator];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize]  :  values[stackSize  +  separator];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize]  :  values[stackSize  +  separator];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    lenient];    	non-compiled	[CE]  not  a  statement	71	None	replace
369	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  lenient];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  lenient];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  lenient];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    lenient];    	non-compiled	[CE]  not  a  statement	71	None	replace
370	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[1  +  lenient];  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[1  +  lenient];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[1  +  lenient];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    lenient];    	non-compiled	[CE]  not  a  statement	71	None	replace
371	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[0  +  lenient];  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[0  +  lenient];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[0  +  lenient];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    lenient];    	non-compiled	[CE]  not  a  statement	71	None	replace
372	[BUG]  [BUGGY]  this.lenient  =  lenient?  false  :  lenient  *  1;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  false  :  lenient  *  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  false  :  lenient  *  1;	  this.lenient    =    lenient    *    1;    	non-compiled	[CE]  not  a  statement	47	None	replace
373	[BUG]  [BUGGY]  this.lenient  =  lenient?  true  :  1;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  true  :  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  true  :  1;	  this.lenient    =    lenient    *    1;    	non-compiled	[CE]  not  a  statement	47	None	replace
374	[BUG]  [BUGGY]  this.lenient  =  lenient?  true  :  lenient  *  1;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  true  :  lenient  *  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  true  :  lenient  *  1;	  this.lenient    =    lenient    *    1;    	non-compiled	[CE]  not  a  statement	47	None	replace
375	[BUG]  [BUGGY]  ||(stackSize  ==  0  &&  stackSize  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||(stackSize  ==  0  &&  stackSize  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||(stackSize  ==  0  &&  stackSize  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
376	[BUG]  [BUGGY]  ||(stackSize  ==  0  &&  stackSize  <  2))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||(stackSize  ==  0  &&  stackSize  <  2))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||(stackSize  ==  0  &&  stackSize  <  2))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
377	[BUG]  [BUGGY]  (stackSize  ==  0)?)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  (stackSize  ==  0)?)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	(stackSize  ==  0)?)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
378	[BUG]  [BUGGY]  (stackSize  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  (stackSize  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	(stackSize  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	108	None	replace
379	[BUG]  [BUGGY]  (stackSize  ==  lenient)?)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  (stackSize  ==  lenient)?)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	(stackSize  ==  lenient)?)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
380	[BUG]  [BUGGY]  this.lenient  =  values[0].lenient!=  null?  values[1].lenient  :  lenient;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  values[0].lenient!=  null?  values[1].lenient  :  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  values[0].lenient!=  null?  values[1].lenient  :  lenient;	  this.lenient    =    values[0].lenient    <    null?    values[1].lenient    :    lenient;    	non-compiled	[CE]  not  a  statement	23	None	replace
381	[BUG]  [BUGGY]  this.lenient  =  values[0].lenient  ==  null?  values[1].lenient  :  lenient;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  values[0].lenient  ==  null?  values[1].lenient  :  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  values[0].lenient  ==  null?  values[1].lenient  :  lenient;	  this.lenient    =    values[0].lenient    <    null?    values[1].lenient    :    lenient;    	non-compiled	[CE]  not  a  statement	23	None	replace
382	[BUG]  [BUGGY]  this.lenient  =  values[0].lenient  >=  null?  values[1].lenient  :  lenient;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  values[0].lenient  >=  null?  values[1].lenient  :  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  values[0].lenient  >=  null?  values[1].lenient  :  lenient;	  this.lenient    =    values[0].lenient    <    null?    values[1].lenient    :    lenient;    	non-compiled	[CE]  not  a  statement	23	None	replace
383	[BUG]  [BUGGY]  this.lenient  =!values.length  +  1;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!values.length  +  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!values.length  +  1;	  this.lenient    =!values.length;    	non-compiled	[CE]  not  a  statement	52	None	replace
384	[BUG]  [BUGGY]  this.lenient  =!values.length  -  1;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!values.length  -  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!values.length  -  1;	  this.lenient    =!values.length;    	non-compiled	[CE]  not  a  statement	52	None	replace
385	[BUG]  [BUGGY]  this.lenient  =!values.length  &&!this.lenient;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!values.length  &&!this.lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!values.length  &&!this.lenient;	  this.lenient    =!values.length;    	non-compiled	[CE]  not  a  statement	52	None	replace
386	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1L;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  1L;	  this.lenient    =    lenient    ||    stackSize    <    1;    	non-compiled	[CE]  not  a  statement	1	None	replace
387	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[stackSize  +  stackSize];  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[stackSize  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
388	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  properties[stackSize  +  stackSize];  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  properties[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  properties[stackSize  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
389	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  items[stackSize  +  stackSize];  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  items[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  items[stackSize  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
390	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  separator];  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  separator];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  separator];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
391	[BUG]  [BUGGY]  String[]  stack  =  getStackSize();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String[]  stack  =  getStackSize();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String[]  stack  =  getStackSize();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
392	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(stack!=  null  ||  stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(stack!=  null  ||  stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(stack!=  null  ||  stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
393	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(stack.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(stack.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(stack.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
394	[BUG]  [BUGGY]  final  int[]  stack  =  getStackSize();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  final  int[]  stack  =  getStackSize();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	final  int[]  stack  =  getStackSize();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
395	[BUG]  [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
396	[BUG]  [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
397	[BUG]  [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  }  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
398	[BUG]  [BUGGY]  ||  lenient)  {  out.write(stackSize,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||  lenient)  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||  lenient)  {  out.write(stackSize,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
399	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  {  0;  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  {  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  {  0;	  this.lenient    =    lenient    ||    stackSize    {    0;    	non-compiled	[CE]  	128	None	replace
400	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  ==  1);  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  ==  1);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  ==  1);	  this.lenient    =    lenient    ||    values.length    ==    1L;    	non-compiled	[CE]  	83	None	replace
401	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length  ==  1L;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length  ==  1L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length  ==  1L;	  this.lenient    =    lenient    ||    values.length    ==    1L;    	non-compiled	[CE]  not  a  statement	83	None	replace
402	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  ==  1E;  [CE]  malformed  floating  point  literal  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  ==  1E;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  ==  1E;	  this.lenient    =    lenient    ||    values.length    ==    1L;    	non-compiled	[CE]  malformed  floating  point  literal	83	None	replace
403	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  >  1;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  >  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  >  1;	  this.lenient    =    lenient    ||    stackSize    >    1;    	non-compiled	[CE]  not  a  statement	122	None	replace
404	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  1L;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  1L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  1L;	  this.lenient    =    lenient    ||    stackSize    >    1;    	non-compiled	[CE]  not  a  statement	122	None	replace
405	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2;	  this.lenient    =    lenient    ||    stackSize    >    1;    	non-compiled	[CE]  not  a  statement	122	None	replace
406	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stack.length  ==  1;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stack.length  ==  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stack.length  ==  1;	  this.lenient    =    lenient    ||    stack.length    ==    1;    	non-compiled	[CE]  not  a  statement	130	None	replace
407	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stack.length!=  1;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stack.length!=  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stack.length!=  1;	  this.lenient    =    lenient    ||    stack.length    ==    1;    	non-compiled	[CE]  not  a  statement	130	None	replace
408	[BUG]  [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(false);  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(false);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(false);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    setLenient(false);    }    	non-compiled	[CE]  not  a  statement	118	None	replace
409	[BUG]  [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  ||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	||  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    setLenient(false);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
410	[BUG]  [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(false);  }  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(false);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(false);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    setLenient(false);    }    	non-compiled	[CE]  not  a  statement	118	None	replace
411	[BUG]  [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(false);  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(false);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  setLenient(false);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    setLenient(false);    }    	non-compiled	[CE]  not  a  statement	118	None	replace
412	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[0  +  stackSize];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[0  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[0]  :  values[0  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0    +    stackSize];    	non-compiled	[CE]  not  a  statement	78	None	replace
413	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[0  +  stackSize];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[0  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[0  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0    +    stackSize];    	non-compiled	[CE]  not  a  statement	78	None	replace
414	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[0  +  stackSize];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[0  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[0  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0    +    stackSize];    	non-compiled	[CE]  not  a  statement	78	None	replace
415	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[0  +  stackSize];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[0  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[0  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0    +    stackSize];    	non-compiled	[CE]  not  a  statement	78	None	replace
416	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[0];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	82	None	replace
417	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[size  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[size  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[size  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	82	None	replace
418	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  3]  :  values[0];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  3]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  3]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	82	None	replace
419	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  *  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  *  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  *  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	82	None	replace
420	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  4]  :  values[0];  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  4]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  4]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	82	None	replace
421	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  6]  :  values[0];  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  6]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  6]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	82	None	replace
422	[BUG]  [BUGGY]  allowSerialize(lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  allowSerialize(lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	allowSerialize(lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    1,    lenient,    stackSize);    }    	non-compiled	[CE]  	91	None	replace
423	[BUG]  [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  setLenient(true);  }  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  setLenient(true);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  setLenient(true);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    1,    lenient,    stackSize);    }    	non-compiled	[CE]  not  a  statement	91	None	replace
424	[BUG]  [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  htmlSafe)  {  this.lenient  =  lenient;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    1,    lenient,    stackSize);    }    	non-compiled	[CE]  not  a  statement	91	None	replace
425	[BUG]  [BUGGY]  this.lenient  =  lenient  <  <  3;  [CE]  illegal  start  of  type  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  <  3;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  <  3;	  this.lenient    =    lenient    <    <    1;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
426	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[5]  :  values[5  +  stackSize];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[5]  :  values[5  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[5]  :  values[5  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1    +    stackSize];    	non-compiled	[CE]  not  a  statement	79	None	replace
427	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stacks.length!=  1;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stacks.length!=  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stacks.length!=  1;	  this.lenient    =    lenient    ||    stacks.length    <    1;    	non-compiled	[CE]  not  a  statement	121	None	replace
428	[BUG]  [BUGGY]  this.lenient  =!this.htmlSafe;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!this.htmlSafe;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!this.htmlSafe;	  this.lenient    =!calculateNulls;    	non-compiled	[CE]  not  a  statement	93	None	replace
429	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[1  +  stackSize]  :  values[1];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[1  +  stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[1  +  stackSize]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1    +    stackSize]    :    values[1];    	non-compiled	[CE]  not  a  statement	26	None	replace
430	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[1  +  stackSize]  :  values[1];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[1  +  stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  2?  values[1  +  stackSize]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1    +    stackSize]    :    values[1];    	non-compiled	[CE]  not  a  statement	26	None	replace
431	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1  +  stackSize]  :  values[2];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1  +  stackSize]  :  values[2];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1  +  stackSize]  :  values[2];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1    +    stackSize]    :    values[1];    	non-compiled	[CE]  not  a  statement	26	None	replace
432	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[1]  :  values[1];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[1]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[1]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1];    	non-compiled	[CE]  not  a  statement	59	None	replace
433	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[1]  :  values[1];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[1]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  2?  values[1]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1];    	non-compiled	[CE]  not  a  statement	59	None	replace
434	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0  +  1]  :  values[1];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0  +  1]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0  +  1]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	27	None	replace
435	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0  +  stackSize]  :  values[1];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0  +  stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[0  +  stackSize]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	27	None	replace
436	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  2?  values[0  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	27	None	replace
437	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[0  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	27	None	replace
438	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[5  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[5  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[5  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	11	None	replace
439	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[0];  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0];    	non-compiled	[CE]  not  a  statement	57	None	replace
440	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[0];  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0];    	non-compiled	[CE]  not  a  statement	57	None	replace
441	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize!=  2?  values[0]  :  values[0];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize!=  2?  values[0]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize!=  2?  values[0]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0];    	non-compiled	[CE]  not  a  statement	57	None	replace
442	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	86	None	replace
443	[BUG]  [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	86	None	replace
444	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  deferredName);  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values,  deferredName);	  this.lenient    =    lenient    ||    htmlSafe.equals(values);    	non-compiled	[CE]  not  a  statement	36	None	replace
445	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.equals(htmlSafe);  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.equals(htmlSafe);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.equals(htmlSafe);	  this.lenient    =    lenient    ||    htmlSafe.equals(values);    	non-compiled	[CE]  not  a  statement	36	None	replace
446	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  DEFERRED_NAME);  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  DEFERRED_NAME);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values,  DEFERRED_NAME);	  this.lenient    =    lenient    ||    htmlSafe.equals(values);    	non-compiled	[CE]  not  a  statement	36	None	replace
447	[BUG]  [BUGGY]  if(!lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  throw  new  IllegalArgumentException( " ");  }	  lenient    =!lenient;    	non-compiled	[CE]  not  a  statement	94	None	replace
448	[BUG]  [BUGGY]  if(!lenient)  {  lenient  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  lenient  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  lenient  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  lenient    =!lenient;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
449	[BUG]  [BUGGY]  lenient  =!htmlSafe;  [CE]  <identifier>  expected  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =!htmlSafe;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =!htmlSafe;	  lenient    =!lenient;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
450	[BUG]  [BUGGY]  if(!lenient)  {  lenient  =  false;  }  else  {  out.write(stackSize,  stackSize);  }  [CE]  <identifier>  expected  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  lenient  =  false;  }  else  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  lenient  =  false;  }  else  {  out.write(stackSize,  stackSize);  }	  lenient    =!lenient;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
451	[BUG]  [BUGGY]  if(!lenient)  {  lenient  =  true;  }  else  {  out.write(stackSize,  stackSize);  }  [CE]  <identifier>  expected  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  lenient  =  true;  }  else  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  lenient  =  true;  }  else  {  out.write(stackSize,  stackSize);  }	  lenient    =!lenient;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
452	[BUG]  [BUGGY]  this.lenient  =  lenient  <  null?  values[0].lenient  :  lenient;  [CE]  <identifier>  expected  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  null?  values[0].lenient  :  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  null?  values[0].lenient  :  lenient;	  this.lenient    =    values[0].lenient    <    null?    values[1].lenient    :    lenient;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
453	[BUG]  [BUGGY]  this.lenient  =  values[1].lenient  <  null?  values[0].lenient  :  lenient;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  values[1].lenient  <  null?  values[0].lenient  :  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  values[1].lenient  <  null?  values[0].lenient  :  lenient;	  this.lenient    =    values[0].lenient    <    null?    values[1].lenient    :    lenient;    	non-compiled	[CE]  not  a  statement	23	None	replace
454	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stack.length  ==  2;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stack.length  ==  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stack.length  ==  2;	  this.lenient    =    lenient    ||    stack.length    ==    1;    	non-compiled	[CE]  not  a  statement	130	None	replace
455	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stack.length  ==  1L;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stack.length  ==  1L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stack.length  ==  1L;	  this.lenient    =    lenient    ||    stack.length    ==    1;    	non-compiled	[CE]  not  a  statement	130	None	replace
456	[BUG]  [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	89	None	replace
457	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	89	None	replace
458	[BUG]  [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	89	None	replace
459	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[1];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1];    	non-compiled	[CE]  not  a  statement	60	None	replace
460	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize!=  2?  values[0]  :  values[1];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize!=  2?  values[0]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize!=  2?  values[0]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1];    	non-compiled	[CE]  not  a  statement	60	None	replace
461	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  indent  ==  0;  [CE]  not  a  statement  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  indent  ==  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  indent  ==  0;	  this.lenient    =    lenient    &&    values.length    ==    0;    	non-compiled	[CE]  not  a  statement	28	None	replace
462	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  int[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  int[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
463	[BUG]  [BUGGY]  int[]  stack  =  getStackTrace();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackTrace();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackTrace();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	109	None	replace
464	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  1]  :  values[stackSize];  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  1]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  1]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	97	None	replace
465	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent  +  stackSize]  :  values[stackSize];  [CE]  :  expected  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent  +  stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  indent  +  stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  :  expected	97	None	replace
466	[BUG]  [BUGGY]  this.lenient  =  lenient!=  null?  values[0].lenient  :  values[2].lenient;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient!=  null?  values[0].lenient  :  values[2].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient!=  null?  values[0].lenient  :  values[2].lenient;	  this.lenient    =    lenient!=    null?    values[0].lenient    :    values[1].lenient;    	non-compiled	[CE]  not  a  statement	74	None	replace
467	[BUG]  [BUGGY]  this.lenient  =  lenient!=  null?  values[1]  :  values[0];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient!=  null?  values[1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient!=  null?  values[1]  :  values[0];	  this.lenient    =    lenient!=    null?    values[0]    :    values[1];    	non-compiled	[CE]  not  a  statement	61	None	replace
468	[BUG]  [BUGGY]  _serializeNulls(stackSize,  0,  lenient);  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  0,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  0,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	43	None	replace
469	[BUG]  [BUGGY]  _serializeNulls(values,  stackSize,  lenient);  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(values,  stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(values,  stackSize,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	43	None	replace
470	[BUG]  [BUGGY]  _serializeNulls(stackSize,  indent,  lenient);  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  indent,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  indent,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	43	None	replace
471	[BUG]  [BUGGY]  _serializeNulls(stackSize,  values,  lenient);  [CE]  not  a  statement  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  values,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  values,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	43	None	replace
472	[BUG]  [BUGGY]  _serializeNulls(stackSize,  1,  lenient);  [CE]  not  a  statement  [FE]                                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  1,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  1,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	43	None	replace
473	[BUG]  [BUGGY]  _serializeNulls(stack,  indent,  lenient);  [CE]  not  a  statement  [FE]                                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stack,  indent,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stack,  indent,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	43	None	replace
474	[BUG]  [BUGGY]  _serializeNulls(stack,  0,  lenient);  [CE]  not  a  statement  [FE]                                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stack,  0,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stack,  0,  lenient);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	43	None	replace
475	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.separatorChar;  [CE]  not  a  statement  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.separatorChar;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.separatorChar;	  this.lenient    =    lenient    ||    htmlSafe.separator;    	non-compiled	[CE]  not  a  statement	105	None	replace
476	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[0  +  stackSize];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[0  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[0  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0    +    stackSize];    	non-compiled	[CE]  not  a  statement	78	None	replace
477	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[1  +  stackSize];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[1  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[1  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0    +    stackSize];    	non-compiled	[CE]  not  a  statement	78	None	replace
478	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  properties[1  +  stackSize];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  properties[1  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  properties[1  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0    +    stackSize];    	non-compiled	[CE]  not  a  statement	78	None	replace
479	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[indent];  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[indent];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[indent];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	58	None	replace
480	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[size]  :  values[stackSize];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[size]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[size]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	58	None	replace
481	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[size]  :  values[stackSize];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[size]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[size]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	58	None	replace
482	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[1];  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize];    	non-compiled	[CE]  	58	None	replace
483	[BUG]  [BUGGY]  this.lenient  =  lenient  +  2L;  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  2L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  2L;	  this.lenient    =    lenient    +    1L;    	non-compiled	[CE]  	46	None	replace
484	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[stackSize  +  stackSize];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[stackSize  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	73	None	replace
485	[BUG]  [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	108	None	replace
486	[BUG]  [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	108	None	replace
487	[BUG]  [BUGGY]  if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	108	None	replace
488	[BUG]  [BUGGY]  this.lenient  =!lenient  &&  REPLACEMENT_CHARS.equals(TYPE_LITERAL);  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!lenient  &&  REPLACEMENT_CHARS.equals(TYPE_LITERAL);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!lenient  &&  REPLACEMENT_CHARS.equals(TYPE_LITERAL);	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
489	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  |  DEFERRED;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  |  DEFERRED;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS  |  DEFERRED;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
490	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  3]  :  values[0];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  3]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  3]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	120	None	replace
491	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[this.stackSize  +  this.separator]  :  values[0];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[this.stackSize  +  this.separator]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[this.stackSize  +  this.separator]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	120	None	replace
492	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  5]  :  values[0];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  5]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  5]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	120	None	replace
493	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.size]  :  values[0];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.size]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.size]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	120	None	replace
494	[BUG]  [BUGGY]  this.lenient  =  lenient  ==  null?  values[1]  :  values[0];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ==  null?  values[1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ==  null?  values[1]  :  values[0];	  this.lenient    =    lenient    ==    null?    values[0]    :    values[1];    	non-compiled	[CE]  not  a  statement	62	None	replace
495	[BUG]  [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  	111	None	replace
496	[BUG]  [BUGGY]  if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  not  a  statement	111	None	replace
497	[BUG]  [BUGGY]  safeGet(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  safeGet(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	safeGet(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  lenient;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  	111	None	replace
498	[BUG]  [BUGGY]  if(lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  not  a  statement	111	None	replace
499	[BUG]  [BUGGY]  this.lenient  =  lenient  *  3;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  *  3;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  *  3;	  this.lenient    =    lenient    +    3;    	non-compiled	[CE]  not  a  statement	49	None	replace
500	[BUG]  [BUGGY]  this.lenient  =!this.enemy;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!this.enemy;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!this.enemy;	  this.lenient    =!this.separator;    	non-compiled	[CE]  not  a  statement	55	None	replace
501	[BUG]  [BUGGY]  this.lenient  =!this.deferred;  [CE]  <identifier>  expected  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!this.deferred;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!this.deferred;	  this.lenient    =!this.separator;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
502	[BUG]  [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [CE]  <identifier>  expected  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(lenient)  {  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  }	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
503	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  lenient);  [CE]  <identifier>  expected  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  0,  lenient);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
504	[BUG]  [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  0);  [CE]  <identifier>  expected  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  0);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  new  int[1];  System.arraycopy(stack,  0,  stack,  0,  0);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
505	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length!=  2;  [CE]  <identifier>  expected  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length!=  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length!=  2;	  this.lenient    =    lenient    &&    values.length!=    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
506	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  indent[stackSize]  :  values[stackSize  +  stackSize];  [CE]  <identifier>  expected  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  indent[stackSize]  :  values[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  indent[stackSize]  :  values[stackSize  +  stackSize];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  <identifier>  expected	72	None	replace
507	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  :  values[stackSize  +  1];  [CE]  <identifier>  expected  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  :  values[stackSize  +  1];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  <identifier>  expected	72	None	replace
508	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(stack!=  null)  {  setLenient(stack,  null,  lenient);  }  [CE]  <identifier>  expected  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(stack!=  null)  {  setLenient(stack,  null,  lenient);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(stack!=  null)  {  setLenient(stack,  null,  lenient);  }	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
509	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  [CE]  <identifier>  expected  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  0)  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  0)  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
510	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient,  deferredName);  [CE]  <identifier>  expected  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient,  deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient,  deferredName);	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
511	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  out.setLenient(stack,  null,  lenient);  [CE]  <identifier>  expected  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  out.setLenient(stack,  null,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  out.setLenient(stack,  null,  lenient);	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
512	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient,  htmlSafe);  [CE]  not  a  statement  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient,  htmlSafe);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient,  htmlSafe);	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  not  a  statement	42	None	replace
513	[BUG]  [BUGGY]  this.lenient  =  lenient!=  null?  values[1].lenient  :  values[0].lenient;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient!=  null?  values[1].lenient  :  values[0].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient!=  null?  values[1].lenient  :  values[0].lenient;	  this.lenient    =    lenient    <    null?    values[1].lenient    :    values[0].lenient;    	non-compiled	[CE]  not  a  statement	20	None	replace
514	[BUG]  [BUGGY]  this.lenient  =  lenient  ==  null?  values[1].lenient  :  values[0].lenient;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ==  null?  values[1].lenient  :  values[0].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ==  null?  values[1].lenient  :  values[0].lenient;	  this.lenient    =    lenient    <    null?    values[1].lenient    :    values[0].lenient;    	non-compiled	[CE]  not  a  statement	20	None	replace
515	[BUG]  [BUGGY]  this.lenient  =  lenient  <  null?  values[0].lenient  :  values[0].lenient;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  null?  values[0].lenient  :  values[0].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  null?  values[0].lenient  :  values[0].lenient;	  this.lenient    =    lenient    <    null?    values[1].lenient    :    values[0].lenient;    	non-compiled	[CE]  not  a  statement	20	None	replace
516	[BUG]  [BUGGY]  String  deferredName  =(String)values.get(0);  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)values.get(0);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)values.get(0);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName);    	non-compiled	[CE]  not  a  statement	44	None	replace
517	[BUG]  [BUGGY]  Object  deferredName  =  values.get(0);  setLenient(deferredName);  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  Object  deferredName  =  values.get(0);  setLenient(deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	Object  deferredName  =  values.get(0);  setLenient(deferredName);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName);    	non-compiled	[CE]  not  a  statement	44	None	replace
518	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  1]  :  values[0];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  1]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	82	None	replace
519	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[1];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  1]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	82	None	replace
520	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[size  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[size  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[size  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	82	None	replace
521	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  >=  4;  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  >=  4;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  >=  4;	  this.lenient    =    lenient    ||    values.length    <    4;    	non-compiled	[CE]  not  a  statement	6	None	replace
522	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  >=  2;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  >=  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  >=  2;	  this.lenient    =    lenient    ||    values.length    <    2;    	non-compiled	[CE]  not  a  statement	3	None	replace
523	[BUG]  [BUGGY]  this.lenient  =  0;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  0;	  this.lenient    =    false;    	non-compiled	[CE]  not  a  statement	54	None	replace
524	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  =  0;  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  =  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  =  0;	  this.lenient    =    lenient    ||    stackSize    <    0;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
525	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  serializeNulls(values[0]);  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  serializeNulls(values[0]);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  serializeNulls(values[0]);	  this.lenient    =    lenient    ||    htmlSafe.equals(values[0]);    	non-compiled	[CE]  not  a  statement	106	None	replace
526	[BUG]  [BUGGY]  if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  indent);  }  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  indent);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  indent);  }	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    indent);    	non-compiled	[CE]  not  a  statement	41	None	replace
527	[BUG]  [BUGGY]  if(values!=  null)  {  String  deferredName  =  values.get(0);  setLenient(deferredName,  indent);  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(values!=  null)  {  String  deferredName  =  values.get(0);  setLenient(deferredName,  indent);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(values!=  null)  {  String  deferredName  =  values.get(0);  setLenient(deferredName,  indent);  }	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    indent);    	non-compiled	[CE]  not  a  statement	41	None	replace
528	[BUG]  [BUGGY]  String  deferredName  =(String)values.get(0);  if(deferredName!=  null)  {  setLenient(deferredName,  indent);  }  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)values.get(0);  if(deferredName!=  null)  {  setLenient(deferredName,  indent);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)values.get(0);  if(deferredName!=  null)  {  setLenient(deferredName,  indent);  }	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    indent);    	non-compiled	[CE]  not  a  statement	41	None	replace
529	[BUG]  [BUGGY]  setLenient(values,  lenient);  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  setLenient(values,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	setLenient(values,  lenient);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    indent);    	non-compiled	[CE]  not  a  statement	41	None	replace
530	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize  +  1]  :  values[0];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize  +  1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize  +  1]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    1]    :    values[0];    	non-compiled	[CE]  not  a  statement	8	None	replace
531	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[stackSize  +  1]  :  values[0];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[stackSize  +  1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  2?  values[stackSize  +  1]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    1]    :    values[0];    	non-compiled	[CE]  not  a  statement	8	None	replace
532	[BUG]  [BUGGY]  this.lenient  =!lenient  &&  htmlSafe;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!lenient  &&  htmlSafe;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!lenient  &&  htmlSafe;	  this.lenient    =    htmlSafe    ||    lenient;    	non-compiled	[CE]  not  a  statement	34	None	replace
533	[BUG]  [BUGGY]  this.lenient  =  0  ||  lenient;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  0  ||  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  0  ||  lenient;	  this.lenient    =    htmlSafe    ||    lenient;    	non-compiled	[CE]  not  a  statement	34	None	replace
534	[BUG]  [BUGGY]  int[]  stackSize  =  getStackSize();  out.setLenient(stackSize,  stackSize,  lenient);  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stackSize  =  getStackSize();  out.setLenient(stackSize,  stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stackSize  =  getStackSize();  out.setLenient(stackSize,  stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	113	None	replace
535	[BUG]  [BUGGY]  int[]  stackSize  =  getStackSize();  setLenient(values,  stackSize,  lenient);  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stackSize  =  getStackSize();  setLenient(values,  stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stackSize  =  getStackSize();  setLenient(values,  stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	113	None	replace
536	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(stack  ==  null)  {  out.write(stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(stack  ==  null)  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(stack  ==  null)  {  out.write(stack,  0,  stackSize);  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	103	None	replace
537	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(stackSafe!=  null)  {  out.write(stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(stackSafe!=  null)  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(stackSafe!=  null)  {  out.write(stack,  0,  stackSize);  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	103	None	replace
538	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(stacksafely!=  null)  {  out.write(stack,  0,  stackSize);  }  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(stacksafely!=  null)  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(stacksafely!=  null)  {  out.write(stack,  0,  stackSize);  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	103	None	replace
539	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(values!=  null)  {  out.write(stack,  0,  values.length);  }  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(values!=  null)  {  out.write(stack,  0,  values.length);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(values!=  null)  {  out.write(stack,  0,  values.length);  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	103	None	replace
540	[BUG]  [BUGGY]  htmlSafe.setLenient(stackSize,  lenient);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(stackSize,  lenient);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
541	[BUG]  [BUGGY]  htmlSafe.setLenient(values,  false);  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(values,  false);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(values,  false);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
542	[BUG]  [BUGGY]  htmlSafe.setLenient(values,  deferredName,  lenient);  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(values,  deferredName,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(values,  deferredName,  lenient);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
543	[BUG]  [BUGGY]  this.lenient  =  lenient  +  DEFERRED_NAME;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  DEFERRED_NAME;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  DEFERRED_NAME;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  not  a  statement	66	None	replace
544	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  0L;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  0L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  0L;	  this.lenient    =    lenient    ||    stackSize    >    0;    	non-compiled	[CE]  not  a  statement	129	None	replace
545	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0  +  stackSize]  :  values[1];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  values[0  +  stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  values[0  +  stackSize]  :  values[1];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	9	None	replace
546	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  1?  values[stackSize  +  1]  :  values[0];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  1?  values[stackSize  +  1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  1?  values[stackSize  +  1]  :  values[0];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	9	None	replace
547	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length.equals(htmlSafe);  [CE]  not  a  statement  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length.equals(htmlSafe);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length.equals(htmlSafe);	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  not  a  statement	107	None	replace
548	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  indent);  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  indent);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values,  indent);	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  not  a  statement	107	None	replace
549	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  value.length);  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values,  value.length);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values,  value.length);	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  not  a  statement	107	None	replace
550	[BUG]  [BUGGY]  htmlSafe.setLenient(null);  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(null);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(null);	  htmlSafe.setLenient(true);    	non-compiled	[CE]  not  a  statement	101	None	replace
551	[BUG]  [BUGGY]  htmlSafe.setLenient(lenient);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(lenient);	  htmlSafe.setLenient(true);    	non-compiled	[CE]  not  a  statement	101	None	replace
552	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[1  +  stackSize];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[1  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  indent[0]  :  values[1  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1    +    stackSize];    	non-compiled	[CE]  not  a  statement	80	None	replace
553	[BUG]  [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize);  }  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
554	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
555	[BUG]  [BUGGY]  int[]  stack  =  getSeparator();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getSeparator();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getSeparator();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
556	[BUG]  [BUGGY]  this.lenient  =  lenient  /  1;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  /  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  /  1;	  this.lenient    =    lenient    *    1;    	non-compiled	[CE]  not  a  statement	47	None	replace
557	[BUG]  [BUGGY]  this.lenient  =  lenient  *  4;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  *  4;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  *  4;	  this.lenient    =    lenient    *    1;    	non-compiled	[CE]  not  a  statement	47	None	replace
558	[BUG]  [BUGGY]  int[]  stackSize  =  getStackSize();  if(stackSize!=  null)  {  setLenient(stackSize,  lenient);  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stackSize  =  getStackSize();  if(stackSize!=  null)  {  setLenient(stackSize,  lenient);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stackSize  =  getStackSize();  if(stackSize!=  null)  {  setLenient(stackSize,  lenient);  }	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize);    	non-compiled	[CE]  not  a  statement	110	None	replace
559	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[stackSize]  :  values[stackSize  +  stackSize];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent[stackSize]  :  values[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  indent[stackSize]  :  values[stackSize  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	69	None	replace
560	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize,  lenient);  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize,  lenient);	  int[]    stack    =    getStackSize();    setLenient(stack,    0,    stackSize);    	non-compiled	[CE]  not  a  statement	104	None	replace
561	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  out.setLenient(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  out.setLenient(stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  out.setLenient(stack,  0,  stackSize);	  int[]    stack    =    getStackSize();    setLenient(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
562	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize  +  1);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize  +  1);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize  +  1);	  int[]    stack    =    getStackSize();    setLenient(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
563	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length!=  4;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length!=  4;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length!=  4;	  this.lenient    =    lenient    ||    values.length    ==    4;    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
564	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    indent,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
565	[BUG]  [BUGGY]  if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  indent,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    indent,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
566	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize  +  1]  :  values[stackSize];  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize  +  1]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize  +  1]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    1]    :    values[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
567	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize  +  1]  :  values[stackSize];  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize  +  1]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize  +  1]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    1]    :    values[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
568	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  isSerializeNull(values);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  isSerializeNull(values);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  isSerializeNull(values);	  this.lenient    =    lenient    &&    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
569	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  isSerializeNulls(values);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  isSerializeNulls(values);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  isSerializeNulls(values);	  this.lenient    =    lenient    &&    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
570	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  =  0;  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  =  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  =  0;	  this.lenient    =    lenient    &&    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
571	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  1  :  values[1];  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  1  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  1  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    +    stackSize]    :    values[0];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
572	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  +  stackSize]  :  values[1];  [CE]  :  expected  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  +  stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  +  stackSize]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    +    stackSize]    :    values[0];    	non-compiled	[CE]  :  expected	10	None	replace
573	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  +  stackSize]  :  values[0];  [CE]  :  expected  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    +    stackSize]    :    values[0];    	non-compiled	[CE]  :  expected	10	None	replace
574	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[stackSize];  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[0]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
575	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[stackSize];  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
576	[BUG]  [BUGGY]  lenient  =!this.lenient;  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =!this.lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =!this.lenient;	  this.lenient    =!this.lenient;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
577	[BUG]  [BUGGY]  Set  <  String>  deferredName  =  values.get(0);  setLenient(deferredName,  true);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  Set  <  String>  deferredName  =  values.get(0);  setLenient(deferredName,  true);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	Set  <  String>  deferredName  =  values.get(0);  setLenient(deferredName,  true);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
578	[BUG]  [BUGGY]  if(values!=  null)  {  String  deferredName  =  values.get(0);  setLenient(deferredName,  true);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(values!=  null)  {  String  deferredName  =  values.get(0);  setLenient(deferredName,  true);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(values!=  null)  {  String  deferredName  =  values.get(0);  setLenient(deferredName,  true);  }	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
579	[BUG]  [BUGGY]  Object  deferredName  =  values.get(0);  setLenient(deferredName,  true);  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  Object  deferredName  =  values.get(0);  setLenient(deferredName,  true);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	Object  deferredName  =  values.get(0);  setLenient(deferredName,  true);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
580	[BUG]  [BUGGY]  if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  false);  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  false);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  false);  }	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
581	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  values.length);  [CE]  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  values.length);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  values.length);	  this.lenient    =    lenient    ||    values.length;    	non-compiled	[CE]  	37	None	replace
582	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  indent;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  indent;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  indent;	  this.lenient    =    lenient    ||    values.length;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
583	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize]  :  values[stackSize];  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
584	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[0  +  stackSize];  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[0  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[0  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
585	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent  :  values[stackSize  +  stackSize];  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  indent  :  values[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  indent  :  values[stackSize  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
586	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  3];  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  3];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  3];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
587	[BUG]  [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
588	[BUG]  [BUGGY]  if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
589	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[5  +  stackSize]  :  values[1];  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[5  +  stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[5  +  stackSize]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[1];    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
590	[BUG]  [BUGGY]  String  deferredName  =(String)values.get(0);  if(deferredName!=  null)  {  setLenient(deferredName,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  String  deferredName  =(String)values.get(0);  if(deferredName!=  null)  {  setLenient(deferredName,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	String  deferredName  =(String)values.get(0);  if(deferredName!=  null)  {  setLenient(deferredName,  stackSize);  }	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
591	[BUG]  [BUGGY]  int  deferredName  =(int)values.get(1);  setLenient(deferredName,  stackSize);  [CE]  illegal  start  of  expression  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  deferredName  =(int)values.get(1);  setLenient(deferredName,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  deferredName  =(int)values.get(1);  setLenient(deferredName,  stackSize);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
592	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  ||  TYPE_FIELD;  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  ||  TYPE_FIELD;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  ||  TYPE_FIELD;	  this.lenient    =    TYPE_LITERAL    ||    TYPE_LITERAL;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
593	[BUG]  [BUGGY]  this.lenient  =  TYPE_LITERAL  ||  TYPE_SAFE_REPLACEMENT_CHARS;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  TYPE_LITERAL  ||  TYPE_SAFE_REPLACEMENT_CHARS;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  TYPE_LITERAL  ||  TYPE_SAFE_REPLACEMENT_CHARS;	  this.lenient    =    TYPE_LITERAL    ||    TYPE_LITERAL;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
594	[BUG]  [BUGGY]  lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS;  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =  TYPE_LITERAL  |  REPLACEMENT_CHARS;	  lenient    =    TYPE_LITERAL;    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
595	[BUG]  [BUGGY]  lenient  =  TYPE_LITERAL  ||  htmlSafe;  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =  TYPE_LITERAL  ||  htmlSafe;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =  TYPE_LITERAL  ||  htmlSafe;	  lenient    =    TYPE_LITERAL;    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
596	[BUG]  [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	safeSerialize(stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  	112	None	replace
597	[BUG]  [BUGGY]  if(lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
598	[BUG]  [BUGGY]  if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(separator  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
599	[BUG]  [BUGGY]  if(lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(lenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
600	[BUG]  [BUGGY]  if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  null);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  null);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(values!=  null)  {  String  deferredName  =(String)values.get(0);  setLenient(deferredName,  null);  }	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
601	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[stackSize  +  1];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  2?  values[0]  :  values[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    1];    	non-compiled	[CE]  not  a  statement	124	None	replace
602	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize!=  2?  values[0]  :  values[stackSize  +  1];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize!=  2?  values[0]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize!=  2?  values[0]  :  values[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    1];    	non-compiled	[CE]  not  a  statement	124	None	replace
603	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[5  +  1]  :  values[5];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[5  +  1]  :  values[5];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[5  +  1]  :  values[5];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[5    +    stackSize]    :    values[5];    	non-compiled	[CE]  not  a  statement	98	None	replace
604	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[0  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[5    +    stackSize]    :    values[5];    	non-compiled	[CE]  not  a  statement	98	None	replace
605	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[0  +  lenient];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[0  +  lenient];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  :  values[0  +  lenient];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    lenient];    	non-compiled	[CE]  not  a  statement	71	None	replace
606	[BUG]  [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  return;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    return;    }    	non-compiled	[CE]  not  a  statement	119	None	replace
607	[BUG]  [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  htmlSafe)  {  this.lenient  =  lenient;  }  else  {  out.write(stackSize,  stackSize);  return;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    return;    }    	non-compiled	[CE]  not  a  statement	119	None	replace
608	[BUG]  [BUGGY]  if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  return;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    return;    }    	non-compiled	[CE]  not  a  statement	119	None	replace
609	[BUG]  [BUGGY]  if(values  ==  null)  {  int[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(values  ==  null)  {  int[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(values  ==  null)  {  int[]  stack  =  getStackSize();  if(stack!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
610	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  CYPE_LITERAL;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  CYPE_LITERAL;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  CYPE_LITERAL;	  this.lenient    =    TYPE_LITERAL    ||    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	67	None	replace
611	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  >  0;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  >  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  >  0;	  this.lenient    =    TYPE_LITERAL    ||    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	67	None	replace
612	[BUG]  [BUGGY]  this.lenient  =  lenient  ||!lenient;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||!lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||!lenient;	  this.lenient    =    TYPE_LITERAL    ||    TYPE_LITERAL;    	non-compiled	[CE]  not  a  statement	67	None	replace
613	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  1?  values[0  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	27	None	replace
614	[BUG]  [BUGGY]  this.lenient  =!this.serializeNulls;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!this.serializeNulls;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!this.serializeNulls;	  this.lenient    =!calculateNulls;    	non-compiled	[CE]  not  a  statement	93	None	replace
615	[BUG]  [BUGGY]  lenient  =!calculateNulls;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =!calculateNulls;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =!calculateNulls;	  this.lenient    =!calculateNulls;    	non-compiled	[CE]  not  a  statement	93	None	replace
616	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize]  :  values[stackSize];  [CE]  not  a  statement  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	56	None	replace
617	[BUG]  [BUGGY]  this.lenient  =  lenient?  REPLACEMENT_CHARS  |  TYPE_LITERAL  :  REPLACEMENT_CHARS;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  REPLACEMENT_CHARS  |  TYPE_LITERAL  :  REPLACEMENT_CHARS;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  REPLACEMENT_CHARS  |  TYPE_LITERAL  :  REPLACEMENT_CHARS;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
618	[BUG]  [BUGGY]  this.lenient  =  lenient  &  REPLACEMENT_CHARS;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &  REPLACEMENT_CHARS;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &  REPLACEMENT_CHARS;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
619	[BUG]  [BUGGY]  this.lenient  =  lenient?  true  :  REPLACEMENT_CHARS  |  TYPE_LITERAL;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  true  :  REPLACEMENT_CHARS  |  TYPE_LITERAL;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  true  :  REPLACEMENT_CHARS  |  TYPE_LITERAL;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
620	[BUG]  [BUGGY]  this.lenient  =  lenient?  REPLACEMENT_CHARS  |  TYPE_LITERAL;  [CE]  :  expected  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  REPLACEMENT_CHARS  |  TYPE_LITERAL;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  REPLACEMENT_CHARS  |  TYPE_LITERAL;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  :  expected	96	None	replace
621	[BUG]  [BUGGY]  this.lenient  =  lenient  &  REPLACEMENT_CHARS  |  TYPE_LITERAL;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &  REPLACEMENT_CHARS  |  TYPE_LITERAL;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &  REPLACEMENT_CHARS  |  TYPE_LITERAL;	  this.lenient    =    TYPE_LITERAL    |    REPLACEMENT_CHARS;    	non-compiled	[CE]  not  a  statement	96	None	replace
622	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  3]  :  values[1];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  3]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  3]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[1];    	non-compiled	[CE]  not  a  statement	81	None	replace
623	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[3];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[3];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  1]  :  values[3];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[1];    	non-compiled	[CE]  not  a  statement	81	None	replace
624	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackLenient  <  1;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackLenient  <  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackLenient  <  1;	  this.lenient    =    lenient    &&    values.length    <    1;    	non-compiled	[CE]  not  a  statement	2	None	replace
625	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  1);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  1);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  1);	  this.lenient    =    lenient    &&    values.length    <    1;    	non-compiled	[CE]  	2	None	replace
626	[BUG]  [BUGGY]  this.lenient  =  values[1].lenient  <  null?  values[1].lenient  :  values[0].lenient;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  values[1].lenient  <  null?  values[1].lenient  :  values[0].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  values[1].lenient  <  null?  values[1].lenient  :  values[0].lenient;	  this.lenient    =    values[0].lenient    <    null?    values[1].lenient    :    values[0].lenient;    	non-compiled	[CE]  not  a  statement	22	None	replace
627	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.serializeNulls(values);  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.serializeNulls(values);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.serializeNulls(values);	  this.lenient    =    lenient    ||    htmlSafe.equals(values);    	non-compiled	[CE]  not  a  statement	36	None	replace
628	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[separator];  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[separator];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[separator];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	58	None	replace
629	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	82	None	replace
630	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  not  a  statement	111	None	replace
631	[BUG]  [BUGGY]  if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  +=  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  not  a  statement	111	None	replace
632	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    +=    stackSize;    }    	non-compiled	[CE]  not  a  statement	111	None	replace
633	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stacks.length  <  1  ||  stackSize  >  stackSize);  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stacks.length  <  1  ||  stackSize  >  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stacks.length  <  1  ||  stackSize  >  stackSize);	  this.lenient    =    lenient    ||    stacks.length    <    1;    	non-compiled	[CE]  	121	None	replace
634	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stacks.length  <  1  ||  stackSize  >  stackSize;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stacks.length  <  1  ||  stackSize  >  stackSize;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stacks.length  <  1  ||  stackSize  >  stackSize;	  this.lenient    =    lenient    ||    stacks.length    <    1;    	non-compiled	[CE]  not  a  statement	121	None	replace
635	[BUG]  [BUGGY]  this.lenient  =  lenient  <  <  1  ||  values.length  ==  1;  [CE]  illegal  start  of  type  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  <  1  ||  values.length  ==  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  <  1  ||  values.length  ==  1;	  this.lenient    =    lenient    &&    values.length    ==    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
636	[BUG]  [BUGGY]  this.lenient  =  lenient  *  values.length  ==  1;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  *  values.length  ==  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  *  values.length  ==  1;	  this.lenient    =    lenient    &&    values.length    ==    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
637	[BUG]  [BUGGY]  this.lenient  =  lenient?  htmlSafe.separator  :  htmlSafe.separator;  [CE]  not  a  statement  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  htmlSafe.separator  :  htmlSafe.separator;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  htmlSafe.separator  :  htmlSafe.separator;	  this.lenient    =    lenient    ||    htmlSafe.separator;    	non-compiled	[CE]  not  a  statement	105	None	replace
638	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.calculateValues();  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.calculateValues();  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.calculateValues();	  this.lenient    =    lenient    ||    htmlSafe.separator;    	non-compiled	[CE]  not  a  statement	105	None	replace
639	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  >  2?  values[stackSize  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  >  2?  values[stackSize  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  >  2?  values[stackSize  +  stackSize]  :  values[0];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	9	None	replace
640	[BUG]  [BUGGY]  if(lenient)  {  this.lenient  =  htmlSafe;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(lenient)  {  this.lenient  =  htmlSafe;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(lenient)  {  this.lenient  =  htmlSafe;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    indent,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
641	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  3]  :  values[stackSize];  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  3]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  3]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
642	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.stackSize]  :  values[0];  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
643	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.stackSize]  :  values[1];  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.stackSize]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.stackSize]  :  values[1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
644	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.indent]  :  values[0];  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.indent]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[this.stackSize  +  this.indent]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[this.stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
645	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  ==  6;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  ==  6;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  ==  6;	  this.lenient    =    lenient    ||    values.length    ==    4;    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
646	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[0];  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  1?  values[0]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0];    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
647	[BUG]  [BUGGY]  if(lenient)  {  this.lenient  =!htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(lenient)  {  this.lenient  =!htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(lenient)  {  this.lenient  =!htmlSafe;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.lenient    =!htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
648	[BUG]  [BUGGY]  if(lenient)  {  this.lenient  =!htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(lenient)  {  this.lenient  =!htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(lenient)  {  this.lenient  =!htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }	  this.lenient    =!htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
649	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0  +  1]  :  values[0];  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0  +  1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0  +  1]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    1]    :    values[0];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
650	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize  +  1]  :  values[0];  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize  +  1]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize  +  1]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    1]    :    values[0];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
651	[BUG]  [BUGGY]  lenient  =!values.isEmpty();  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =!values.isEmpty();  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =!values.isEmpty();	  lenient    =!lenient;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
652	[BUG]  [BUGGY]  lenient  =!separator;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =!separator;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =!separator;	  lenient    =!lenient;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
653	[BUG]  [BUGGY]  lenient  =  TYPE_LITERAL  ||!lenient;  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =  TYPE_LITERAL  ||!lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =  TYPE_LITERAL  ||!lenient;	  lenient    =    TYPE_LITERAL;    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
654	[BUG]  [BUGGY]  this.lenient  =  lenient  <  <  stackSize  ||  stackSize  ==  0;  [CE]  >  expected  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  <  stackSize  ||  stackSize  ==  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  <  stackSize  ||  stackSize  ==  0;	  this.lenient    =    lenient    ||    stackSize    {    0;    	non-compiled	[CE]  >  expected	128	None	replace
655	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[2  +  stackSize];  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[2  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[2  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[1    +    stackSize];    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
656	[BUG]  [BUGGY]  this.lenient  =  lenient  >=  null?  values[0].lenient  :  values[2].lenient;  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  >=  null?  values[0].lenient  :  values[2].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  >=  null?  values[0].lenient  :  values[2].lenient;	  this.lenient    =    lenient    <    null?    values[0].lenient    :    values[2].lenient;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
657	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[5]  :  values[5];  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[5]  :  values[5];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[5]  :  values[5];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
658	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[2]  :  values[2];  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[2]  :  values[2];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[2]  :  values[2];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
659	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[3]  :  values[3];  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[3]  :  values[3];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[3]  :  values[3];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1]    :    values[1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
660	[BUG]  [BUGGY]  this.lenient  =  lenient!=  null?  values[1]  :  values[1];  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient!=  null?  values[1]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient!=  null?  values[1]  :  values[1];	  this.lenient    =    lenient!=    null?    values[0]    :    values[1];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
661	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  return;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
662	[BUG]  [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  return;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  return;  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
663	[BUG]  [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stack,  0,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
664	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  +  stackSize]  :  values[stackSize  +  stackSize];  [CE]  :  expected  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  +  stackSize]  :  values[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  +  stackSize]  :  values[stackSize  +  stackSize];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  :  expected	72	None	replace
665	[BUG]  [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  *  values[stackSize]  :  values[stackSize  +  stackSize];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  *  values[stackSize]  :  values[stackSize  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  &&  stackSize  <  2?  stackSize  *  values[stackSize]  :  values[stackSize  +  stackSize];	  this.lenient    =    lenient    &&    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	72	None	replace
666	[BUG]  [BUGGY]  Integer  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize);  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  Integer  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	Integer  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize);    	non-compiled	[CE]  not  a  statement	110	None	replace
667	[BUG]  [BUGGY]  int[]  stackSize  =  getStackSize();  setLenientValues(stackSize,  lenient);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stackSize  =  getStackSize();  setLenientValues(stackSize,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stackSize  =  getStackSize();  setLenientValues(stackSize,  lenient);	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize);    	non-compiled	[CE]  not  a  statement	110	None	replace
668	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2;	  this.lenient    =    lenient    ||    stackSize;    	non-compiled	[CE]  not  a  statement	33	None	replace
669	[BUG]  [BUGGY]  this.lenient  =  lenient  <  <  1  ||  values.length!=  1;  [CE]  illegal  start  of  type  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  <  1  ||  values.length!=  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  <  1  ||  values.length!=  1;	  this.lenient    =    lenient    &&    values.length!=    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
670	[BUG]  [BUGGY]  this.lenient  =  lenient  *  values.length  >>  1;  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  *  values.length  >>  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  *  values.length  >>  1;	  this.lenient    =    lenient    &&    values.length!=    1;    	non-compiled	[CE]  not  a  statement	17	None	replace
671	[BUG]  [BUGGY]  htmlSafe.setLenient(values,  lenient,  deferredName);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(values,  lenient,  deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(values,  lenient,  deferredName);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
672	[BUG]  [BUGGY]  htmlSafe.setLenient(values,  lenient,  null);  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  htmlSafe.setLenient(values,  lenient,  null);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	htmlSafe.setLenient(values,  lenient,  null);	  htmlSafe.setLenient(values,    lenient);    	non-compiled	[CE]  not  a  statement	102	None	replace
673	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  +  stackSize]  :  values[0];  [CE]  :  expected  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    +    stackSize]    :    values[0];    	non-compiled	[CE]  :  expected	10	None	replace
674	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  +  stackSize]  :  values[0];  [CE]  :  expected  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[0]  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    +    stackSize]    :    values[0];    	non-compiled	[CE]  :  expected	10	None	replace
675	[BUG]  [BUGGY]  Object  deferredName  =  values.get(0);  setLenient(deferredName,  stackSize);  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  Object  deferredName  =  values.get(0);  setLenient(deferredName,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	Object  deferredName  =  values.get(0);  setLenient(deferredName,  stackSize);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    stackSize);    	non-compiled	[CE]  not  a  statement	40	None	replace
676	[BUG]  [BUGGY]  setLenient(deferredName,  stackSize);  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  setLenient(deferredName,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	setLenient(deferredName,  stackSize);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    stackSize);    	non-compiled	[CE]  not  a  statement	40	None	replace
677	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
678	[BUG]  [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize,    stackSize);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
679	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  4];  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  4];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  +  4];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	73	None	replace
680	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  *  stackSize];  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  *  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  *  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	73	None	replace
681	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stack.length  <  1;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stack.length  <  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stack.length  <  1;	  this.lenient    =    lenient    ||    stack.length    ==    1;    	non-compiled	[CE]  not  a  statement	130	None	replace
682	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stack.length  ==  3;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stack.length  ==  3;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stack.length  ==  3;	  this.lenient    =    lenient    ||    stack.length    ==    1;    	non-compiled	[CE]  not  a  statement	130	None	replace
683	[BUG]  [BUGGY]  if(stackSize  ==  getStackSize())  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  getStackSize())  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  getStackSize())  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  not  a  statement	42	None	replace
684	[BUG]  [BUGGY]  if(values  ==  null)  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(values  ==  null)  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(values  ==  null)  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  not  a  statement	42	None	replace
685	[BUG]  [BUGGY]  if(stackSize  ==  getStackSize())  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  else  {  out.write('n');  }  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  getStackSize())  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  else  {  out.write('n');  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  getStackSize())  {  int[]  stack  =  getStackSize();  setLenient(stack,  null,  lenient);  }  else  {  out.write('n');  }	  int[]    stack    =    getStackSize();    setLenient(stack,    null,    lenient);    	non-compiled	[CE]  not  a  statement	42	None	replace
686	[BUG]  [BUGGY]  this.lenient  =  lenient?  values.length  +  1  :  values[stackSize  +  1];  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  values.length  +  1  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  values.length  +  1  :  values[stackSize  +  1];	  this.lenient    =    TYPE_LITERAL    +    1;    	non-compiled	[CE]  not  a  statement	65	None	replace
687	[BUG]  [BUGGY]  this.lenient  =  lenient?  values.length  +  1  :  values[stackSize];  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  values.length  +  1  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  values.length  +  1  :  values[stackSize];	  this.lenient    =    TYPE_LITERAL    +    1;    	non-compiled	[CE]  not  a  statement	65	None	replace
688	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[0  +  stackSize];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[0  +  stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[1]  :  values[0  +  stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[0    +    stackSize];    	non-compiled	[CE]  not  a  statement	78	None	replace
689	[BUG]  [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  new  int[size];  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  not  a  statement	99	None	replace
690	[BUG]  [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  new  int[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  int[]    stack    =    new    int[stackSize];    System.arraycopy(stack,    0,    stack,    0,    stackSize);    	non-compiled	[CE]  not  a  statement	99	None	replace
691	[BUG]  [BUGGY]  this.lenient  =!calculateNulls(values);  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!calculateNulls(values);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!calculateNulls(values);	  this.lenient    =!values.length;    	non-compiled	[CE]  not  a  statement	52	None	replace
692	[BUG]  [BUGGY]  this.lenient  =!stackSize;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!stackSize;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!stackSize;	  this.lenient    =!values.length;    	non-compiled	[CE]  not  a  statement	52	None	replace
693	[BUG]  [BUGGY]  lenient  =!values.length;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =!values.length;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =!values.length;	  this.lenient    =!values.length;    	non-compiled	[CE]  not  a  statement	52	None	replace
694	[BUG]  [BUGGY]  if(!lenient)  {  int[]  stack  =  getStackSize();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  int[]  stack  =  getStackSize();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  int[]  stack  =  getStackSize();  if(stack.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
695	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(stack.length  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(stack.length  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(stack.length  ==  2)  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stack    =    getStackSize();    if(stack.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
696	[BUG]  [BUGGY]  this.lenient  =  lenient  ==  null?  values[1]  :  values[1];  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ==  null?  values[1]  :  values[1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ==  null?  values[1]  :  values[1];	  this.lenient    =    lenient    ==    null?    values[0]    :    values[1];    	non-compiled	[CE]  	62	None	replace
697	[BUG]  [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient!=  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    1,    lenient,    stackSize);    }    	non-compiled	[CE]  	91	None	replace
698	[BUG]  [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  System.arraycopy(stack,  0,  stack,  1,  lenient,  stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    System.arraycopy(stack,    0,    stack,    1,    lenient,    stackSize);    }    	non-compiled	[CE]  not  a  statement	91	None	replace
699	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[stackSize  +  1]  :  values[stackSize];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  ==  2?  values[stackSize  +  1]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  ==  2?  values[stackSize  +  1]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    1]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	25	None	replace
700	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[3  +  stackSize]  :  values[3];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[3  +  stackSize]  :  values[3];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[3  +  stackSize]  :  values[3];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[5    +    stackSize]    :    values[5];    	non-compiled	[CE]  not  a  statement	98	None	replace
701	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  4];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  4];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size]  :  values[stackSize  +  4];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size]    :    values[stackSize    +    stackSize];    	non-compiled	[CE]  not  a  statement	77	None	replace
702	[BUG]  [BUGGY]  this.lenient  =!deferredName;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!deferredName;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!deferredName;	  this.lenient    =!separator;    	non-compiled	[CE]  not  a  statement	51	None	replace
703	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	7	None	replace
704	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  4]  :  values[0];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  4]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize  +  4]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	7	None	replace
705	[BUG]  [BUGGY]  lenient  =!this.separator;  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  lenient  =!this.separator;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	lenient  =!this.separator;	  this.lenient    =!this.separator;    	non-compiled	[CE]  not  a  statement	55	None	replace
706	[BUG]  [BUGGY]  this.lenient  =!this.separator  ||!this.separator;  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =!this.separator  ||!this.separator;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =!this.separator  ||!this.separator;	  this.lenient    =!this.separator;    	non-compiled	[CE]  not  a  statement	55	None	replace
707	[BUG]  [BUGGY]  this.lenient  =  lenient  >  0?  htmlSafe  :  lenient;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  >  0?  htmlSafe  :  lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  >  0?  htmlSafe  :  lenient;	  this.lenient    =    htmlSafe    ||    lenient;    	non-compiled	[CE]  not  a  statement	34	None	replace
708	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  stackSize;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  stackSize;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  stackSize;	  this.lenient    =    htmlSafe    ||    lenient;    	non-compiled	[CE]  not  a  statement	34	None	replace
709	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  stackSize;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  stackSize;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  stackSize;	  this.lenient    =    htmlSafe    ||    lenient;    	non-compiled	[CE]  not  a  statement	34	None	replace
710	[BUG]  [BUGGY]  this.lenient  =  lenient  ||!htmlSafe;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||!htmlSafe;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||!htmlSafe;	  this.lenient    =    htmlSafe    ||    lenient;    	non-compiled	[CE]  not  a  statement	34	None	replace
711	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize]  :  values[stackSize  +  1];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[stackSize]  :  values[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    1];    	non-compiled	[CE]  not  a  statement	70	None	replace
712	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize]  :  values[stackSize  +  1];  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize]  :  values[stackSize  +  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[stackSize]  :  values[stackSize  +  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    1];    	non-compiled	[CE]  not  a  statement	70	None	replace
713	[BUG]  [BUGGY]  this.lenient  =  lenient?  stackSize  +  2  :  stackSize;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  stackSize  +  2  :  stackSize;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  stackSize  +  2  :  stackSize;	  this.lenient    =    lenient    +    2;    	non-compiled	[CE]  not  a  statement	45	None	replace
714	[BUG]  [BUGGY]  this.lenient  =  lenient?  stackSize  +  2  :  stackSize  +  1;  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient?  stackSize  +  2  :  stackSize  +  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient?  stackSize  +  2  :  stackSize  +  1;	  this.lenient    =    lenient    +    2;    	non-compiled	[CE]  not  a  statement	45	None	replace
715	[BUG]  [BUGGY]  this.lenient  =  lenient  -  2;  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  -  2;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  -  2;	  this.lenient    =    lenient    +    2;    	non-compiled	[CE]  not  a  statement	45	None	replace
716	[BUG]  [BUGGY]  if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(!lenient)  {  this.lenient  =  htmlSafe;  }  else  {  setLenient(false);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    setLenient(false);    }    	non-compiled	[CE]  not  a  statement	118	None	replace
717	[BUG]  [BUGGY]  if(stackSize  ==  getStackSize())  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  }  [CE]  not  a  statement  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  getStackSize())  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  getStackSize())  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  }	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	113	None	replace
718	[BUG]  [BUGGY]  if(values  ==  null)  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  }  [CE]  not  a  statement  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(values  ==  null)  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(values  ==  null)  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  }	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	113	None	replace
719	[BUG]  [BUGGY]  if(stackSize  ==  getStackSize())  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  getStackSize())  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  getStackSize())  {  int[]  stackSize  =  getStackSize();  setLenient(stackSize,  stackSize,  lenient);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	113	None	replace
720	[BUG]  [BUGGY]  int[]  stackSize  =  getStackSize();  if(stackSize  ==  null)  {  setLenient(stackSize,  stackSize,  lenient);  }  [CE]  not  a  statement  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stackSize  =  getStackSize();  if(stackSize  ==  null)  {  setLenient(stackSize,  stackSize,  lenient);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stackSize  =  getStackSize();  if(stackSize  ==  null)  {  setLenient(stackSize,  stackSize,  lenient);  }	  int[]    stackSize    =    getStackSize();    setLenient(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  not  a  statement	113	None	replace
721	[BUG]  [BUGGY]  this.lenient  =  lenient  +  stackSize;  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  stackSize;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  stackSize;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  not  a  statement	66	None	replace
722	[BUG]  [BUGGY]  this.lenient  =  lenient  +  indent;  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  indent;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  indent;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
723	[BUG]  [BUGGY]  this.lenient  =  lenient  +  deferredName;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  deferredName;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  deferredName;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
724	[BUG]  [BUGGY]  this.lenient  =  lenient  +  STRICT_LITERAL;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  STRICT_LITERAL;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  STRICT_LITERAL;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
725	[BUG]  [BUGGY]  this.lenient  =  lenient  +  DEFERRED_NAMES;  [CE]  illegal  start  of  expression  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  DEFERRED_NAMES;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  DEFERRED_NAMES;	  this.lenient    =    TYPE_LITERAL    +    separator;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
726	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  data.length  >  1;  [CE]  illegal  start  of  expression  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  data.length  >  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  data.length  >  1;	  this.lenient    =    lenient    ||    values.length    >    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
727	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  +  values.length;  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  +  values.length;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  +  values.length;	  this.lenient    =    lenient    ||    values.length;    	non-compiled	[CE]  not  a  statement	37	None	replace
728	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize);	  this.lenient    =    lenient    ||    values.length;    	non-compiled	[CE]  	37	None	replace
729	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  <  2?  values[stackSize()  ]  :  values[stackSize()  ];  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  <  2?  values[stackSize()  ]  :  values[stackSize()  ];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  <  2?  values[stackSize()  ]  :  values[stackSize()  ];	  this.lenient    =    generateNulls;    	non-compiled	[CE]  not  a  statement	18	None	replace
730	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  <  2?  values[stackSize()  ]  :  values[stackSize()  -  1];  [CE]  not  a  statement  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  <  2?  values[stackSize()  ]  :  values[stackSize()  -  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  <  2?  values[stackSize()  ]  :  values[stackSize()  -  1];	  this.lenient    =    generateNulls;    	non-compiled	[CE]  not  a  statement	18	None	replace
731	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  values.length  <  2?  values[stackSize()  ]  :  values[stackSize()  -  stackSize());  [CE]  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  values.length  <  2?  values[stackSize()  ]  :  values[stackSize()  -  stackSize());  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  values.length  <  2?  values[stackSize()  ]  :  values[stackSize()  -  stackSize());	  this.lenient    =    generateNulls;    	non-compiled	[CE]  	18	None	replace
732	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  *  1];  [CE]  not  a  statement  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  *  1];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  :  values[stackSize  *  1];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0]    :    values[stackSize    +    1];    	non-compiled	[CE]  not  a  statement	124	None	replace
733	[BUG]  [BUGGY]  this.lenient  =  lenient  >  0  &&  values.length  ==  0;  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  >  0  &&  values.length  ==  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  >  0  &&  values.length  ==  0;	  this.lenient    =    lenient    &&    values.length    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
734	[BUG]  [BUGGY]  this.lenient  =  lenient  +  values.length  ==  0;  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  +  values.length  ==  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  +  values.length  ==  0;	  this.lenient    =    lenient    &&    values.length    ==    0;    	non-compiled	[CE]  not  a  statement	28	None	replace
735	[BUG]  [BUGGY]  this.lenient  =  lenient  <  >  &&  values.length  ==  0;  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  >  &&  values.length  ==  0;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  >  &&  values.length  ==  0;	  this.lenient    =    lenient    &&    values.length    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
736	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  stackSize]  :  values[stackSize];  [CE]  :  expected  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[0]  +  stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[0    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  :  expected	126	None	replace
737	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	throw  new  IllegalArgumentException( " ");	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	108	None	replace
738	[BUG]  [BUGGY]  while(stackSize  <  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  while(stackSize  <  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	while(stackSize  <  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	108	None	replace
739	[BUG]  [BUGGY]  if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize  ==  lenient)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	108	None	replace
740	[BUG]  [BUGGY]  Set  <  String>  deferredName  =  values.get(0);  setLenient(deferredName,  null);  [CE]  [FE]                        java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  Set  <  String>  deferredName  =  values.get(0);  setLenient(deferredName,  null);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	Set  <  String>  deferredName  =  values.get(0);  setLenient(deferredName,  null);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    null);    	non-compiled	[CE]  	39	None	replace
741	[BUG]  [BUGGY]  char  deferredName  =  values.get(0);  setLenient(deferredName,  null);  [CE]  [FE]                          java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  char  deferredName  =  values.get(0);  setLenient(deferredName,  null);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	char  deferredName  =  values.get(0);  setLenient(deferredName,  null);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    null);    	non-compiled	[CE]  	39	None	replace
742	[BUG]  [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(stackSize!=  lenient)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  	112	None	replace
743	[BUG]  [BUGGY]  if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [CE]  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(separator!=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  stackSize  =  stackSize;  }	  if(stackSize    ==    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    stackSize    =    stackSize;    }    	non-compiled	[CE]  	112	None	replace
744	[BUG]  [BUGGY]  setLenient(deferredName,  lenient);  [CE]  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  setLenient(deferredName,  lenient);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	setLenient(deferredName,  lenient);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    indent);    	non-compiled	[CE]  	41	None	replace
745	[BUG]  [BUGGY]  Object  deferredName  =  values.get(0);  setLenient(deferredName,  indent);  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  Object  deferredName  =  values.get(0);  setLenient(deferredName,  indent);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	Object  deferredName  =  values.get(0);  setLenient(deferredName,  indent);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    indent);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
746	[BUG]  [BUGGY]  this.lenient  =  lenient  <  <  8;  [CE]  illegal  start  of  type  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  <  8;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  <  8;	  this.lenient    =    lenient    <    <    1;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
747	[BUG]  [BUGGY]  this.lenient  =  lenient  >>  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  >>  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  >>  1;	  this.lenient    =    lenient    <    <    1;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
748	[BUG]  [BUGGY]  int[]  stack  =  getStackValues();  if(stack!=  null)  {  out.write(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackValues();  if(stack!=  null)  {  out.write(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackValues();  if(stack!=  null)  {  out.write(stack,  0,  stackSize);  }	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
749	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  out.write(stack,  0,  stackSize);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  out.write(stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  out.write(stack,  0,  stackSize);	  int[]    stack    =    getStackSize();    if(stack!=    null)    {    out.write(stack,    0,    stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
750	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.separatorCharAt(values.length);  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.separatorCharAt(values.length);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.separatorCharAt(values.length);	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
751	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.separatorEquals(values.length);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.separatorEquals(values.length);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.separatorEquals(values.length);	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
752	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values.length,  stackSize);  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.equals(values.length,  stackSize);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.equals(values.length,  stackSize);	  this.lenient    =    lenient    ||    htmlSafe.equals(values.length);    	non-compiled	[CE]  not  a  statement	107	None	replace
753	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[1  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[1  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[1  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	11	None	replace
754	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[2  +  stackSize]  :  values[0];  [CE]  not  a  statement  [FE]                              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[2  +  stackSize]  :  values[0];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[2  +  stackSize]  :  values[0];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[1    +    stackSize]    :    values[0];    	non-compiled	[CE]  not  a  statement	11	None	replace
755	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  stackSize]  :  values[stackSize];  [CE]  not  a  statement  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >=  2?  values[size  +  stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  not  a  statement	97	None	replace
756	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  31]  :  values[stackSize];  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  31]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[size  +  31]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
757	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[size  +  stackSize]  :  values[stackSize];  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  >  2?  values[size  +  stackSize]  :  values[stackSize];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  >  2?  values[size  +  stackSize]  :  values[stackSize];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[size    +    stackSize]    :    values[stackSize];    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
758	[BUG]  [BUGGY]  _serializeNulls(stackSize,  stackSize,  lenient,  deferredName);  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  stackSize,  lenient,  deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  stackSize,  lenient,  deferredName);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
759	[BUG]  [BUGGY]  _serializeNulls(stack,  stackSize,  lenient,  deferredName);  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stack,  stackSize,  lenient,  deferredName);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stack,  stackSize,  lenient,  deferredName);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
760	[BUG]  [BUGGY]  _serializeNulls(stackSize,  stackSize,  lenient,  values);  [CE]  illegal  start  of  expression  [FE]                                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  stackSize,  lenient,  values);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  stackSize,  lenient,  values);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
761	[BUG]  [BUGGY]  _serializeNulls(stackSize,  stackSize,  lenient,  values.length);  [CE]  illegal  start  of  expression  [FE]                                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  _serializeNulls(stackSize,  stackSize,  lenient,  values.length);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	_serializeNulls(stackSize,  stackSize,  lenient,  values.length);	  _serializeNulls(stackSize,    stackSize,    lenient);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
762	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.separatorCharAt(values[0]);  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  htmlSafe.separatorCharAt(values[0]);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  htmlSafe.separatorCharAt(values[0]);	  this.lenient    =    lenient    ||    htmlSafe.equals(values[0]);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
763	[BUG]  [BUGGY]  int[]  stack  =  getStackSize();  if(stack!=  null)  {  setLenient(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int[]  stack  =  getStackSize();  if(stack!=  null)  {  setLenient(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int[]  stack  =  getStackSize();  if(stack!=  null)  {  setLenient(stack,  0,  stackSize);  }	  int[]    stack    =    getStackSize();    setLenient(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
764	[BUG]  [BUGGY]  if(separator!=  null)  {  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]                                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(separator!=  null)  {  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(separator!=  null)  {  int[]  stack  =  getStackSize();  setLenient(stack,  0,  stackSize);  }	  int[]    stack    =    getStackSize();    setLenient(stack,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
765	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize]  :  values[stackSize  *  3];  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize]  :  values[stackSize  *  3];  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  stackSize  <  2?  values[stackSize]  :  values[stackSize  *  3];	  this.lenient    =    lenient    ||    stackSize    <    2?    values[stackSize]    :    values[stackSize    +    3];    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
766	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  data.length  ==  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  data.length  ==  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  data.length  ==  1;	  this.lenient    =    lenient    ||    values.length    ==    1L;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
767	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  attributes.length  ==  1L;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  attributes.length  ==  1L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  attributes.length  ==  1L;	  this.lenient    =    lenient    ||    values.length    ==    1L;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
768	[BUG]  [BUGGY]  this.lenient  =  lenient  ||  currentSize  ==  1L;  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  ||  currentSize  ==  1L;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  ||  currentSize  ==  1L;	  this.lenient    =    lenient    ||    values.length    ==    1L;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
769	[BUG]  [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	if(this.lenient  ==  lenient)  {  this.lenient  =  htmlSafe;  }  else  {  out.write(stackSize);  }	  if(lenient)    {    this.lenient    =    htmlSafe;    }    else    {    out.write(stackSize);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
770	[BUG]  [BUGGY]  this.lenient  =  lenient  <  <  htmlSafe;  [CE]  >  expected  [FE]            java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  <  htmlSafe;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  <  htmlSafe;	  this.lenient    =    lenient    &&    htmlSafe;    	non-compiled	[CE]  >  expected	32	None	replace
771	[BUG]  [BUGGY]  this.lenient  =  lenient  <  <  &&  htmlSafe;  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  <  &&  htmlSafe;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  <  &&  htmlSafe;	  this.lenient    =    lenient    &&    htmlSafe;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
772	[BUG]  [BUGGY]  this.lenient  =  lenient  <  >  &&  htmlSafe;  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  <  >  &&  htmlSafe;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  <  >  &&  htmlSafe;	  this.lenient    =    lenient    &&    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
773	[BUG]  [BUGGY]  this.lenient  =  lenient  }  &&  htmlSafe;  [CE]  [FE]                  java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  }  &&  htmlSafe;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  }  &&  htmlSafe;	  this.lenient    =    lenient    &&    htmlSafe;    	non-compiled	[CE]  	32	None	replace
774	[BUG]  [BUGGY]  this.lenient  =  lenient  [Delete]  &&  htmlSafe;  [CE]  illegal  start  of  expression  [FE]                    java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  [Delete]  &&  htmlSafe;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  [Delete]  &&  htmlSafe;	  this.lenient    =    lenient    &&    htmlSafe;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
775	[BUG]  [BUGGY]  this.lenient  =  lenient  }  &  1;  [CE]  [FE]                java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  }  &  1;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  }  &  1;	  this.lenient    =    lenient    &    1;    	non-compiled	[CE]  	115	None	replace
776	[BUG]  [BUGGY]  int  separator  =(int)values.get(0);  setLenient(deferredName,  true);  [CE]  illegal  start  of  expression  [FE]                      java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  int  separator  =(int)values.get(0);  setLenient(deferredName,  true);  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	int  separator  =(int)values.get(0);  setLenient(deferredName,  true);	  String    deferredName    =(String)values.get(0);    setLenient(deferredName,    true);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
777	[BUG]  [BUGGY]  this.lenient  =  lenient  [Delete]  null?  values[0].lenient  :  values[1].lenient;  [CE]  [FE]              java.lang.IllegalArgumentException:  Numeric  values  must  be  finite      [CONTEXT]      public  final  void  setLenient(boolean  lenient)  {      [BUGGY]  this.lenient  =  lenient  [Delete]  null?  values[0].lenient  :  values[1].lenient;  [BUGGY]      }  [CLASS]  JsonWriter  [METHOD]  setLenient  [RETURN_TYPE]  void  boolean  lenient  [VARIABLES]  boolean  htmlSafe  lenient  serializeNulls  int[]  stack  String[]  HTML_SAFE_REPLACEMENT_CHARS  REPLACEMENT_CHARS  String  deferredName  indent  separator  Writer  out  int  stackSize  	projects/Gson15/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	235	235	1	replace	this.lenient  =  lenient  [Delete]  null?  values[0].lenient  :  values[1].lenient;	  this.lenient    =    lenient    >>    null?    values[0].lenient    :    values[1].lenient;    	non-compiled	[CE]  	125	None	replace
