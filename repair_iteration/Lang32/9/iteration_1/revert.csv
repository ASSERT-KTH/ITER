projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getDeclaredFields();AccessibleObject.setAccessible(fields,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getDeclaredFields();AccessibleObject.setAccessible(fields,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getDeclaredFields();AccessibleObject.setAccessible(fields,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getDeclaredFields();AccessibleObject.setAccessible(fields,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Object[]fields=clazz.getDeclaredFields();AccessibleObject.setAccessible(fields,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(object,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getFieldValues();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=field.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getDeclaredFields(excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(fields,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(field,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getSuperclassFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(field,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(fields,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')!=-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Object[]fields=clazz.getDeclaredFields();AccessibleObject.setAccessible(fields,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fields=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();String[]fieldValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getDeclaredFields(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getAccessibleFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))if(!ObjectUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getSuperclassValues();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=class.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getSuperclasses();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldValues=class.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers()))
