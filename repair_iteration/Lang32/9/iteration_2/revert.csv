projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getDeclaredFields();AccessibleObject.setAccessible(fields,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getDeclaredFields();AccessibleObject.setAccessible(fields,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getDeclaredFields();AccessibleObject.setAccessible(fields,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getDeclaredFields();AccessibleObject.setAccessible(fields,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Object[]fields=clazz.getDeclaredFields();AccessibleObject.setAccessible(fields,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(object,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getFieldValues();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=field.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getDeclaredFields(excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(fields,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(field,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getSuperclassFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(field,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(fields,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')!=-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Object[]fields=clazz.getDeclaredFields();AccessibleObject.setAccessible(fields,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fields=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();String[]fieldValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getDeclaredFields(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getAccessibleFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))if(!ObjectUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getSuperclassValues();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=class.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getSuperclasses();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldValues=class.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(field,false,field.getModifiers());
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(field,false,field.getName());
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getSuperclasses();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=object.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getName().indexOf('$')==-1){if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getName().indexOf('$')==-1){if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')!=-1)&&useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&usedTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())If(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181String[]fieldValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Object[]fieldValues=clazz.getDeclaredFields();String[]fieldValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getName().indexOf('$')==-1){if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')!=-1)&&
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getDeclaredFields(excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getDeclaredFields(excludeFields,useTransients);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getDeclaredFields(excludeFields,builder);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getSuperclassFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getFields(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getSuperclassFields(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getFieldValues(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields(field.getName());
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldsValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldsValues=clazz.getFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldsValues=clazz.getTypedFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getName().indexOf('$')==-1){if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();String[]fieldValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=field.getValues();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=field.get(object);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(object,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')!=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>>-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(fieldValue,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=class.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFieldValues();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setField(field,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setInstance(field,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))&&(!
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getSuperclassValues(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181fieldValues=clazz.getDeclaredFields();Field[]fields=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181String[]fields=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Object[]fields=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')!=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName(),field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(fields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Object[]fieldValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getName().indexOf('$')==-1){if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ObjectUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=class.getDeclaredFields(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getName()==null||!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=field.getFieldValues();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getName()==null||!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getType()==Token.NAME){if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getType()==Token.FUNCTION){if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(object,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getAccessibleFields(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getDeclaredFields(iConstant);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getType()==Token.NAME){if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getName()!=null){if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields(field,builder);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();Object[]fieldValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Object[]fieldValues=clazz.getDeclaredFields();Field[]fields=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getName()==null||!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers())if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getSuperclasses(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(field);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(object,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getDeclaredFields(field.getName());
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Class<?>[]fieldValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getName().indexOf('$')==-1){ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(field,false,true);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();Class<?>fieldValues=clazz.getDeclaredFields();Field[]fieldsValues=clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181AccessibleObject.setAccessible(field,true,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=(class<?>)clazz.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=clazz.getDeclaredFields(field,iConstant);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isStatic(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getDeclaredFields(field,iConstant);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers())
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName(),field.getName())&&(field.getName().indexOf('$')==-1)&&useTransients||!Modifier.isTransient(field.getModifiers())){
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field.getName(),field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers())))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=excludeFields.getDeclaredFields();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=clazz.getSuperClassValues();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fields=field.getReferences();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(field.getName().indexOf('$')==-1){if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')==-1)
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')==-1)&&(useTransients||!Modifier.isTransient(field.getModifiers()))&&
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Object[]fields=field.getDeclaredFields();AccessibleObject.setAccessible(fields,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181Field[]fieldValues=field.getType();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(field,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java181if(!ArrayUtils.contains(excludeFields,field.getName())&&(field.getName().indexOf('$')>=-1)&&(useTransients||!Modifier.isStatic(field.getModifiers()))
