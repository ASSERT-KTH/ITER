bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  Il  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	17	None	add
2	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	17	4	add
4	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	17	4	add
5	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]          IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	17	None	add
6	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  iTotal);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  iTotal);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(this.iConstant);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	2	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	82	1	add
8	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	82	1	add
9	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	82	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	82	1	add
11	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	82	1	add
12	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(value,  REGISTRY);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(value,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(value,  REGISTRY);	          ThreadLocal.getInstance().register(value,    iConstant);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
13	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(value,  value);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(value,  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(value,  value);	          ThreadLocal.getInstance().register(value,    iConstant);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
14	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(value,  INVALID_NONZeroOddNumber);  [CE]  cannot  find  symbol  INVALID_NONZeroOddNumber  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(value,  INVALID_NONZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(value,  INVALID_NONZeroOddNumber);	          ThreadLocal.getInstance().register(value,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  INVALID_NONZeroOddNumber	85	None	replace
15	[BUG]  [BUGGY]  register(new  Object[]  {  value  },  REGISTRY);  [CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  },  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  Object[]  {  value  },  REGISTRY);	  register(new    Object[]    {    value    }    );    	non-compiled	[CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	5	None	replace
16	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value,  null  }  );  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	register(new  Object[]  {  value,  null  }  );	  register(new    Object[]    {    value    }    );    	compilable	  [FE]  StackOverflowError  	5	4	replace
17	[BUG]  [BUGGY]  register(new  Object[]  {  value,  null  }  );  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value,  null  }  );  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  Object[]  {  value,  null  }  );	  register(new    Object[]    {    value    }    );    	compilable	  [FE]  StackOverflowError  	5	4	replace
18	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  iTotal);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(iConstant,    value);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	64	None	replace
19	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(iTotal,  value);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(iTotal,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(iTotal,  value);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(iConstant,    value);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	64	None	replace
20	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  value);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  value);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(iConstant,    value);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	98	1	add
22	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	98	1	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        getRegistry().add(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
24	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().add(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
25	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        getRegistry().add(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	98	4	add
26	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  StackOverflowError  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().add(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	98	4	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	98	1	add
28	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	98	1	add
29	[BUG]  [BUGGY]  register(new  HashCodeBuilder(iConstant,  value));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  HashCodeBuilder(iConstant,  value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  HashCodeBuilder(iConstant,  value));	  register(new    HashCodeBuilder(value));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	3	None	replace
30	[BUG]  [BUGGY]  register(new  HashCodeBuilder(value),  REGISTRY);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(Object)  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  HashCodeBuilder(value),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  HashCodeBuilder(value),  REGISTRY);	  register(new    HashCodeBuilder(value));    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(Object)	3	None	replace
31	[BUG]  [BUGGY]  register(new  HashCodeBuilder(iTotal,  value));  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  HashCodeBuilder(iTotal,  value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  HashCodeBuilder(iTotal,  value));	  register(new    HashCodeBuilder(value));    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	3	None	replace
32	[BUG]  [BUGGY]  register(new  HashCodeBuilder(value,  iConstant));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  HashCodeBuilder(value,  iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  HashCodeBuilder(value,  iConstant));	  register(new    HashCodeBuilder(value));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	3	None	replace
33	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  INVALID_NONZeroOddNumber);  [CE]  cannot  find  symbol  INVALID_NONZeroOddNumber  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  INVALID_NONZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value),  REGISTRY,  INVALID_NONZeroOddNumber);	  getRegistry().register(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  INVALID_NONZeroOddNumber	53	None	replace
34	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  token);  [CE]  cannot  find  symbol  token  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  token);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value),  REGISTRY,  token);	  getRegistry().register(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  token	53	None	replace
35	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(new  Integer(value));  [CE]  no  suitable  constructor  found  for  Integer(Object)  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(new  Integer(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().register(new  Integer(value));	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(new    Integer(value));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(Object)	63	None	replace
36	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(value),  multiplierNonZeroOddNumber);  [CE]  no  suitable  constructor  found  for  Integer(Object)  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(value),  multiplierNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(value),  multiplierNonZeroOddNumber);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(new    Integer(value));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(Object)	63	None	replace
37	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(iTotal),  value);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(iTotal),  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(iTotal),  value);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(new    Integer(value));    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	63	None	replace
38	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(iTotal,  value));  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(iTotal,  value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(iTotal,  value));	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(new    Integer(value));    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	63	None	replace
39	[BUG]  [BUGGY]  registry.register(new  IDKey(value));  [CE]  cannot  find  symbol  registry  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  registry.register(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	registry.register(new  IDKey(value));	          if(value    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(value    ==    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  cannot  find  symbol  registry	19	None	replace
40	[BUG]  [BUGGY]  validateIdentifiers(value);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  validateIdentifiers(value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	validateIdentifiers(value);	          if(value    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(value    ==    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	95	1	add
42	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	95	1	add
43	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	95	None	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	95	1	add
45	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	95	1	add
46	[BUG]  [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Integer  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(iTotal);	  Integer    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(value);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	62	None	replace
47	[BUG]  [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(initialNonZeroOddNumber,  value);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(initialNonZeroOddNumber,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Integer  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(initialNonZeroOddNumber,  value);	  Integer    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(value);    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	62	None	replace
48	[BUG]  [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().register(initialNonZeroOddNumber,  value);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().register(initialNonZeroOddNumber,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Integer  iConstant  =  getInitialNonZeroOddNumber().register(initialNonZeroOddNumber,  value);	  Integer    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(value);    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	62	None	replace
49	[BUG]  [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(initialNonZeroOddNumber);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(initialNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Integer  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(initialNonZeroOddNumber);	  Integer    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(value);    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	62	None	replace
50	[BUG]  [BUGGY]  register(this.iConstant,  value);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(this.iConstant,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(this.iConstant,  value);	  register(value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	77	None	replace
51	[BUG]  [BUGGY]  register(this.value);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(this.value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(this.value);	  register(value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	77	None	replace
52	[BUG]  [BUGGY]  register(this.iConstant);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(this.iConstant);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(this.iConstant);	  register(value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	77	None	replace
53	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
54	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	26	4	add
55	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	26	4	add
56	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
57	[BUG]  [BUGGY]  register(new  IDKey(value),  REGISTRY,  iConstant);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value),  REGISTRY,  iConstant);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value),  REGISTRY,  iConstant);	  register(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	45	None	replace
58	[BUG]  [BUGGY]  register(new  IDKey(value),  REGISTRY,  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value),  REGISTRY,  iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value),  REGISTRY,  iTotal);	  register(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	45	None	replace
59	[BUG]  [BUGGY]  register(new  IDKey(value,  REGISTRY));  [CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value,  REGISTRY));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value,  REGISTRY));	  register(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;	45	None	replace
60	[BUG]  [BUGGY]  register(new  IDKey(value),  REGISTRY,  value);  [CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]                StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value),  REGISTRY,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value),  REGISTRY,  value);	  register(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	45	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
62	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
63	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistr  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistr  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistr	  	non-compiled	[CE]  ';'  expected	36	None	add
64	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistr  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistr  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistr	  	non-compiled	[CE]  ';'  expected	36	None	add
65	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().re  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().re  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().re	  	non-compiled	[CE]  not  a  statement	36	None	add
66	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
67	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(iConstant));  register(new  IDKey(iConstant));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(iConstant));  register(new  IDKey(iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(iConstant));  register(new  IDKey(iConstant));	  getRegistry().remove(new    IDKey(value));    register(new    IDKey(value));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	33	None	replace
68	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().add(new  IDKey(value));  register(new  IDKey(value));	  getRegistry().remove(new    IDKey(value));    register(new    IDKey(value));    	compilable	  [FE]  StackOverflowError  	33	4	replace
69	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value));  register(new  IDKey(value));	  getRegistry().remove(new    IDKey(value));    register(new    IDKey(value));    	compilable	  [FE]  StackOverflowError  	33	4	replace
70	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(value,  new  IDKey(value));  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(value,  new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(value,  new  IDKey(value));	          if(value    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(value!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
71	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(iConstantNonZeroOddNumber);  [CE]  cannot  find  symbol  iConstantNonZeroOddNumber  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(iConstantNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(iConstantNonZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(initialNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol  iConstantNonZeroOddNumber	8	None	replace
72	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(value);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().register(value);	  int    iConstant    =    getInitialNonZeroOddNumber().toIntValue();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
73	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().toIntValue()  +  1;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().toIntValue()  +  1;  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().toIntValue()  +  1;	  int    iConstant    =    getInitialNonZeroOddNumber().toIntValue();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
74	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(value,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(value,  Integer.MAX_VALUE);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().register(value,  Integer.MAX_VALUE);	  int    iConstant    =    getInitialNonZeroOddNumber().toIntValue();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
75	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value,  REGISTRY,  iTotal));  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value,  REGISTRY,  iTotal));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value,  REGISTRY,  iTotal));	  getRegistry().register(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	46	None	replace
76	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value,  INVALID_KEY,  REGISTRY));  [CE]  cannot  find  symbol  INVALID_KEY  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value,  INVALID_KEY,  REGISTRY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value,  INVALID_KEY,  REGISTRY));	  getRegistry().register(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  cannot  find  symbol  INVALID_KEY	46	None	replace
77	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value,  REGISTRY,  iConstant));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value,  REGISTRY,  iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value,  REGISTRY,  iConstant));	  getRegistry().register(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	46	None	replace
78	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(iConstant,  value,  REGISTRY));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(iConstant,  value,  REGISTRY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(iConstant,  value,  REGISTRY));	  getRegistry().register(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	46	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	compilable	  [FE]  AssertionFailedError  	23	1	replace
80	[BUG]  [BUGGY]  if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	compilable	  [FE]  AssertionFailedError  	23	1	replace
81	[BUG]  [BUGGY]  register(value,  REGISTRY,  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  REGISTRY,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  REGISTRY,  iTotal);	  register(value,    REGISTRY);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	74	None	replace
82	[BUG]  [BUGGY]  register(value,  REGISTRY,  iConstant);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  REGISTRY,  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  REGISTRY,  iConstant);	  register(value,    REGISTRY);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	74	None	replace
83	[BUG]  [BUGGY]  register(value,  iConstant,  REGISTRY);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  iConstant,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  iConstant,  REGISTRY);	  register(value,    REGISTRY);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	74	None	replace
84	[BUG]  [BUGGY]  register(value,  REGISTRY,  1);  [CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  REGISTRY,  1);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  REGISTRY,  1);	  register(value,    REGISTRY);    	non-compiled	[CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	74	None	replace
85	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(iConstant,  value);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(iConstant,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(iConstant,  value);	  ThreadLocal.getInstance().register(value);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	14	None	replace
86	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(reg,  value);  [CE]  cannot  find  symbol  reg  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(reg,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(reg,  value);	  ThreadLocal.getInstance().register(value);    	non-compiled	[CE]  cannot  find  symbol  reg	14	None	replace
87	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().put(new    IDKey(value));    }    	compilable	  [FE]  StackOverflowError  	71	1	replace
88	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().put(new    IDKey(value));    }    	compilable	  [FE]  StackOverflowError  	71	1	replace
89	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().put(new  IDKey(value));  }  }  [CE]  class,  interface,  or  enum  expected  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().put(new  IDKey(value));  }  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().put(new  IDKey(value));  }  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().put(new    IDKey(value));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
90	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(value,  INVALID_NON_ZeroOddNumber);  [CE]  cannot  find  symbol  INVALID_NON_ZeroOddNumber  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(value,  INVALID_NON_ZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(value,  INVALID_NON_ZeroOddNumber);	  ThreadLocal.getInstance().register(value,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  INVALID_NON_ZeroOddNumber	75	None	replace
91	[BUG]  [BUGGY]  registry.add(new  IDKey(value));  [CE]  cannot  find  symbol  registry  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  registry.add(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	registry.add(new  IDKey(value));	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    	non-compiled	[CE]  cannot  find  symbol  registry	29	None	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
93	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
94	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
95	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	15	None	add
96	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
97	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
98	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(iTotal),  REGISTRY);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(iTotal),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(iTotal),  REGISTRY);	  getRegistry().register(new    IDKey(iConstant),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	97	None	replace
99	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value,  REGISTRY),  REGISTRY);  [CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value,  REGISTRY),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value,  REGISTRY),  REGISTRY);	  getRegistry().register(new    IDKey(iConstant),    REGISTRY);    	non-compiled	[CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;	97	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  AssertionFailedError  	90	1	add
101	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  AssertionFailedError  	90	1	add
102	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getregistry().add(new  IDKey(value));  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getregistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getregistry().add(new  IDKey(value));  }	  	non-compiled	[CE]  cannot  find  symbol	90	None	add
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
104	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
105	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
106	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	34	4	add
107	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	34	4	add
108	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().get(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().get(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    getRegistry().get(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
110	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
111	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  value);  [CE]  no  suitable  method  found  for  add(IDKey,ThreadLocal<Set<IDKey>>,Object)  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value),  REGISTRY,  value);	  getRegistry().add(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  no  suitable  method  found  for  add(IDKey,ThreadLocal<Set<IDKey>>,Object)	80	None	replace
112	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  INVALID_NONZeroOddNumber);  [CE]  cannot  find  symbol  INVALID_NONZeroOddNumber  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  INVALID_NONZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value),  REGISTRY,  INVALID_NONZeroOddNumber);	  getRegistry().add(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  INVALID_NONZeroOddNumber	80	None	replace
113	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  token);  [CE]  cannot  find  symbol  token  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  token);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value),  REGISTRY,  token);	  getRegistry().add(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  token	80	None	replace
114	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(this,  REGISTRY);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(this,  REGISTRY);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(this,  REGISTRY);	  ThreadLocal.getInstance().register(this,    value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	12	None	replace
115	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(this,  value,  REGISTRY);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(this,  value,  REGISTRY);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(this,  value,  REGISTRY);	  ThreadLocal.getInstance().register(this,    value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	12	None	replace
116	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(this,  REGISTRY,  value);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(this,  REGISTRY,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(this,  REGISTRY,  value);	  ThreadLocal.getInstance().register(this,    value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	12	None	replace
117	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(this,  value,  iTotal);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(this,  value,  iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(this,  value,  iTotal);	  ThreadLocal.getInstance().register(this,    value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	12	None	replace
118	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  register(new  Object[]  {  value  }  );  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	register(new    Object[]    {    value    }    );    register(new  Object[]  {  value  }  );	  	compilable	  [FE]  StackOverflowError  	4	4	add
119	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  register(new  Object[]  {  value  }  );  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  register(new  Object[]  {  value  }  );  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    register(new  Object[]  {  value  }  );	  	compilable	  [FE]  StackOverflowError  	4	4	add
120	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  StackOverflowError  <  Object>  overflowError  =  new  StackOverflowError();  [CE]  type  StackOverflowError  does  not  take  parameters  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  StackOverflowError  <  Object>  overflowError  =  new  StackOverflowError();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    StackOverflowError  <  Object>  overflowError  =  new  StackOverflowError();	  	non-compiled	[CE]  type  StackOverflowError  does  not  take  parameters	4	None	add
121	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  StackOverflowError  <  Object>  overflowError  =  new  StackOverflowError(value.length);  [CE]  type  StackOverflowError  does  not  take  parameters  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  StackOverflowError  <  Object>  overflowError  =  new  StackOverflowError(value.length);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    StackOverflowError  <  Object>  overflowError  =  new  StackOverflowError(value.length);	  	non-compiled	[CE]  type  StackOverflowError  does  not  take  parameters	4	None	add
122	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  StackOverflowError  <  String>  overflowError  =  new  StackOverflowError(value.length);  [CE]  type  StackOverflowError  does  not  take  parameters  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  StackOverflowError  <  String>  overflowError  =  new  StackOverflowError(value.length);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    StackOverflowError  <  String>  overflowError  =  new  StackOverflowError(value.length);	  	non-compiled	[CE]  type  StackOverflowError  does  not  take  parameters	4	None	add
123	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  StackOverflowError  <  String>  overflowError  =  new  StackOverflowError();  [CE]  type  StackOverflowError  does  not  take  parameters  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  StackOverflowError  <  String>  overflowError  =  new  StackOverflowError();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    StackOverflowError  <  String>  overflowError  =  new  StackOverflowError();	  	non-compiled	[CE]  type  StackOverflowError  does  not  take  parameters	4	None	add
124	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  getInitialNonZeroOddNumber().getIndexedField(value);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  initialNonZeroOddNumber  =  getInitialNonZeroOddNumber().getIndexedField(value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  initialNonZeroOddNumber  =  getInitialNonZeroOddNumber().getIndexedField(value);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(initialNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
125	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber()  *  1;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber()  *  1;  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber()  *  1;	  int    iConstant    =    getInitialNonZeroOddNumber()    -    1;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
126	[BUG]  [BUGGY]  int  iConstant  =  getNonZeroOddNumber()  -  1;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getNonZeroOddNumber()  -  1;  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getNonZeroOddNumber()  -  1;	  int    iConstant    =    getInitialNonZeroOddNumber()    -    1;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
127	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	39	4	replace
128	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	39	4	replace
129	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  StackOverflowError  	39	1	replace
130	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]      IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  StackOverflowError  	39	1	replace
131	[BUG]  [BUGGY]  register(new  IDKey(iTotal));  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(iTotal));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(iTotal));	  [Delete]    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	86	None	replace
132	[BUG]  [BUGGY]  int  iConstant  =  value.getIndex();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  value.getIndex();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  value.getIndex();	  [Delete]    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
133	[BUG]  [BUGGY]  register(new  IDKey(iTotal,  value));  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(iTotal,  value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(iTotal,  value));	  [Delete]    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	86	None	replace
134	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	28	4	add
135	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	28	4	add
136	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
137	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	28	4	add
138	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	28	4	add
139	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  this.register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  this.register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    this.register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	28	None	add
140	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	28	4	add
141	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	28	4	add
142	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value,  iConstant),  REGISTRY);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value,  iConstant),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value,  iConstant),  REGISTRY);	  getRegistry().add(new    IDKey(value,    iTotal),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	41	None	replace
143	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value,  INVALID_NONZeroOddNumber),  REGISTRY);  [CE]  cannot  find  symbol  INVALID_NONZeroOddNumber  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value,  INVALID_NONZeroOddNumber),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value,  INVALID_NONZeroOddNumber),  REGISTRY);	  getRegistry().add(new    IDKey(value,    iTotal),    REGISTRY);    	non-compiled	[CE]  cannot  find  symbol  INVALID_NONZeroOddNumber	41	None	replace
144	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	20	4	add
145	[BUG]  [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  register(new  IDKey(value));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	20	4	add
146	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	20	4	add
147	[BUG]  [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	20	4	add
148	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  register(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	20	4	add
149	[BUG]  [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  register(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  register(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	20	4	add
150	[BUG]  [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  Register(new  IDKey(value));  register(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  Register(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        register(new    IDKey(value));    Register(new  IDKey(value));  register(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
151	[BUG]  [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  validate(new  IDKey(value));  register(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  validate(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        register(new    IDKey(value));    validate(new  IDKey(value));  register(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
152	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	92	4	add
153	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	92	4	add
154	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	92	None	add
155	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(this.initialNonZeroOddNumber,  value);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(this.initialNonZeroOddNumber,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(this.initialNonZeroOddNumber,  value);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(this.initialNonZeroOddNumber);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	84	None	replace
156	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  this.initialNonZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  this.initialNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  this.initialNonZeroOddNumber);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(this.initialNonZeroOddNumber);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	84	None	replace
157	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  iTotal);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(iConstant,    value);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	73	None	replace
158	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(value,  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(value,  iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().register(value,  iTotal);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(iConstant,    value);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	73	None	replace
159	[BUG]  [BUGGY]  register(new  Object[]  {  value,  iTotal  }  ));  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value,  iTotal  }  ));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  Object[]  {  value,  iTotal  }  ));	  register(new    Object[]    {    value    }    ));    	non-compiled	[CE]  ';'  expected	7	None	replace
160	[BUG]  [BUGGY]  register(new  Object[]  {  value,  INVALID_NUMBER  }  ));  [CE]  ';'  expected  [FE]                StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value,  INVALID_NUMBER  }  ));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  Object[]  {  value,  INVALID_NUMBER  }  ));	  register(new    Object[]    {    value    }    ));    	non-compiled	[CE]  ';'  expected	7	None	replace
161	[BUG]  [BUGGY]  register(new  Object[]  {  value  },  REGISTRY));  [CE]  ';'  expected  [FE]                  StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  },  REGISTRY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  Object[]  {  value  },  REGISTRY));	  register(new    Object[]    {    value    }    ));    	non-compiled	[CE]  ';'  expected	7	None	replace
162	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().intValue()  *  1;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().intValue()  *  1;  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().intValue()  *  1;	  int    iConstant    =    getInitialNonZeroOddNumber().intValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
163	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().intValue()  *  1  +  1;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().intValue()  *  1  +  1;  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().intValue()  *  1  +  1;	  int    iConstant    =    getInitialNonZeroOddNumber().intValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
164	[BUG]  [BUGGY]  register(value,  iConstant);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  iConstant);	          register(value,    iTotal);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	10	None	replace
165	[BUG]  [BUGGY]  register(value,  Integer.toString(iConstant));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  Integer.toString(iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  Integer.toString(iConstant));	          register(value,    iTotal);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	10	None	replace
166	[BUG]  [BUGGY]  register(value,  Integer.MAX_VALUE);  [CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  Integer.MAX_VALUE);	          register(value,    iTotal);    	non-compiled	[CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	10	None	replace
167	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().initialNonZeroOddNumber();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().initialNonZeroOddNumber();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().initialNonZeroOddNumber();	  int    iConstant    =    getInitialNonZeroOddNumber()    +    1;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
168	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  register(value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	register(value);    register(value);	  	compilable	  [FE]  StackOverflowError  	76	4	add
169	[BUG]  [BUGGY]  register(value);  register(value);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  register(value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value);    register(value);	  	compilable	  [FE]  StackOverflowError  	76	4	add
170	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  getRegistry().add(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	register(value);    getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	76	4	add
171	[BUG]  [BUGGY]  register(value);  getRegistry().add(new  IDKey(value));  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  getRegistry().add(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value);    getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	76	4	add
172	[BUG]  [BUGGY]  register(value);  if(value  instanceof  IDKey)  {  ((  IDKey)value).setValue(iTotal);  }  else  {  getRegistry().add(new  IDKey(iTotal));  }  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  if(value  instanceof  IDKey)  {  ((  IDKey)value).setValue(iTotal);  }  else  {  getRegistry().add(new  IDKey(iTotal));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value);    if(value  instanceof  IDKey)  {  ((  IDKey)value).setValue(iTotal);  }  else  {  getRegistry().add(new  IDKey(iTotal));  }	  	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	76	None	add
173	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  if(value  instanceof  IDKey)  {  register((  IDKey)value);  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	register(value);    if(value  instanceof  IDKey)  {  register((  IDKey)value);  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	76	4	add
174	[BUG]  [BUGGY]  register(value);  if(value  instanceof  IDKey)  {  register((  IDKey)value);  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  if(value  instanceof  IDKey)  {  register((  IDKey)value);  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value);    if(value  instanceof  IDKey)  {  register((  IDKey)value);  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	76	4	add
175	[BUG]  [BUGGY]  register(value);  if(value  instanceof  IDKey)  {  register((  IDKey)value);  }  else  {  getRegistry().add(new  IDKey(iTotal));  }  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  if(value  instanceof  IDKey)  {  register((  IDKey)value);  }  else  {  getRegistry().add(new  IDKey(iTotal));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value);    if(value  instanceof  IDKey)  {  register((  IDKey)value);  }  else  {  getRegistry().add(new  IDKey(iTotal));  }	  	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	76	None	add
176	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    	compilable	  [FE]  IllegalStateException  	35	4	replace
177	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    	compilable	  [FE]  IllegalStateException  	35	4	replace
178	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(initialNonZeroOddNumber,  value);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(initialNonZeroOddNumber,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().register(initialNonZeroOddNumber,  value);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(value);    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	56	None	replace
179	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	compilable	  [FE]  StackOverflowError  	37	1	replace
180	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	compilable	  [FE]  StackOverflowError  	37	1	replace
181	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	compilable	  [FE]  StackOverflowError  	37	1	replace
182	[BUG]  [BUGGY]  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	compilable	  [FE]  StackOverflowError  	37	1	replace
183	[BUG]  [BUGGY]  register(value,  REGISTRY,  null);  [CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  REGISTRY,  null);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  REGISTRY,  null);	  register(value,    null);    	non-compiled	[CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	6	None	replace
184	[BUG]  [BUGGY]  register(value,  null,  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  null,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  null,  iTotal);	  register(value,    null);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	6	None	replace
185	[BUG]  [BUGGY]  register(value,  null,  iConstant);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]                StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  null,  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  null,  iConstant);	  register(value,    null);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	6	None	replace
186	[BUG]  [BUGGY]  register(value,  null,  REGISTRY);  [CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]                  StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  null,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  null,  REGISTRY);	  register(value,    null);    	non-compiled	[CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	6	None	replace
187	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	compilable	  [FE]  StackOverflowError  	25	1	replace
188	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	compilable	  [FE]  StackOverflowError  	25	1	replace
189	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iConstant,  iTotal);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iConstant,  iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iConstant,  iTotal);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(value,    this.iConstant);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	66	None	replace
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	30	1	add
191	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	30	1	add
192	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getConstant().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getConstant().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getConstant().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
193	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  AssertionFailedError  	30	1	add
194	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  AssertionFailedError  	30	1	add
195	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	30	4	add
196	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [FE]  StackOverflowError  [FE]          AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	30	4	add
197	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().get(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().get(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().get(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
198	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multiplyNonZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multiplyNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multiplyNonZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(this.iConstant,    value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	65	None	replace
199	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multierNonZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multierNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multierNonZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(this.iConstant,    value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	65	None	replace
200	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  value);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  value);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(iTotal,    value);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
201	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  initialNonZeroOddNumber);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  initialNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  initialNonZeroOddNumber);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(iTotal,    value);    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	57	None	replace
202	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  iniConstant);  [CE]  cannot  find  symbol  iniConstant  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  iniConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value),  REGISTRY,  iniConstant);	  getRegistry().add(new    IDKey(value),    REGISTRY,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  iniConstant	40	None	replace
203	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(value),  REGISTRY,  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(value),  REGISTRY,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(value),  REGISTRY,  iTotal);	  getRegistry().remove(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	69	None	replace
204	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(iConstant,  value),  REGISTRY);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(iConstant,  value),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(iConstant,  value),  REGISTRY);	  getRegistry().remove(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	69	None	replace
205	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(value,  iTotal),  REGISTRY);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(value,  iTotal),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(value,  iTotal),  REGISTRY);	  getRegistry().remove(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	69	None	replace
206	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(iTotal),  REGISTRY);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(iTotal),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(iTotal),  REGISTRY);	  getRegistry().remove(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	69	None	replace
207	[BUG]  [BUGGY]  register(new  IDKey(value),  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value),  iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value),  iTotal);	  register(new    IDKey(value),    iConstant);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	70	None	replace
208	[BUG]  [BUGGY]  register(new  IDKey(value),  this.iTotal);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value),  this.iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value),  this.iTotal);	  register(new    IDKey(value),    iConstant);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	70	None	replace
209	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().iTotal  +  1;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().iTotal  +  1;  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().iTotal  +  1;	  int    iConstant    =    getInitialNonZeroOddNumber().iTotal;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
210	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
211	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	22	4	add
212	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	22	4	add
213	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  }	  	compilable	  [FE]  StackOverflowError  	22	4	add
214	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  }	  	compilable	  [FE]  StackOverflowError  	22	4	add
215	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
216	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	22	4	add
217	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	22	4	add
218	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  iTotal,  REGISTRY);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value),  iTotal,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value),  iTotal,  REGISTRY);	  getRegistry().register(new    IDKey(value),    iConstant,    REGISTRY);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	55	None	replace
219	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  value,  REGISTRY);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value),  value,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value),  value,  REGISTRY);	  getRegistry().register(new    IDKey(value),    iConstant,    REGISTRY);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
220	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  NONZeroOddNumber,  REGISTRY);  [CE]  cannot  find  symbol  NONZeroOddNumber  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value),  NONZeroOddNumber,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value),  NONZeroOddNumber,  REGISTRY);	  getRegistry().register(new    IDKey(value),    iConstant,    REGISTRY);    	non-compiled	[CE]  cannot  find  symbol  NONZeroOddNumber	55	None	replace
221	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iTotal);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iTotal);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(value,    iConstant);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	67	None	replace
222	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.initialNonZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.initialNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.initialNonZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(value,    iConstant);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	67	None	replace
223	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(value,  null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(value,  null);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(value,  null);	  ThreadLocal.getInstance().register(value,    this);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
224	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(value,  this,  REGISTRY);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(value,  this,  REGISTRY);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(value,  this,  REGISTRY);	  ThreadLocal.getInstance().register(value,    this);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	13	None	replace
225	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().iTotalValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().iTotalValue();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().iTotalValue();	  int    iConstant    =    getInitialNonZeroOddNumber().longValue();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
226	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().toString();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().toString();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().toString();	  int    iConstant    =    getInitialNonZeroOddNumber().longValue();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
227	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	32	4	add
228	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	32	4	add
229	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	32	4	add
230	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	32	4	add
231	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        register(new    IDKey(value));    register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	32	4	add
232	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        register(new    IDKey(value));    register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	32	4	add
233	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  add(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  add(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
234	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value.getClass()));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	register(new  IDKey(value.getClass()));	  read();    	compilable	  [FE]  StackOverflowError  	87	4	replace
235	[BUG]  [BUGGY]  register(new  IDKey(value.getClass()));  [FE]  StackOverflowError  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value.getClass()));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value.getClass()));	  read();    	compilable	  [FE]  StackOverflowError  	87	4	replace
236	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(iTotal,  value));  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(iTotal,  value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(iTotal,  value));	  getRegistry().register(new    IDKey(iConstant,    value));    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	47	None	replace
237	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value,  iTotal));  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value,  iTotal));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value,  iTotal));	  getRegistry().register(new    IDKey(iConstant,    value));    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	47	None	replace
238	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value,  value));  [CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value,  value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value,  value));	  getRegistry().register(new    IDKey(iConstant,    value));    	non-compiled	[CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;	47	None	replace
239	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value,  REGISTRY,  iTotal));  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value,  REGISTRY,  iTotal));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value,  REGISTRY,  iTotal));	  getRegistry().add(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	43	None	replace
240	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value,  REGISTRY,  iConstant));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value,  REGISTRY,  iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value,  REGISTRY,  iConstant));	  getRegistry().add(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	43	None	replace
241	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value,  iConstant,  REGISTRY));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]                        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value,  iConstant,  REGISTRY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value,  iConstant,  REGISTRY));	  getRegistry().add(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	43	None	replace
242	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value,  INVALID_KEY,  REGISTRY));  [CE]  cannot  find  symbol  INVALID_KEY  [FE]                          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value,  INVALID_KEY,  REGISTRY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value,  INVALID_KEY,  REGISTRY));	  getRegistry().add(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  cannot  find  symbol  INVALID_KEY	43	None	replace
243	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
244	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	24	4	add
245	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	24	4	add
246	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
247	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
248	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	24	4	add
249	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	24	4	add
250	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  iTotal,  REGISTRY);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value),  iTotal,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value),  iTotal,  REGISTRY);	  getRegistry().add(new    IDKey(value),    iConstant,    REGISTRY);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	81	None	replace
251	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  value,  REGISTRY);  [CE]  no  suitable  method  found  for  add(IDKey,Object,ThreadLocal<Set<IDKey>>)  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value),  value,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value),  value,  REGISTRY);	  getRegistry().add(new    IDKey(value),    iConstant,    REGISTRY);    	non-compiled	[CE]  no  suitable  method  found  for  add(IDKey,Object,ThreadLocal<Set<IDKey>>)	81	None	replace
252	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  INVALID_NONZeroOddNumber,  REGISTRY);  [CE]  cannot  find  symbol  INVALID_NONZeroOddNumber  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value),  INVALID_NONZeroOddNumber,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value),  INVALID_NONZeroOddNumber,  REGISTRY);	  getRegistry().add(new    IDKey(value),    iConstant,    REGISTRY);    	non-compiled	[CE]  cannot  find  symbol  INVALID_NONZeroOddNumber	81	None	replace
253	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  value.getInstance();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  value.getInstance();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  value.getInstance();	  ThreadLocal    REGISTRY    =    threadLocal.getInstance();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
254	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  iConstant.getInstance();  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  iConstant.getInstance();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  iConstant.getInstance();	  ThreadLocal    REGISTRY    =    threadLocal.getInstance();    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	1	None	replace
255	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  this.symbol.getInstance();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  this.symbol.getInstance();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  this.symbol.getInstance();	  ThreadLocal    REGISTRY    =    threadLocal.getInstance();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	1	None	replace
256	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	38	4	add
257	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	38	4	add
258	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  IllegalArgumentException  	38	4	add
259	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  IllegalArgumentException  	38	4	add
260	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
261	[BUG]  [BUGGY]  Register(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Register(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Register(new  IDKey(value));	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
262	[BUG]  [BUGGY]  register(new  IDKey(value));  }  [CE]  class,  interface,  or  enum  expected  [FE]      IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value));  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
263	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  Number)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  Number)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	27	4	replace
264	[BUG]  [BUGGY]  if(value  instanceof  Number)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  Number)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  Number)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	27	4	replace
265	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(new  IDKey(value),  REGISTRY);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(new  IDKey(value),  REGISTRY);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(new  IDKey(value),  REGISTRY);	  ThreadLocal.getInstance().register(new    IDKey(value));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
266	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(new  IDKey(value,  REGISTRY));  [CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(new  IDKey(value,  REGISTRY));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(new  IDKey(value,  REGISTRY));	  ThreadLocal.getInstance().register(new    IDKey(value));    	non-compiled	[CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;	11	None	replace
267	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(new  IDKey(iConstant,  value));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(new  IDKey(iConstant,  value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(new  IDKey(iConstant,  value));	  ThreadLocal.getInstance().register(new    IDKey(value));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	11	None	replace
268	[BUG]  [BUGGY]  register(new  IDKey(value),  value,  REGISTRY);  [CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value),  value,  REGISTRY);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value),  value,  REGISTRY);	  register(new    IDKey(value),    value);    	non-compiled	[CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	44	None	replace
269	[BUG]  [BUGGY]  register(new  IDKey(value),  value,  iConstant);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value),  value,  iConstant);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value),  value,  iConstant);	  register(new    IDKey(value),    value);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	44	None	replace
270	[BUG]  [BUGGY]  Registers.checkState(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Registers.checkState(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Registers.checkState(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  ';'  expected	91	None	replace
271	[BUG]  [BUGGY]  Registers.checkState(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Registers.checkState(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Registers.checkState(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  ';'  expected	91	None	replace
272	[BUG]  [BUGGY]  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
273	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(iConstant,  value),  value);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(iConstant,  value),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(iConstant,  value),  value);	  getRegistry().remove(new    IDKey(value),    value);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	51	None	replace
274	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(iTotal,  value),  value);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(iTotal,  value),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(iTotal,  value),  value);	  getRegistry().remove(new    IDKey(value),    value);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	51	None	replace
275	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(iTotal),  value);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(iTotal),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(iTotal),  value);	  getRegistry().remove(new    IDKey(value),    value);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	51	None	replace
276	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(iTotal,  value),  REGISTRY);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(iTotal,  value),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(iTotal,  value),  REGISTRY);	  getRegistry().add(new    IDKey(iConstant,    value),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	42	None	replace
277	[BUG]  [BUGGY]  register(new  IDKey(value));  }  else  {  getRegistry().put(new  IDKey(value));  }  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value));  }  else  {  getRegistry().put(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value));  }  else  {  getRegistry().put(new  IDKey(value));  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().put(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
278	[BUG]  [BUGGY]  Register(new  IDKey(value));  }  else  {  getRegistry().put(new  IDKey(value));  }  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Register(new  IDKey(value));  }  else  {  getRegistry().put(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Register(new  IDKey(value));  }  else  {  getRegistry().put(new  IDKey(value));  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().put(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
279	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(iConstant,  value),  REGISTRY,  value);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(iConstant,  value),  REGISTRY,  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(iConstant,  value),  REGISTRY,  value);	  getRegistry().register(new    IDKey(value),    REGISTRY,    value);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	54	None	replace
280	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  INVALID_KEY);  [CE]  cannot  find  symbol  INVALID_KEY  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  INVALID_KEY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value),  REGISTRY,  INVALID_KEY);	  getRegistry().register(new    IDKey(value),    REGISTRY,    value);    	non-compiled	[CE]  cannot  find  symbol  INVALID_KEY	54	None	replace
281	[BUG]  [BUGGY]  validate(value,  REGISTRY);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  validate(value,  REGISTRY);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	validate(value,  REGISTRY);	  validate(value);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
282	[BUG]  [BUGGY]  validate(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  validate(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	validate(new  IDKey(value));	  validate(value);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
283	[BUG]  [BUGGY]  validate(value,  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  validate(value,  iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	validate(value,  iTotal);	  validate(value);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	78	None	replace
284	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getItemCount()  -  1;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getItemCount()  -  1;  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getItemCount()  -  1;	  int    iConstant    =    getInitialNonZeroOddNumber().getItemCount();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
285	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getItemCount()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getItemCount()  +  1;  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getItemCount()  +  1;	  int    iConstant    =    getInitialNonZeroOddNumber().getItemCount();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
286	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value,  INVALID_NONZeroOddNumber));  [CE]  cannot  find  symbol  INVALID_NONZeroOddNumber  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value,  INVALID_NONZeroOddNumber));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value,  INVALID_NONZeroOddNumber));	  getRegistry().register(new    IDKey(value,    iConstant));    	non-compiled	[CE]  cannot  find  symbol  INVALID_NONZeroOddNumber	88	None	replace
287	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	compilable	  [FE]  StackOverflowError  	99	1	replace
288	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	compilable	  [FE]  StackOverflowError  	99	1	replace
289	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  getRegistry().remove(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	compilable	  [FE]  IllegalArgumentException  	99	4	replace
290	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  getRegistry().remove(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	compilable	  [FE]  IllegalArgumentException  	99	4	replace
291	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }	  getRegistry().remove(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	compilable	  [FE]  IllegalStateException  	99	4	replace
292	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }	  getRegistry().remove(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	compilable	  [FE]  IllegalStateException  	99	4	replace
293	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(iConstant,  this.iTotal);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(iConstant,  this.iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(iConstant,  this.iTotal);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(this.iTotal);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	48	None	replace
294	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  this.iTotal);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  this.iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  this.iTotal);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(this.iTotal);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	48	None	replace
295	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iTotal,  value);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iTotal,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iTotal,  value);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(this.iTotal);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	48	None	replace
296	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  iniConstant);  [CE]  cannot  find  symbol  iniConstant  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  iniConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value),  REGISTRY,  iniConstant);	  getRegistry().register(new    IDKey(value),    REGISTRY,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  iniConstant	52	None	replace
297	[BUG]  [BUGGY]  register(new  IDKey(value),  iConstant,  REGISTRY);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value),  iConstant,  REGISTRY);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value),  iConstant,  REGISTRY);	  register(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	45	None	replace
298	[BUG]  [BUGGY]  registry.register(value);  [CE]  cannot  find  symbol  registry  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  registry.register(value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	registry.register(value);	          if(value    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(value    ==    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  cannot  find  symbol  registry	19	None	replace
299	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
300	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().size();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().size();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().size();	  int    iConstant    =    getInitialNonZeroOddNumber()    +    1;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
301	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().iConstant;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().iConstant;  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().iConstant;	  int    iConstant    =    getInitialNonZeroOddNumber()    +    1;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
302	[BUG]  [BUGGY]  register(new  Object[]  {  value,  iTotal  }  );  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value,  iTotal  }  );  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  Object[]  {  value,  iTotal  }  );	  register(new    Object[]    {    value    }    );    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	5	None	replace
303	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(value),  INVALID_NUMBER_INDEX);  [CE]  no  suitable  constructor  found  for  Integer(Object)  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(value),  INVALID_NUMBER_INDEX);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(value),  INVALID_NUMBER_INDEX);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(new    Integer(value));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(Object)	63	None	replace
304	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(value),  this.multiplyNonZeroOddNumber);  [CE]  no  suitable  constructor  found  for  Integer(Object)  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(value),  this.multiplyNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(value),  this.multiplyNonZeroOddNumber);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(new    Integer(value));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(Object)	63	None	replace
305	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multipleNonZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multipleNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multipleNonZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(this.iConstant,    value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	65	None	replace
306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  String)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  String)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	compilable	  [FE]  AssertionFailedError  	25	1	replace
307	[BUG]  [BUGGY]  if(value  instanceof  String)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  String)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  String)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	compilable	  [FE]  AssertionFailedError  	25	1	replace
308	[BUG]  [BUGGY]  register(value,  new  HashCodeBuilder());  [CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  new  HashCodeBuilder());  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  new  HashCodeBuilder());	          if(value    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(value    ==    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	83	None	replace
309	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
310	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getregistry().add(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getregistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getregistry().add(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
311	[BUG]  [BUGGY]  Registers.register(value,  new  IDKey(value));  [CE]  cannot  find  symbol  Registers  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Registers.register(value,  new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Registers.register(value,  new  IDKey(value));	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  Registers	93	None	replace
312	[BUG]  [BUGGY]  Registers.register(new  IDKey(value));  [CE]  cannot  find  symbol  Registers  [FE]      IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Registers.register(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Registers.register(new  IDKey(value));	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  Registers	93	None	replace
313	[BUG]  [BUGGY]  Registers.checkState(value  instanceof  IDKey);  [CE]  cannot  find  symbol  Registers  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Registers.checkState(value  instanceof  IDKey);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Registers.checkState(value  instanceof  IDKey);	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  cannot  find  symbol  Registers	91	None	replace
314	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  input);  [CE]  cannot  find  symbol  input  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  input);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  input);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(iTotal,    value);    	non-compiled	[CE]  cannot  find  symbol  input	57	None	replace
315	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	compilable	  [FE]  AssertionFailedError  	23	1	replace
316	[BUG]  [BUGGY]  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	compilable	  [FE]  AssertionFailedError  	23	1	replace
317	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
318	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
319	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistr  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistr  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistr	  	non-compiled	[CE]  ';'  expected	36	None	add
320	[BUG]  [BUGGY]  register(new  Object[]  {  value  ==  0));  [CE]  '}'  expected  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  ==  0));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  Object[]  {  value  ==  0));	  register(new    Object[]    {    value    }    ));    	non-compiled	[CE]  '}'  expected	7	None	replace
321	[BUG]  [BUGGY]  register(new  Object[]  {  value!=  0));  [CE]  '}'  expected  [FE]                StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value!=  0));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  Object[]  {  value!=  0));	  register(new    Object[]    {    value    }    ));    	non-compiled	[CE]  '}'  expected	7	None	replace
322	[BUG]  [BUGGY]  validate(new  Object[]  {  value  }  ));  [CE]  ';'  expected  [FE]                  StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  validate(new  Object[]  {  value  }  ));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	validate(new  Object[]  {  value  }  ));	  register(new    Object[]    {    value    }    ));    	non-compiled	[CE]  ';'  expected	7	None	replace
323	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	27	4	replace
324	[BUG]  [BUGGY]  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	27	4	replace
325	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
326	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
327	[BUG]  [BUGGY]  safeName();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  safeName();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	safeName();	  safeTwin();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
328	[BUG]  [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().register(value,  false);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().register(value,  false);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Integer  iConstant  =  getInitialNonZeroOddNumber().register(value,  false);	  Integer    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(value);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
329	[BUG]  [BUGGY]  validate(value,  iConstant);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  validate(value,  iConstant);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	validate(value,  iConstant);	  validate(value);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	78	None	replace
330	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(value,  false);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(value,  false);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().register(value,  false);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(value);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
331	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(value,  true);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(value,  true);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().register(value,  true);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(value);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
332	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(this.multiplyNonZeroOddNumber,  value);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(this.multiplyNonZeroOddNumber,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(this.multiplyNonZeroOddNumber,  value);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(initialNonZeroOddNumber,    value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	58	None	replace
333	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  ==  null)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  ==  null)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    register(new    IDKey(value));    	compilable	  [FE]  AssertionFailedError  	21	1	replace
334	[BUG]  [BUGGY]  if(value  ==  null)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  ==  null)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  ==  null)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    register(new    IDKey(value));    	compilable	  [FE]  AssertionFailedError  	21	1	replace
335	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  this.multiplyNonZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  this.multiplyNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  this.multiplyNonZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(this.iConstant);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	2	None	replace
336	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().intValue()  /  1;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().intValue()  /  1;  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().intValue()  /  1;	  int    iConstant    =    getInitialNonZeroOddNumber().intValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
337	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(multiplyerNonZeroOddNumber);  [CE]  cannot  find  symbol  multiplyerNonZeroOddNumber  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(multiplyerNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(multiplyerNonZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(initialNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol  multiplyerNonZeroOddNumber	8	None	replace
338	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	39	4	replace
339	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	39	4	replace
340	[BUG]  [BUGGY]  register(value,  INVALID_NON_ZeroOddNumber);  [CE]  cannot  find  symbol  INVALID_NON_ZeroOddNumber  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  INVALID_NON_ZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  INVALID_NON_ZeroOddNumber);	          register(value,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  INVALID_NON_ZeroOddNumber	10	None	replace
341	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  StackOverflowError  <  0;  }  else  {  register(new  Object[]  {  value  }  );  }  [CE]  illegal  start  of  type  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  StackOverflowError  <  0;  }  else  {  register(new  Object[]  {  value  }  );  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    if(value!=  null)  {  StackOverflowError  <  0;  }  else  {  register(new  Object[]  {  value  }  );  }	  	non-compiled	[CE]  illegal  start  of  type	4	None	add
342	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  StackOverflowError  <  Object>  overflowError  =  new  StackOverflowError();  register(overflowError);  }  [CE]  type  StackOverflowError  does  not  take  parameters  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  StackOverflowError  <  Object>  overflowError  =  new  StackOverflowError();  register(overflowError);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    if(value!=  null)  {  StackOverflowError  <  Object>  overflowError  =  new  StackOverflowError();  register(overflowError);  }	  	non-compiled	[CE]  type  StackOverflowError  does  not  take  parameters	4	None	add
343	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  validate(new  Object[]  {  value  }  );  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  validate(new  Object[]  {  value  }  );  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    validate(new  Object[]  {  value  }  );	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
344	[BUG]  [BUGGY]  register(value,  false);  [CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  false);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  false);	          if(value    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(value    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	16	None	replace
345	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  INITIALIZER_NONZeroOddNumber);  [CE]  cannot  find  symbol  INITIALIZER_NONZeroOddNumber  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  INITIALIZER_NONZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value),  REGISTRY,  INITIALIZER_NONZeroOddNumber);	  getRegistry().register(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  INITIALIZER_NONZeroOddNumber	53	None	replace
346	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	17	4	add
347	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	17	4	add
348	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().multiplyNonZeroOddNumber().toIntValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().multiplyNonZeroOddNumber().toIntValue();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().multiplyNonZeroOddNumber().toIntValue();	  int    iConstant    =    getInitialNonZeroOddNumber().toIntValue();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
349	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().multiplyNonZeroOddNumber();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().multiplyNonZeroOddNumber();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().multiplyNonZeroOddNumber();	  int    iConstant    =    getInitialNonZeroOddNumber().toIntValue();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
350	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().valueToIntValue();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().valueToIntValue();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().valueToIntValue();	  int    iConstant    =    getInitialNonZeroOddNumber().toIntValue();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
351	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  register(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  register(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new    IDKey(value));    	compilable	  [FE]  StackOverflowError  	31	1	replace
352	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  register(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  register(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  register(new  IDKey(value));  }	  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new    IDKey(value));    	compilable	  [FE]  StackOverflowError  	31	1	replace
353	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	95	None	add
354	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException(  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException(  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException(	  	non-compiled	[CE]  ')'  expected	95	None	add
355	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(key),  REGISTRY);  [CE]  cannot  find  symbol  key  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(key),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(key),  REGISTRY);	  getRegistry().register(new    IDKey(iConstant),    REGISTRY);    	non-compiled	[CE]  cannot  find  symbol  key	97	None	replace
356	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  }	  	compilable	  [FE]  StackOverflowError  	24	4	add
357	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  }	  	compilable	  [FE]  StackOverflowError  	24	4	add
358	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  this.threadLocal.getInstance();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  this.threadLocal.getInstance();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  this.threadLocal.getInstance();	  ThreadLocal    REGISTRY    =    threadLocal.getInstance();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	1	None	replace
359	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(value),  REGISTRY,  iConstant);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(value),  REGISTRY,  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(value),  REGISTRY,  iConstant);	  getRegistry().remove(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	69	None	replace
360	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(value),  iConstant,  REGISTRY);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(value),  iConstant,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(value),  iConstant,  REGISTRY);	  getRegistry().remove(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	69	None	replace
361	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  context);  [CE]  cannot  find  symbol  context  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  context);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  context);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(iConstant,    value);    	non-compiled	[CE]  cannot  find  symbol  context	64	None	replace
362	[BUG]  [BUGGY]  init();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  init();  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	init();	  read();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
363	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	82	1	add
364	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	82	1	add
365	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value),  value);  }  else  {  getRegistry().put(new  IDKey(value));  }  [CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value),  value);  }  else  {  getRegistry().put(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value),  value);  }  else  {  getRegistry().put(new  IDKey(value));  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().put(new    IDKey(value));    }    	non-compiled	[CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	94	None	replace
366	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value,  value));  }  else  {  getRegistry().put(new  IDKey(value));  }  [CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value,  value));  }  else  {  getRegistry().put(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value,  value));  }  else  {  getRegistry().put(new  IDKey(value));  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().put(new    IDKey(value));    }    	non-compiled	[CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;	94	None	replace
367	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(reGISTRY,  value);  [CE]  cannot  find  symbol  reGISTRY  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(reGISTRY,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(reGISTRY,  value);	  ThreadLocal.getInstance().register(value);    	non-compiled	[CE]  cannot  find  symbol  reGISTRY	14	None	replace
368	[BUG]  [BUGGY]  register(new  HashCodeBuilder(value,  REGISTRY));  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(Object,ThreadLocal<Set<IDKey>>)  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  HashCodeBuilder(value,  REGISTRY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  HashCodeBuilder(value,  REGISTRY));	  register(new    HashCodeBuilder(value));    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(Object,ThreadLocal<Set<IDKey>>)	3	None	replace
369	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getregistry().remove(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getregistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getregistry().remove(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	30	1	add
371	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	30	1	add
372	[BUG]  [BUGGY]  register(new  IDKey(value),  INVALID_KEY);  [CE]  cannot  find  symbol  INVALID_KEY  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value),  INVALID_KEY);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value),  INVALID_KEY);	  register(new    IDKey(value),    iConstant);    	non-compiled	[CE]  cannot  find  symbol  INVALID_KEY	70	None	replace
373	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  if(value!=  null)  {  register(value);  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	register(value);    if(value!=  null)  {  register(value);  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	76	4	add
374	[BUG]  [BUGGY]  register(value);  if(value!=  null)  {  register(value);  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  if(value!=  null)  {  register(value);  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value);    if(value!=  null)  {  register(value);  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	76	4	add
375	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  if(value  ==  null)  {  register(value);  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	register(value);    if(value  ==  null)  {  register(value);  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	76	4	add
376	[BUG]  [BUGGY]  register(value);  if(value  ==  null)  {  register(value);  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  if(value  ==  null)  {  register(value);  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value);    if(value  ==  null)  {  register(value);  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	76	4	add
377	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  if(value!=  null)  {  register(value);  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	register(value);    if(value!=  null)  {  register(value);  }  else  {  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	76	4	add
378	[BUG]  [BUGGY]  register(value);  if(value!=  null)  {  register(value);  }  else  {  getRegistry().remove(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  if(value!=  null)  {  register(value);  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value);    if(value!=  null)  {  register(value);  }  else  {  getRegistry().remove(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	76	4	add
379	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.multiplyNonZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.multiplyNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.multiplyNonZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(value,    iConstant);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	67	None	replace
380	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(this.multiplyNonZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(this.multiplyNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(this.multiplyNonZeroOddNumber);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(initialNonZeroOddNumber);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	72	None	replace
381	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
382	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistr  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistr  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistr	  	non-compiled	[CE]  ';'  expected	34	None	add
383	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().re  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().re  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().re	  	non-compiled	[CE]  not  a  statement	34	None	add
384	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistr  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistr  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistr	  	non-compiled	[CE]  ';'  expected	38	None	add
385	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
386	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	getRegistry().remove(new        IDKey(value));        register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	32	4	add
387	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	32	4	add
388	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value,  value),  REGISTRY);  [CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value,  value),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value,  value),  REGISTRY);	  getRegistry().add(new    IDKey(iConstant,    value),    REGISTRY);    	non-compiled	[CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;	42	None	replace
389	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value,  REGISTRY),  value);  [CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value,  REGISTRY),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value,  REGISTRY),  value);	  getRegistry().add(new    IDKey(iConstant,    value),    REGISTRY);    	non-compiled	[CE]  constructor  IDKey  in  class  IDKey  cannot  be  applied  to  given  types;	42	None	replace
390	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  INVALID_NUMBER);  [CE]  cannot  find  symbol  INVALID_NUMBER  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  INVALID_NUMBER);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value),  REGISTRY,  INVALID_NUMBER);	  getRegistry().add(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  INVALID_NUMBER	80	None	replace
391	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
392	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  StackOverflowError  	26	4	add
393	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  StackOverflowError  	26	4	add
394	[BUG]  [BUGGY]  register(new  IDKey(value),  iConstant,  value);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value),  iConstant,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value),  iConstant,  value);	  register(new    IDKey(value),    value);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	44	None	replace
395	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().iTotal+  multiplierNonZeroOddNumber;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().iTotal+  multiplierNonZeroOddNumber;  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().iTotal+  multiplierNonZeroOddNumber;	  int    iConstant    =    getInitialNonZeroOddNumber().iTotal;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
396	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value,  iConstant,  REGISTRY));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value,  iConstant,  REGISTRY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value,  iConstant,  REGISTRY));	  getRegistry().register(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	46	None	replace
397	[BUG]  [BUGGY]  register(value,  DEFAULT_NAMESPACE,  REGISTRY);  [CE]  cannot  find  symbol  DEFAULT_NAMESPACE  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  DEFAULT_NAMESPACE,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  DEFAULT_NAMESPACE,  REGISTRY);	  register(value,    REGISTRY);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAMESPACE	74	None	replace
398	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iConstant,  this.multierNonZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iConstant,  this.multierNonZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iConstant,  this.multierNonZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(value,    this.iConstant);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	66	None	replace
399	[BUG]  [BUGGY]  register(new  HashCodeBuilder(value),  iConstant);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(Object)  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  HashCodeBuilder(value),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  HashCodeBuilder(value),  iConstant);	  register(new    HashCodeBuilder(value));    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(Object)	3	None	replace
400	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  this.multiZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  this.multiZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  this.multiZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(this.iConstant);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	2	None	replace
401	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
402	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().multiply(value);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().multiply(value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().multiply(value);	  int    iConstant    =    getInitialNonZeroOddNumber().toIntValue();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
403	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(value,  INVALID);  [CE]  cannot  find  symbol  INVALID  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(value,  INVALID);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(value,  INVALID);	          ThreadLocal.getInstance().register(value,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  INVALID	85	None	replace
404	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(value,  DEFAULT_NON_ZeroOddNumber);  [CE]  cannot  find  symbol  DEFAULT_NON_ZeroOddNumber  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(value,  DEFAULT_NON_ZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(value,  DEFAULT_NON_ZeroOddNumber);	          ThreadLocal.getInstance().register(value,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NON_ZeroOddNumber	85	None	replace
405	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  this.iConstant,  REGISTRY);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value),  this.iConstant,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value),  this.iConstant,  REGISTRY);	  getRegistry().add(new    IDKey(value),    iConstant,    REGISTRY);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	81	None	replace
406	[BUG]  [BUGGY]  register(new  IDKey(value),  INVALID);  [CE]  cannot  find  symbol  INVALID  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value),  INVALID);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value),  INVALID);	  register(new    IDKey(value),    iConstant);    	non-compiled	[CE]  cannot  find  symbol  INVALID	70	None	replace
407	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(this,  iConstant,  value);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(this,  iConstant,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(this,  iConstant,  value);	  ThreadLocal.getInstance().register(this,    value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	12	None	replace
408	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
409	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
410	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey  ||  value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
411	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  instant);  [CE]  cannot  find  symbol  instant  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  instant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value),  REGISTRY,  instant);	  getRegistry().register(new    IDKey(value),    REGISTRY,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  instant	52	None	replace
412	[BUG]  [BUGGY]  validate(value  instanceof  IDKey?((  IDKey)value).toString()  :  null);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  validate(value  instanceof  IDKey?((  IDKey)value).toString()  :  null);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	validate(value  instanceof  IDKey?((  IDKey)value).toString()  :  null);	  validate(value);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
413	[BUG]  [BUGGY]  validate(value  instanceof  IDKey?(IDKey)value  :  REGISTRY);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  validate(value  instanceof  IDKey?(IDKey)value  :  REGISTRY);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	validate(value  instanceof  IDKey?(IDKey)value  :  REGISTRY);	  validate(value);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
414	[BUG]  [BUGGY]  validate(value  instanceof  IDKey?(IDKey)value  :  null);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  validate(value  instanceof  IDKey?(IDKey)value  :  null);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	validate(value  instanceof  IDKey?(IDKey)value  :  null);	  validate(value);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
415	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(initialNonZeroOddNumber,  value));  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(initialNonZeroOddNumber,  value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(new  Integer(initialNonZeroOddNumber,  value));	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(new    Integer(value));    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	63	None	replace
416	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iConstant,  this.multiZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iConstant,  this.multiZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  this.iConstant,  this.multiZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(value,    this.iConstant);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	66	None	replace
417	[BUG]  [BUGGY]  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	}	          if(value    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(value    ==    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
418	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  String)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	if(value  instanceof  String)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	27	4	replace
419	[BUG]  [BUGGY]  if(value  instanceof  String)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  String)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  String)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	27	4	replace
420	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  instant);  [CE]  cannot  find  symbol  instant  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  instant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value),  REGISTRY,  instant);	  getRegistry().add(new    IDKey(value),    REGISTRY,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  instant	40	None	replace
421	[BUG]  [BUGGY]  safeMultiply(value);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  safeMultiply(value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	safeMultiply(value);	          if(value    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(value    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
422	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  getConstantValue());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  getConstantValue());  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(value,  getConstantValue());	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(value,    iConstant);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
423	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(key));  getRegistry().remove(new  IDKey(value));  [CE]  cannot  find  symbol  key  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(key));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(key));  getRegistry().remove(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol  key	30	None	add
424	[BUG]  [BUGGY]  register(value,  iConstant,  null);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  iConstant,  null);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  iConstant,  null);	  register(value,    null);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	6	None	replace
425	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().register(new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().register(new  IDKey(value));	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(value);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
426	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value,  DEFAULT_NON_ZeroOddNumber));  [CE]  cannot  find  symbol  DEFAULT_NON_ZeroOddNumber  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value,  DEFAULT_NON_ZeroOddNumber));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value,  DEFAULT_NON_ZeroOddNumber));	  getRegistry().register(new    IDKey(value,    iConstant));    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NON_ZeroOddNumber	88	None	replace
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	82	1	add
428	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	82	1	add
429	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ".   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	82	None	add
430	[BUG]  [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().register(value,  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Integer  iConstant  =  getInitialNonZeroOddNumber().register(value,  iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Integer  iConstant  =  getInitialNonZeroOddNumber().register(value,  iTotal);	  Integer    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(value);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	62	None	replace
431	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multiZeroOddNumber);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multiZeroOddNumber);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(this.iConstant,  value,  this.multiZeroOddNumber);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(this.iConstant,    value);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	65	None	replace
432	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  ((  IDKey)value).remove();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  ((  IDKey)value).remove();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  ((  IDKey)value).remove();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  getRegistry().remove(new    IDKey(value));    if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
433	[BUG]  [BUGGY]  register(value,  new  IDKey(value));  [CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  new  IDKey(value));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  new  IDKey(value));	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  method  register  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	93	None	replace
434	[BUG]  [BUGGY]  register(new  Object[]  {  value,  iConstant  }  );  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value,  iConstant  }  );  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  Object[]  {  value,  iConstant  }  );	  register(new    Object[]    {    value    }    );    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	5	None	replace
435	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(iConstant),  value);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(iConstant),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(iConstant),  value);	  getRegistry().remove(new    IDKey(value),    value);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	51	None	replace
436	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(value),  iConstant,  value);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(value),  iConstant,  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(value),  iConstant,  value);	  getRegistry().remove(new    IDKey(value),    value);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	51	None	replace
437	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  <identifier>  expected	17	None	add
438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	17	4	add
439	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	17	4	add
440	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  this.iConstant,  REGISTRY);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value),  this.iConstant,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value),  this.iConstant,  REGISTRY);	  getRegistry().register(new    IDKey(value),    iConstant,    REGISTRY);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	55	None	replace
441	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(iConstant,  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(iConstant,  iTotal);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(iConstant,  iTotal);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(iConstant,    value);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	73	None	replace
442	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
443	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value)  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value)  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value)	  	non-compiled	[CE]  ')'  expected	36	None	add
444	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  if(!(value  instanceof  IDKey))  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  if(!(value  instanceof  IDKey))  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    if(!(value  instanceof  IDKey))  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
445	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(iConstant,  value,  REGISTRY));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(iConstant,  value,  REGISTRY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(iConstant,  value,  REGISTRY));	  getRegistry().add(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	43	None	replace
446	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	add	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	95	1	add
447	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	95	1	add
448	[BUG]  [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ",   ");  }  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]          if(value    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ",   ");  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	                if(value        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(value    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(value  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ",   ");  }	  	non-compiled	[CE]  unclosed  string  literal	95	None	add
449	[BUG]  [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(initialNonZeroOddNumber,  value);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(initialNonZeroOddNumber,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal  REGISTRY  =  ThreadLocal.getInstance(initialNonZeroOddNumber,  value);	  ThreadLocal    REGISTRY    =    ThreadLocal.getInstance(iConstant,    value);    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	64	None	replace
450	[BUG]  [BUGGY]  register(new  IDKey(value,  iConstant,  REGISTRY);  [CE]  ')'  expected  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  IDKey(value,  iConstant,  REGISTRY);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  IDKey(value,  iConstant,  REGISTRY);	  register(new    IDKey(value),    REGISTRY);    	non-compiled	[CE]  ')'  expected	45	None	replace
451	[BUG]  [BUGGY]  register(iConstant,  value,  REGISTRY);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(iConstant,  value,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(iConstant,  value,  REGISTRY);	  register(value,    REGISTRY);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	74	None	replace
452	[BUG]  [BUGGY]  register(new  Object[]  {  value,  iConstant  }  ));  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value,  iConstant  }  ));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new  Object[]  {  value,  iConstant  }  ));	  register(new    Object[]    {    value    }    ));    	non-compiled	[CE]  ';'  expected	7	None	replace
453	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  if(!(value  instanceof  Object[]))  {  register(new  Object[]  {  value  }  );  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  if(!(value  instanceof  Object[]))  {  register(new  Object[]  {  value  }  );  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    if(value!=  null)  {  if(!(value  instanceof  Object[]))  {  register(new  Object[]  {  value  }  );  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
454	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  if(!(value  instanceof  StackOverflowError))  {  register(new  Object[]  {  value  }  );  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  if(!(value  instanceof  StackOverflowError))  {  register(new  Object[]  {  value  }  );  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    if(value!=  null)  {  if(!(value  instanceof  StackOverflowError))  {  register(new  Object[]  {  value  }  );  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
455	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  if(!(value  instanceof  Object[]))  {  register(new  Object[]  {  ((  Object[])value  }  );  }  [CE]  ')'  expected  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  if(!(value  instanceof  Object[]))  {  register(new  Object[]  {  ((  Object[])value  }  );  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    if(value!=  null)  {  if(!(value  instanceof  Object[]))  {  register(new  Object[]  {  ((  Object[])value  }  );  }	  	non-compiled	[CE]  ')'  expected	4	None	add
456	[BUG]  [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  if(!(value  instanceof  Object[]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(new  Object[]  {  value  }  );  if(value!=  null)  {  if(!(value  instanceof  Object[]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(new    Object[]    {    value    }    );    if(value!=  null)  {  if(!(value  instanceof  Object[]))  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
457	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  INVALID_CONSTANT);  [CE]  cannot  find  symbol  INVALID_CONSTANT  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY,  INVALID_CONSTANT);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().add(new  IDKey(value),  REGISTRY,  INVALID_CONSTANT);	  getRegistry().add(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  INVALID_CONSTANT	80	None	replace
458	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(iConstant));  register(new  IDKey(value));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new  IDKey(iConstant));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new  IDKey(iConstant));  register(new  IDKey(value));	  getRegistry().remove(new    IDKey(value));    register(new    IDKey(value));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	33	None	replace
459	[BUG]  [BUGGY]  Registers.register(value,  new  HashCodeBuilder());  [CE]  cannot  find  symbol  Registers  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  Registers.register(value,  new  HashCodeBuilder());  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	Registers.register(value,  new  HashCodeBuilder());	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  cannot  find  symbol  Registers	91	None	replace
460	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  INVALID_NUMBER);  [CE]  cannot  find  symbol  INVALID_NUMBER  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY,  INVALID_NUMBER);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(value),  REGISTRY,  INVALID_NUMBER);	  getRegistry().register(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  INVALID_NUMBER	53	None	replace
461	[BUG]  [BUGGY]  ThreadLocal.getInstance().register(new  IDKey(iConstant));  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  ThreadLocal.getInstance().register(new  IDKey(iConstant));  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	ThreadLocal.getInstance().register(new  IDKey(iConstant));	  ThreadLocal.getInstance().register(new    IDKey(value));    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	11	None	replace
462	[BUG]  [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().remove(new    IDKey(value));    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().remove(new        IDKey(value));        if(value    instanceof    IDKey)    {    getRegistry().remove(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  if(value  instanceof  IDKey)  {  getRegistry().remove(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
463	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value,  iConstant));  }  else  {  getRegistry().put(new  IDKey(value));  }  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value,  iConstant));  }  else  {  getRegistry().put(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value,  iConstant));  }  else  {  getRegistry().put(new  IDKey(value));  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().put(new    IDKey(value));    }    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	94	None	replace
464	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber();  register(iConstant,  value);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber();  register(iConstant,  value);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber();  register(iConstant,  value);	  [Delete]    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
465	[BUG]  [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  index);  [CE]  cannot  find  symbol  index  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  index);  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	int  iConstant  =  getInitialNonZeroOddNumber().getIndexedField(value,  index);	  int    iConstant    =    getInitialNonZeroOddNumber().getIndexedField(iTotal,    value);    	non-compiled	[CE]  cannot  find  symbol  index	57	None	replace
466	[BUG]  [BUGGY]  register(value);  if(value  instanceof  IDKey)  {  ((  IDKey)value).initCause(this);  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value);  if(value  instanceof  IDKey)  {  ((  IDKey)value).initCause(this);  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      getRegistry().add(new  IDKey(value));  }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value);    if(value  instanceof  IDKey)  {  ((  IDKey)value).initCause(this);  }  else  {  getRegistry().add(new  IDKey(value));  }	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	76	None	add
467	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(iConstant),  value);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  getRegistry().register(new  IDKey(iConstant),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	getRegistry().register(new  IDKey(iConstant),  value);	  getRegistry().register(new    IDKey(iConstant),    REGISTRY);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	97	None	replace
468	[BUG]  [BUGGY]  register(value,  DEFAULT_NON_ZeroOddNumber);  [CE]  cannot  find  symbol  DEFAULT_NON_ZeroOddNumber  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  DEFAULT_NON_ZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  DEFAULT_NON_ZeroOddNumber);	          register(value,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NON_ZeroOddNumber	10	None	replace
469	[BUG]  [BUGGY]  register(value,  DEFAULT_REGISTRY);  [CE]  cannot  find  symbol  DEFAULT_REGISTRY  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {      [BUGGY]  register(value,  DEFAULT_REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	522	522	1	replace	register(value,  DEFAULT_REGISTRY);	          register(value,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_REGISTRY	10	None	replace
