projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)+builder.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(initialNonZeroOddNumber,multiplierNonZeroOddNumber);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(initialNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=testTransients){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(multiplyerNonZeroOddNumber,initialNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(multiplyingNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(multiplyNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)+constructer.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)/builder.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber),builder.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludedFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,constructer,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{returnbuilder.toHashCode();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,builder,testTransients,excludeFields
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,builder,testTransients,exclude
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,builder,testTransients,excludeFields
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,iTotal);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,reflectUpToClass);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,testTransients);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,iConstant);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()!=';'
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()!=';'expected
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyNonZeroOddNumber,multiplierNonZeroOddNumber);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multipleNonZeroOddNumber,multiplierNonZeroOddNumber);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+iConstant;
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyerNonZeroOddNumber,initialNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyNonZeroOddNumber,initialNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multipleNonZeroOddNumber,initialNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplierNonZeroOddNumber,initialNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,multiplierNonZeroOddNumber,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,multiplyerNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder!=null?null:builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflect(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,negationFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()>>';'
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){clazz=clazz.getSuperclass();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(multiplyerNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(multipleNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiprNonZeroOddNumber,initialNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyerNonZeroOddNumber,multiplierNonZeroOddNumber);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)+object.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,clazz);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();intiConstant=clazz.getInitialNonZeroOddNumber();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){if(testTransients){thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();intiConstant=clazz.getInitialNonZeroOddNumber();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){if(testTransients){thrownewIllegalArgumentException("Theobjecttobuildahashcodeformustnotbenull.");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,build
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){builder.append(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients!=null){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectUpToClass(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients!=null){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=builder.getSuperclass()){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hasNext()?null:builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hasNext()?this:builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()>=';'
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.hashCode();builder==null?null:builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.hashCode();if(builder==null){thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.hashCode();if(builder==null){thrownewIllegalArgumentException("Theobjecttobuildahashcodeformustnotbenull.");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.hashCode();if(builder==null){thrownewIllegalArgumentException("Theobjecttobuildahashcodeforshouldnotbenull.");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz!=null&&testTransients!=null){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz!=null){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz!=null){reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,initialNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multipleNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,iTotal);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.next()?this:builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()?this:builder.hasNext();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,build
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,cla
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,reflectUpToClass,iConstant);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,reflectUpToClass,testTransients);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,reflectUpToClass,object);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,testTransients,reflectUpToClass);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyNonZeroOddNumber,multiplierNonZeroOddNumber+1);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()?null:builder.hasNext()?null:builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.next()?null:builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()?null:builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){clazz=clazz.getSuperclass();}else{reflectionAppend(object,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;builder.hashCode()+1;
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;clazz=builder.hashCode()+1;
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;if(testTransients){if(object==null){thrownewIllegalArgumentException("Theobjecttobuildahashcodeformustnotbenull.");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;if(testTransients){if(object==null){thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;if(testTransients){if(object==null){thrownewIllegalArgumentException("Theobjecttobuildatestcodeformustnotbenull.");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=clazz.getNativeType(UNKNOWN_TYPE);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,total);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{thrownewIllegalStateException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366intiConstant=clazz.getInitialNonZeroOddNumber();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366réflexionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludedFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)&&builder.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(iTotal,multiplierNonZeroOddNumber),builder.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();réflexionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectUpToClass(object,clazz,builder,testTransients,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectUpToClass(object,clazz,builder,testTransients,multiplierNonZeroOddNumber,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectUpToClass(object,clazz,builder,testTransients,excludeFields,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=testTransients){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=testTransients){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{returnbuilder.toHashCode()
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=testTransients){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{returnbuilder.toHashCode
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields,null);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields,false);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=testTransients){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=builder){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflect(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass()!=';'expected
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass()>>';'expected
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.get
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366intiConstant=clazz.getInitialNonZeroOddNumber();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366IntegeriConstant=clazz.getInitialNonZeroOddNumber();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366IntiConstant=clazz.getInitialNonZeroOddNumber();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyNonZeroOddNumber,multiplierNonZeroOddNumber,reflectUpToClass);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyNonZeroOddNumber,multiplierNonZeroOddNumber,testTransients);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients!=null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(builder!=null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,build
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toString();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)+constructor.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnconstructer.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)+builder.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)/constructer.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multipleNonZeroOddNumber,multiplierNonZeroOddNumber+1);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366mockUp(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getInitialNonZeroOddNumber()!=multiplierNonZeroOddNumber){clazz=clazz.getInitialNonZero
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getInitialNonZeroOddNumber()!=multiplierNonZeroOddNumber){clazz=clazz.getInitialN
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=builder.getSuperclass()){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=builder.getSuperclass()){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getRawClass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSimpleName();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){returnbuilder.hashCode();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients){thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366honneurAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,includeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,build
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,cla
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplierNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplierNonZeroOddNumber,multiplierNonZeroOddNumber,iTotal);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplierNonZeroOddNumber,multiplierNonZeroOddNumber,object);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=testTransients){builder.append(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=builder.getSuperclass()){builder.append(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,multierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionBuilderbuilder=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(initialNonZeroOddNumber,multiplyNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(numberNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass()}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=builder.getSuperclass()){clazz=clazz.getSuperclass()}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients==null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,clazz,reflectUpToClass);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(iConstant,initialNonZeroOddNumber,multiplierNonZeroOddNumber,clazz);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,clazz,testTransients);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,clazz,refTransients);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyerNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(initialNonZeroOddNumber,multiplyerNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyerNonZeroOddNumber,multiplierNonZeroOddNumber,iTotal);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multipleNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(initialNonZeroOddNumber,multipleNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multipleNonZeroOddNumber,multiplierNonZeroOddNumber,iTotal);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients){if(testTransients){thrownewIllegalArgumentException("Theobjecttobuildahashcodeformustnotbenull.");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(testTransients){thrownewIllegalArgumentException("Theobjecttobuildahashcodeformustnotbenull.");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiprNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(initialNonZeroOddNumber,multiprNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiprNonZeroOddNumber,multiplierNonZeroOddNumber,iTotal);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,testTransients,iConstant);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder!=null?null:builder.hashCode();builder!=null?null:builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder!=null?null:builder.hashCode();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder!=null?null:builder.hashCode();if(builder!=null){thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder!=null?null:builder.hashCode();clazz=builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(builder!=null){returnbuilder.hashCode();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(builder!=null){thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=testTransients){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,build>=')'expected
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,build
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplyerNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(iConstant,initialNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(object,initialNonZeroOddNumber)+multiplierNonZeroOddNumber.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(object,multiplierNonZeroOddNumber)+initialNonZeroOddNumber.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(iConstant,initialNonZeroOddNumber,multiplierNonZeroOddNumber)+object.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass()>>';'
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass()!=';'
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass()>=';'
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+iTotal;
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+initialNonZeroOddNumber;
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+clazz;
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+reflectionHashCode;
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366aughtExceptionHandler.handleMissingClass(clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366aughtExceptionHandler.handleMissingClass(null,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields,reflectUpToClass);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyerNonZeroOddNumber,multiplierNonZeroOddNumber+1);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)/object.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,constructer,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{reflectionAppend(object,clazz,constructer,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)&builder.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)-builder.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.hashCode();if(builder==null?null:builder.hashCode()){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.hashCode();if(builder==null?null:builder.hashCode()){reflectionAppend(object,clazz,builder,testTransients,excludeFields);returnbuilder==null?null:builder.hashCode();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.hashCode();if(builder==null?null:builder.hashCode()){returnbuilder==null?null:builder.hashCode();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.hashCode();if(builder==null?null:builder.hashCode()){reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,build}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,reflectUpToClass,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(builder==null){returnbuilder.hashCode();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;intiConstant=clazz.getInitialNonZeroOddNumber();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;intiConstant=clazz.getInitialNonZeroOddNumber();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,reflectUpToClass,clazz);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,build
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(builder!=null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(builder!=null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,cla
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder==null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,build
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyNonZeroOddNumber,multierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);instanceAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectUpToClass(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+multiplierNonZeroOddNumber;
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplierNonZeroOddNumber,multiplierNonZeroOddNumber+1);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){clazz=clazz.getSuperclass();}else{reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=clazz.hashCode();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366atterns.addAll(expandUpToClass,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields).reset();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366initialNonZeroOddNumber=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366initialNonZeroOddNumber=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionApp
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366initialNonZeroOddNumber=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366initialNonZeroOddNumber=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiprNonZeroOddNumber,multiplierNonZeroOddNumber+1);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnclazz.hashCode();intiConstant=builder.getInitialNonZeroOddNumber();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,build
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,cla
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass()+';'
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366testTransients=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyerNonZeroOddNumber,multiplierNonZeroOddNumber+1);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()>>';'expected
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()[Delete]';'expected
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(reflectUpToClass!=null){clazz=clazz.getSuperclass();}else{reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(reflectUpToClass==null){clazz=clazz.getSuperclass();}else{reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multipleNonZeroOddNumber,multiplierNonZeroOddNumber+1);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multipleNonZeroOddNumber,multierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(iTotal,multiplierNonZeroOddNumber)+object.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields).toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(object==null){returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(object==null){returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(object==null){returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,cla
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366initialNonZeroOddNumber=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366initialNonZeroOddNumber=builder.hashCode();if(testTransients){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionApp
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366initialNonZeroOddNumber=builder.hashCode();if(builder!=null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366initialNonZeroOddNumber=builder.getInitialNonZeroOddNumber();if(testTransients){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,constructorNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz!=null&&clazz!=reflectUpToClass){builder.append(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){builder.append(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectNonZeroOddNumber){builder.append(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366null=builder.hashCode();if(builder!=null){if(testTransients){thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{returnbuilder.toHashCode();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366safeTest(clazz.getSuperclass());
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366parent=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()?this:builder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,negationNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflection(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyNonZeroOddNumber,multiplierNonZeroOddNumber+1);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields,initialNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields,iConstant);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(clazz,multiplierNonZeroOddNumber,initialNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,clazz,reflection);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder!=null?null:builder.hashCode();if(builder!=null){builder=newHashCodeBuilder(initialNonZeroOddNumber,multiplierNonZeroOddNumber);reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder!=null?null:builder.hashCode();if(builder!=null){builder=newHashCodeBuilder(initialNonZeroOddNumber,multiplierNonZeroOddNumber);reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=nu
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder!=null?null:builder.hashCode();if(builder!=null){builder=newHashCodeBuilder(initialNonZeroOddNumber,multiplierNonZeroOddNumber);reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getInitialNonZeroOddN
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){if(builder!=null){thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,reflectUpToClass);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(object!=null){returnbuilder.hashCode();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients!=null){returnbuilder.hashCode();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){returnbuilder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients==null){returnbuilder.hashCode();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients==null){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients!=null){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients==null){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients!=null){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{reflectionAppend(object,clazz,constructer,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,build}')'expected
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,build!=')'expected
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients!=null){clazz=clazz.getSuperclass();}else{reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){if(builder!=null){thrownewIllegalArgumentException("Theobjecttobuildahashcodeformustnotbenull.");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){thrownewIllegalArgumentException("Theobjecttobuildahashcodeformustnotbenull.");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)/2,builder.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)?builder:null;
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields.length);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplyerNonZeroOddNumber,multierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,iniTotal);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,object);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,iniTotal);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,builder,testTransients
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(testTransients!=null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,build
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal>=multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,builder,test
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.hashCode();if(builder==null?null:builder.hashCode()){reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.hashCode();if(builder==null?null:builder.hashCode()){thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder==null?null:builder.toString();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+reflectionAppend(object,clazz);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz!=reflectUpToClass){reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass()
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366aughtExceptionHandler.handleMissingClass(initialNonZeroOddNumber,multiplierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&builder!=reflectUpToClass){returnbuilder.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366While(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);}else{returnbuilder.toHashCode()
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionInterceptorobject=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients){thrownewIllegalArgumentException("");}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(object,multiplierNonZeroOddNumber)+object.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,object,clazz);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,clazz,object);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,clazz,reflectionAppend(object,clazz));
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366thrownewIllegalArgumentException("");
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366aughtExceptionHandler(clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){returnbuilder.hashCode();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder!=null?null:builder.hashCode();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,build
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,builder,testTransients
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,builder,test
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode();if(builder!=null){for(intiConstant=0;iTotal<multiplierNonZeroOddNumber;iTotal++){reflectionAppend(object,clazz,builder,testTrans
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hashCode()+1;clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.get
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();reflectionAppend(object,clazz,builder,testTransients,excludeFields);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectionAppend(object,clazz,builder,testTransients,excludeFields);reflectionAppend(object,clazz,builder,testTransients,excludeFields);if(testTransients){while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,innerNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=builder){clazz=clazz.getSuperclass();}
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber,object,testTransients);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366if(testTransients!=null){reflectionAppend(object,clazz,builder,testTransients,excludeFields);while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366while(clazz.getSuperclass()!=null&&clazz!=reflectUpToClass){clazz=clazz.getSuperclass()}';'expected
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.hasNext()?this:constructer.hashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366reflectUpToClass(object,clazz,builder,testTransients,excludeFields,null);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiplierNonZeroOddNumber,multierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366returnbuilder.toHashCode(initialNonZeroOddNumber,multiplierNonZeroOddNumber)/result.toHashCode();
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(multiprNonZeroOddNumber,multierNonZeroOddNumber);
projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java366ReflectionHashCodeBuilderbuilder=newReflectionHashCodeBuilder(initialNonZeroOddNumber,multierNonZeroOddNumber);reflectionAppend(object,clazz,builder,testTransients,excludeFields);
