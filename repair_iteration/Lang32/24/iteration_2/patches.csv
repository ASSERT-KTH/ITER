bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  getRegy().add(new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegy().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegy().add(new  IDKey(value));	          getRegistry().add(new    IDKey(value));    getRegy().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
2	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().add(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().add(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().add(new  IDKey(value.getClass()));  }	          register(new    IDKey(value.getClass()));    if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
3	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  }	          register(new    IDKey(value.getClass()));    if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
4	[BUG]  [BUGGY]  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value!=  null)  {  register(new  IDKey(value.getClass()));  }	          register(new    IDKey(value.getClass()));    if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
5	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(iConstant,  value));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(iConstant,  value));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(iConstant,  value));	  getRegistry().add(new    IDValue(value,    iTotal));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
6	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(iTotal,  value));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(iTotal,  value));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(iTotal,  value));	  getRegistry().add(new    IDValue(value,    iTotal));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
7	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(value,  iConstant));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(value,  iConstant));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(value,  iConstant));	  getRegistry().add(new    IDValue(value,    iTotal));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
8	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(value,  iTotal),  REGISTRY);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(value,  iTotal),  REGISTRY);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(value,  iTotal),  REGISTRY);	  getRegistry().add(new    IDValue(value,    iTotal));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
9	[BUG]  [BUGGY]  getRegistry().put(key,  new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().put(key,  new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().put(key,  new  IDKey(value));	  getRegistry().add(new    IDKey(key));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
10	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                getRegistry().add(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	72	1	add
11	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	72	1	add
12	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                getRegistry().add(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	72	1	add
13	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	72	1	add
14	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().set(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().set(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().set(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
15	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }	          register(new    IDKey(value));    getRegistry().remove(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
16	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          getRegistry().add(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
17	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          getRegistry().add(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
18	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }	          getRegistry().add(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
19	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	43	4	add
20	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	43	4	add
21	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	43	4	add
22	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	compilable	  [FE]  StackOverflowError  	43	4	add
23	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  }	  	compilable	  [FE]  StackOverflowError  	43	4	add
24	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  }	  	compilable	  [FE]  StackOverflowError  	43	4	add
25	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
26	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
27	[BUG]  [BUGGY]  register(new  IDKey(value.getClass(),  value.getClass()),  REGISTRY);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass(),  value.getClass()),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass(),  value.getClass()),  REGISTRY);	  register(new    IDKey(value.getClass(),    value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
28	[BUG]  [BUGGY]  register(new  IDKey(value.getClass(),  value.getClass(),  REGISTRY));  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass(),  value.getClass(),  REGISTRY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass(),  value.getClass(),  REGISTRY));	  register(new    IDKey(value.getClass(),    value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
29	[BUG]  [BUGGY]  register(new  IDKey(value.getClass(),  value.getValue()));  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass(),  value.getValue()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass(),  value.getValue()));	  register(new    IDKey(value.getClass(),    value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
30	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  getRegistry().remove(new  IDKey(value));  }	          getRegistry().add(new    IDKey(value));    getRegistry().remove(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
31	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }	          getRegistry().add(new    IDKey(value));    getRegistry().remove(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
32	[BUG]  [BUGGY]  register(value,  REGISTRY,  new  ThreadLocal(),  multiplierNonZeroOddNumber);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  REGISTRY,  new  ThreadLocal(),  multiplierNonZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  REGISTRY,  new  ThreadLocal(),  multiplierNonZeroOddNumber);	  register(value,    REGISTRY,    new    ThreadLocal());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
33	[BUG]  [BUGGY]  register(new  ThreadLocal(),  REGISTRY,  new  ThreadLocal());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  ThreadLocal(),  REGISTRY,  new  ThreadLocal());  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  ThreadLocal(),  REGISTRY,  new  ThreadLocal());	  register(value,    REGISTRY,    new    ThreadLocal());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
34	[BUG]  [BUGGY]  register(new  ThreadLocal(),  REGISTRY,  value);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  ThreadLocal(),  REGISTRY,  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  ThreadLocal(),  REGISTRY,  value);	  register(value,    REGISTRY,    new    ThreadLocal());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
35	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(value),  REGISTRY,  iTotal);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(value),  REGISTRY,  iTotal);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(value),  REGISTRY,  iTotal);	  getRegistry().add(new    IDValue(value),    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(value),  REGISTRY,  value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(value),  REGISTRY,  value);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(value),  REGISTRY,  value);	  getRegistry().add(new    IDValue(value),    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
38	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDKey(value),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDKey(value),  REGISTRY);	  getRegistry().add(new    IDKey(value),    value);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
39	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(iTotal),  value);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDKey(iTotal),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDKey(iTotal),  value);	  getRegistry().add(new    IDKey(value),    value);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
40	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  iTotal);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDKey(value),  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDKey(value),  iTotal);	  getRegistry().add(new    IDKey(value),    value);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
41	[BUG]  [BUGGY]  validate(new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  validate(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	validate(new  IDKey(value));	          register(new    IDKey(value));    validate(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
42	[BUG]  [BUGGY]  if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
43	[BUG]  [BUGGY]  if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  StackOverflowError)  {  register(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
44	[BUG]  [BUGGY]  register(new  IDKey(value,  REGISTRY,  iTotal));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  REGISTRY,  iTotal));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  REGISTRY,  iTotal));	  register(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
45	[BUG]  [BUGGY]  register(new  IDKey(value,  REGISTRY),  iTotal);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  REGISTRY),  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  REGISTRY),  iTotal);	  register(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
46	[BUG]  [BUGGY]  register(new  IDKey(value,  REGISTRY),  value);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  REGISTRY),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  REGISTRY),  value);	  register(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
47	[BUG]  [BUGGY]  register(new  IDKey(iConstant,  value));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iConstant,  value));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iConstant,  value));	  register(new    IDKey(iTotal,    value));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  register(new  IDKey(value,  iTotal));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  iTotal));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  iTotal));	  register(new    IDKey(iTotal,    value));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
49	[BUG]  [BUGGY]  register(new  IDValue(iConstant,  value));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(iConstant,  value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(iConstant,  value));	  register(new    IDValue(value,    iTotal));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
50	[BUG]  [BUGGY]  register(new  IDValue(iTotal,  value));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(iTotal,  value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(iTotal,  value));	  register(new    IDValue(value,    iTotal));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
51	[BUG]  [BUGGY]  register(new  IDValue(value,  iTotal),  REGISTRY);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(value,  iTotal),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(value,  iTotal),  REGISTRY);	  register(new    IDValue(value,    iTotal));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
52	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }	          register(new    IDKey(value.getClass()));    getRegistry().add(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          register(new    IDKey(value.getClass()));    getRegistry().add(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getValue()));  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getValue()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getValue()));	          register(new    IDKey(value.getClass()));    getRegistry().add(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
55	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        getRegistry().add(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	41	4	add
56	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().add(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	41	4	add
57	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	41	4	add
58	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	41	4	add
59	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  validate(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  validate(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().add(new    IDKey(value));    validate(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
60	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	41	4	add
61	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	41	4	add
62	[BUG]  [BUGGY]  register(new  IDKey(iConstant),  REGISTRY,  iTotal);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iConstant),  REGISTRY,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iConstant),  REGISTRY,  iTotal);	  register(new    IDKey(value),    REGISTRY,    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
63	[BUG]  [BUGGY]  register(new  IDKey(value),  iConstant,  iTotal);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value),  iConstant,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value),  iConstant,  iTotal);	  register(new    IDKey(value),    REGISTRY,    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
64	[BUG]  [BUGGY]  register(new  IDKey(iTotal),  REGISTRY,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal),  REGISTRY,  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal),  REGISTRY,  value);	  register(new    IDKey(value),    REGISTRY,    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
65	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        getRegistry().add(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	3	4	add
66	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        getRegistry().add(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	3	4	add
67	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        getRegistry().add(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	3	4	add
68	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        getRegistry().add(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	3	4	add
69	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  validate(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  validate(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        getRegistry().add(new    IDKey(value.getClass()));    validate(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
70	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        getRegistry().add(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	3	4	add
71	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        getRegistry().add(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	3	4	add
72	[BUG]  [BUGGY]  registry(new  IDKey(iTotal,  iConstant));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  registry(new  IDKey(iTotal,  iConstant));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	registry(new  IDKey(iTotal,  iConstant));	  register(new    IDKey(iConstant,    iTotal));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }	  	compilable	  [FE]  StackOverflowError  	5	4	add
74	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }	  	compilable	  [FE]  StackOverflowError  	5	4	add
75	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  getRegistry().add(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    getRegistry().add(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }	  	compilable	  [FE]  StackOverflowError  	5	4	add
76	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  getRegistry().add(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  getRegistry().add(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    getRegistry().add(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }	  	compilable	  [FE]  StackOverflowError  	5	4	add
77	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  }	  	compilable	  [FE]  StackOverflowError  	5	4	add
78	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  }	  	compilable	  [FE]  StackOverflowError  	5	4	add
79	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
80	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  register(new  IDKey(value.getClass()));  if(value.getClass()  ==  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    register(new  IDKey(value.getClass()));  if(value.getClass()  ==  null)  {  register(new  IDKey(value.getClass()));  }	  	compilable	  [FE]  StackOverflowError  	5	4	add
81	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  register(new  IDKey(value.getClass()));  if(value.getClass()  ==  null)  {  register(new  IDKey(value.getClass()));  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  register(new  IDKey(value.getClass()));  if(value.getClass()  ==  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    register(new  IDKey(value.getClass()));  if(value.getClass()  ==  null)  {  register(new  IDKey(value.getClass()));  }	  	compilable	  [FE]  StackOverflowError  	5	4	add
82	[BUG]  [BUGGY]  register(iTotal,  value,  REGISTRY);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(iTotal,  value,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(iTotal,  value,  REGISTRY);	  register(iConstant,    value,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
83	[BUG]  [BUGGY]  register(iConstant,  iTotal,  REGISTRY);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(iConstant,  iTotal,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(iConstant,  iTotal,  REGISTRY);	  register(iConstant,    value,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
84	[BUG]  [BUGGY]  register(iConstant,  value,  iTotal);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(iConstant,  value,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(iConstant,  value,  iTotal);	  register(iConstant,    value,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
85	[BUG]  [BUGGY]  register(new  IDValue(iTotal,  iConstant));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(iTotal,  iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(iTotal,  iConstant));	  register(new    IDValue(value,    iConstant));    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
86	[BUG]  [BUGGY]  register(new  IDKey(value,  iTotal,  REGISTRY);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  iTotal,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  iTotal,  REGISTRY);	  register(new    IDKey(value,    iConstant,    REGISTRY);    	non-compiled	[CE]  ')'  expected	68	None	replace
87	[BUG]  [BUGGY]  register(new  IDKey(iTotal,  iConstant,  REGISTRY);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal,  iConstant,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal,  iConstant,  REGISTRY);	  register(new    IDKey(value,    iConstant,    REGISTRY);    	non-compiled	[CE]  ')'  expected	68	None	replace
88	[BUG]  [BUGGY]  register(new  IDKey(iConstant,  value,  REGISTRY);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iConstant,  value,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iConstant,  value,  REGISTRY);	  register(new    IDKey(value,    iConstant,    REGISTRY);    	non-compiled	[CE]  ')'  expected	68	None	replace
89	[BUG]  [BUGGY]  register(new  IDKey(value));  getRegistry().add(new  IDKey(iConstant));  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value));  getRegistry().add(new  IDKey(iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value));  getRegistry().add(new  IDKey(iConstant));	          register(new    IDKey(value));    getRegistry().add(new    IDKey(key));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
90	[BUG]  [BUGGY]  register(new  IDKey(value));  getRegistry().add(new  IDKey(iTotal));  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value));  getRegistry().add(new  IDKey(iTotal));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value));  getRegistry().add(new  IDKey(iTotal));	          register(new    IDKey(value));    getRegistry().add(new    IDKey(key));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
91	[BUG]  [BUGGY]  register(new  IDKey(iConstant  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iConstant  +  1));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iConstant  +  1));	  register(new    IDKey(iTotal    +    1));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
92	[BUG]  [BUGGY]  register(new  IDKey(iTotal  +  1),  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal  +  1),  value);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal  +  1),  value);	  register(new    IDKey(iTotal    +    1));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
93	[BUG]  [BUGGY]  register(new  IDKey(value.getClass(),  REGISTRY));  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass(),  REGISTRY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass(),  REGISTRY));	  register(new    IDKey(value.getClass(),    value));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
94	[BUG]  [BUGGY]  register(new  IDKey(value.getClass(),  value),  REGISTRY);  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass(),  value),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass(),  value),  REGISTRY);	  register(new    IDKey(value.getClass(),    value));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
95	[BUG]  [BUGGY]  register(iTotal,  iConstant,  REGISTRY);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(iTotal,  iConstant,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(iTotal,  iConstant,  REGISTRY);	  register(value,    iConstant,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
96	[BUG]  [BUGGY]  register(value,  iTotal,  REGISTRY);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  iTotal,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  iTotal,  REGISTRY);	  register(value,    iConstant,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
97	[BUG]  [BUGGY]  register(new  IDValue(value),  REGISTRY,  iTotal);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(value),  REGISTRY,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(value),  REGISTRY,  iTotal);	  register(new    IDValue(value),    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
98	[BUG]  [BUGGY]  register(new  IDValue(value),  REGISTRY,  iConstant);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(value),  REGISTRY,  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(value),  REGISTRY,  iConstant);	  register(new    IDValue(value),    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
99	[BUG]  [BUGGY]  register(new  IDValue(value),  REGISTRY,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(value),  REGISTRY,  1);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(value),  REGISTRY,  1);	  register(new    IDValue(value),    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
100	[BUG]  [BUGGY]  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().add(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().add(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().add(new  IDKey(value.getClass()));  }	          register(new    IDKey(value.getClass()));    if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
101	[BUG]  [BUGGY]  register(new  IDKey(iTotal),  iConstant);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal),  iConstant);	  register(new    IDKey(value),    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
102	[BUG]  [BUGGY]  register(new  IDKey(value),  iTotal);  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value),  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value),  iTotal);	  register(new    IDKey(value),    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
103	[BUG]  [BUGGY]  register(new  IDKey(iTotal),  value);  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal),  value);	  register(new    IDKey(value),    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
104	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(value),  value,  REGISTRY);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(value),  value,  REGISTRY);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(value),  value,  REGISTRY);	  getRegistry().add(new    IDValue(value),    value);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
105	[BUG]  [BUGGY]  register(new  IDKey(value.getClass()),  iTotal);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass()),  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass()),  iTotal);	  register(new    IDKey(value.getClass()),    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
106	[BUG]  [BUGGY]  register(new  IDKey(value.getClass(),  iTotal),  iConstant);  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass(),  iTotal),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass(),  iTotal),  iConstant);	  register(new    IDKey(value.getClass()),    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
107	[BUG]  [BUGGY]  register(new  IDKey(value.getClass(),  iTotal));  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass(),  iTotal));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass(),  iTotal));	  register(new    IDKey(value.getClass()),    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
108	[BUG]  [BUGGY]  register(new  IDKey(iTotal.getClass()),  iConstant);  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal.getClass()),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal.getClass()),  iConstant);	  register(new    IDKey(value.getClass()),    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                getRegistry().add(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	27	1	add
110	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	27	1	add
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                getRegistry().add(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	27	1	add
112	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	27	1	add
113	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegy().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegy().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegy().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
114	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(key));  getRegistry().add(new  IDKey(value));  [CE]  cannot  find  symbol  key  [FE]          AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(key));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(key));  getRegistry().add(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol  key	27	None	add
115	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(iTotal,  iConstant));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDKey(iTotal,  iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDKey(iTotal,  iConstant));	  getRegistry().add(new    IDKey(iConstant));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
116	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }	  	compilable	  [FE]  StackOverflowError  	50	4	add
117	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }	  	compilable	  [FE]  StackOverflowError  	50	4	add
118	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }	  	compilable	  [FE]  StackOverflowError  	50	4	add
119	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }	  	compilable	  [FE]  StackOverflowError  	50	4	add
120	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
121	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value  ==  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value  ==  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }	  	compilable	  [FE]  StackOverflowError  	50	4	add
122	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value  ==  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value  ==  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value  ==  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }	  	compilable	  [FE]  StackOverflowError  	50	4	add
123	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value  ==  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value  ==  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value  ==  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
124	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(iTotal));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().remove(new  IDKey(iTotal));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().remove(new  IDKey(iTotal));	  getRegistry().remove(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
125	[BUG]  [BUGGY]  register(value,  REGISTRY,  0);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  REGISTRY,  0);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  REGISTRY,  0);	  register(value,    REGISTRY,    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
126	[BUG]  [BUGGY]  register(value,  REGISTRY,  2);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  REGISTRY,  2);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  REGISTRY,  2);	  register(value,    REGISTRY,    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
127	[BUG]  [BUGGY]  register(value,  REGISTRY,  0,  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  REGISTRY,  0,  1);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  REGISTRY,  0,  1);	  register(value,    REGISTRY,    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
128	[BUG]  [BUGGY]  registry().add(new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  registry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	registry().add(new  IDKey(value));	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
129	[BUG]  [BUGGY]  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
130	[BUG]  [BUGGY]  registry(new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  registry(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	registry(new  IDKey(value));	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
131	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(iConstant),  iTotal);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(iConstant),  iTotal);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(iConstant),  iTotal);	  getRegistry().add(new    IDValue(value),    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
132	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(iTotal),  value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(iTotal),  value);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(iTotal),  value);	  getRegistry().add(new    IDValue(value),    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
133	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(value),  iConstant);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(value),  iConstant);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(value),  iConstant);	  getRegistry().add(new    IDValue(value),    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
134	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	39	4	add
135	[BUG]  [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  register(new  IDKey(value));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	39	4	add
136	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	39	4	add
137	[BUG]  [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	39	4	add
138	[BUG]  [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  validate(new  IDKey(value));  register(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  validate(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        register(new    IDKey(value));    validate(new  IDKey(value));  register(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
139	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        register(new    IDKey(value));    register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	39	4	add
140	[BUG]  [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        register(new    IDKey(value));    register(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	39	4	add
141	[BUG]  [BUGGY]  register(new  IDKey(value),  REGISTRY,  value,  iTotal);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value),  REGISTRY,  value,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value),  REGISTRY,  value,  iTotal);	  register(new    IDKey(value),    REGISTRY,    value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
142	[BUG]  [BUGGY]  register(new  IDKey(iTotal,  iConstant),  REGISTRY);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal,  iConstant),  REGISTRY);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal,  iConstant),  REGISTRY);	  register(new    IDKey(iTotal,    iConstant));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
143	[BUG]  [BUGGY]  register(new  IDKey(iTotal,  iConstant),  value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal,  iConstant),  value);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal,  iConstant),  value);	  register(new    IDKey(iTotal,    iConstant));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
144	[BUG]  [BUGGY]  validate(new  IDKey(value.getClass()));  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  validate(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	validate(new  IDKey(value.getClass()));	          register(new    IDKey(value.getClass()));    validate(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
145	[BUG]  [BUGGY]  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
146	[BUG]  [BUGGY]  registry().register(new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  registry().register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	registry().register(new  IDKey(value));	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
147	[BUG]  [BUGGY]  getRegistry().addValue(new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().addValue(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().addValue(new  IDKey(value));	          getRegistry().add(new    IDKey(value));    getRegistry().add(new    IDValue(value));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
148	[BUG]  [BUGGY]  getRegistry().register(new  IDValue(value));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().register(new  IDValue(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().register(new  IDValue(value));	          getRegistry().add(new    IDKey(value));    getRegistry().add(new    IDValue(value));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
149	[BUG]  [BUGGY]  register(new  IDValue(value),  iTotal);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(value),  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(value),  iTotal);	  register(new    IDValue(value),    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
150	[BUG]  [BUGGY]  register(new  IDValue(iTotal),  iConstant);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(iTotal),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(iTotal),  iConstant);	  register(new    IDValue(value),    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
151	[BUG]  [BUGGY]  register(new  IDValue(iTotal),  value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(iTotal),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(iTotal),  value);	  register(new    IDValue(value),    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
152	[BUG]  [BUGGY]  register(new  IDValue(value,  iTotal),  iConstant);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(value,  iTotal),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(value,  iTotal),  iConstant);	  register(new    IDValue(value),    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
153	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
154	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          register(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
155	[BUG]  [BUGGY]  register(iTotal,  REGISTRY,  value);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(iTotal,  REGISTRY,  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(iTotal,  REGISTRY,  value);	  register(value,    REGISTRY,    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
156	[BUG]  [BUGGY]  register(value,  iConstant,  iTotal);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  iConstant,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  iConstant,  iTotal);	  register(value,    REGISTRY,    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
157	[BUG]  [BUGGY]  register(iConstant,  REGISTRY,  iTotal);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(iConstant,  REGISTRY,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(iConstant,  REGISTRY,  iTotal);	  register(value,    REGISTRY,    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
158	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(iTotal,  initialNonZeroOddNumber));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDKey(iTotal,  initialNonZeroOddNumber));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDKey(iTotal,  initialNonZeroOddNumber));	  getRegistry().add(new    IDKey(initialNonZeroOddNumber));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
159	[BUG]  [BUGGY]  register(new  IDValue(value),  value,  iTotal);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(value),  value,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(value),  value,  iTotal);	  register(new    IDValue(value),    value);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
160	[BUG]  [BUGGY]  register(iConstant,  REGISTRY,  value);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(iConstant,  REGISTRY,  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(iConstant,  REGISTRY,  value);	  register(value,    REGISTRY,    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
161	[BUG]  [BUGGY]  register(value,  iTotal,  iConstant);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  iTotal,  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  iTotal,  iConstant);	  register(value,    REGISTRY,    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
162	[BUG]  [BUGGY]  register(new  IDKey(value),  iTotal,  REGISTRY);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value),  iTotal,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value),  iTotal,  REGISTRY);	  register(new    IDKey(value),    iConstant,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
163	[BUG]  [BUGGY]  register(new  IDKey(iTotal),  iConstant,  REGISTRY);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal),  iConstant,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal),  iConstant,  REGISTRY);	  register(new    IDKey(value),    iConstant,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
164	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	63	4	add
165	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	63	4	add
166	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	63	4	add
167	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	63	4	add
168	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	63	4	add
169	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	63	4	add
170	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  Register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  Register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    Register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
171	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  validate(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]            StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  validate(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    validate(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
172	[BUG]  [BUGGY]  getRaw().add(new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRaw().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRaw().add(new  IDKey(value));	          getRegistry().add(new    IDKey(value));    getRaw().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
173	[BUG]  [BUGGY]  getRaw().add(new  IDKey(value),  REGISTRY);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRaw().add(new  IDKey(value),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRaw().add(new  IDKey(value),  REGISTRY);	          getRegistry().add(new    IDKey(value));    getRaw().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
174	[BUG]  [BUGGY]  getRaw().add(new  IDKey(value),  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRaw().add(new  IDKey(value),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRaw().add(new  IDKey(value),  value);	          getRegistry().add(new    IDKey(value));    getRaw().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
175	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	1	4	add
176	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	1	4	add
177	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	1	4	add
178	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	1	4	add
179	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	1	4	add
180	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));	  	compilable	  [FE]  StackOverflowError  	1	4	add
181	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  validate(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    register(new  IDKey(value.getClass()));  validate(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        register(new    IDKey(value.getClass()));    validate(new  IDKey(value.getClass()));  register(new  IDKey(value.getClass()));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
182	[BUG]  [BUGGY]  register(new  IDKey(value.getClass()),  REGISTRY);  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass()),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass()),  REGISTRY);	  register(new    IDKey(value.getClass()),    value);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
183	[BUG]  [BUGGY]  register(new  IDKey(value),  iTotal,  iConstant);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value),  iTotal,  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value),  iTotal,  iConstant);	  register(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
184	[BUG]  [BUGGY]  register(new  IDKey(iConstant),  REGISTRY,  value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iConstant),  REGISTRY,  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iConstant),  REGISTRY,  value);	  register(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
185	[BUG]  [BUGGY]  register(new  IDKey(iTotal),  REGISTRY,  iConstant);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal),  REGISTRY,  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal),  REGISTRY,  iConstant);	  register(new    IDKey(value),    REGISTRY,    iConstant);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
186	[BUG]  [BUGGY]  registry(new  IDKey(value.getClass()));  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  registry(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	registry(new  IDKey(value.getClass()));	          register(new    IDKey(value.getClass()));    registry(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
187	[BUG]  [BUGGY]  register(new  IDKey(value.getClass()),  value.getClass());  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass()),  value.getClass());  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass()),  value.getClass());	          register(new    IDKey(value.getClass()));    registry(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
188	[BUG]  [BUGGY]  register(new  IDKey(value.toString()),  REGISTRY);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.toString()),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.toString()),  REGISTRY);	  register(new    IDKey(value.toString()));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
189	[BUG]  [BUGGY]  register(new  IDKey(value.toString()),  value);  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.toString()),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.toString()),  value);	  register(new    IDKey(value.toString()));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
190	[BUG]  [BUGGY]  register(new  IDKey(value.toString()),  iConstant);  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.toString()),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.toString()),  iConstant);	  register(new    IDKey(value.toString()));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
191	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
192	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	45	4	add
193	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	45	4	add
194	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
195	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	45	4	add
196	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	45	4	add
197	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    validate(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
198	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  value);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().register(new  IDKey(value),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().register(new  IDKey(value),  value);	  getRegistry().register(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
199	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(iTotal));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().register(new  IDKey(iTotal));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().register(new  IDKey(iTotal));	  getRegistry().register(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
200	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().register(new  IDKey(value),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().register(new  IDKey(value),  REGISTRY);	  getRegistry().register(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
201	[BUG]  [BUGGY]  if(value  instanceof  Number)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  Number)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  Number)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
202	[BUG]  [BUGGY]  register(value,  new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  new  IDKey(value));	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
203	[BUG]  [BUGGY]  register(value);  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value);	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().remove(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
204	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          register(new    IDKey(value));    getRegistry().remove(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
205	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getregistry().add(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  getregistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getregistry().add(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                getRegistry().add(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	27	1	add
207	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	27	1	add
208	[BUG]  [BUGGY]  if(value  ==  null)  {  register(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  ==  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  ==  null)  {  register(new  IDKey(value.getClass()));  }	          register(new    IDKey(value.getClass()));    if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
209	[BUG]  [BUGGY]  register(iConstant,  value);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(iConstant,  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(iConstant,  value);	  register(value,    iConstant,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
210	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(value),  iTotal  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(value),  iTotal  +  1);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(value),  iTotal  +  1);	  getRegistry().add(new    IDValue(value),    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
211	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                getRegistry().add(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	72	1	add
212	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	72	1	add
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                getRegistry().add(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	72	1	add
214	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  AssertionFailedError  	72	1	add
215	[BUG]  [BUGGY]  register(value,  REGISTRY,  new  ThreadLocal(),  multiplierNonZeroOddNumber());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  REGISTRY,  new  ThreadLocal(),  multiplierNonZeroOddNumber());  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  REGISTRY,  new  ThreadLocal(),  multiplierNonZeroOddNumber());	  register(value,    REGISTRY,    new    ThreadLocal());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
216	[BUG]  [BUGGY]  register(iConstant,  value,  INVALID_NONZeroOddNumber);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(iConstant,  value,  INVALID_NONZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(iConstant,  value,  INVALID_NONZeroOddNumber);	  register(iConstant,    value,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
217	[BUG]  [BUGGY]  register(new  IDKey(value,  REGISTRY),  iConstant);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  REGISTRY),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  REGISTRY),  iConstant);	  register(new    IDKey(value,    REGISTRY));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
218	[BUG]  [BUGGY]  if(value  ==  null)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().add(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  ==  null)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().add(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  ==  null)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().add(new  IDKey(value.getClass()));  }	          register(new    IDKey(value.getClass()));    register(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
219	[BUG]  [BUGGY]  register(new  IDValue(value,  iTotal  +  1));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDValue(value,  iTotal  +  1));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDValue(value,  iTotal  +  1));	  register(new    IDValue(value,    iTotal));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
220	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  validate(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  validate(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    validate(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
221	[BUG]  [BUGGY]  register(new  IDKey(value,  iConstant.getClass()));  validate(new  IDKey(value.getClass()));  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  iConstant.getClass()));  validate(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  iConstant.getClass()));  validate(new  IDKey(value.getClass()));	          register(new    IDKey(value.getClass()));    validate(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
222	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }  else  {  throw  new  IllegalStateException( " ");  }	          register(new    IDKey(value.getClass()));    getRegistry().add(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
223	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(value),  iConstant);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDKey(value),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDKey(value),  iConstant);	          getRegistry().add(new    IDKey(value));    getRegistry().add(new    IDKey(key));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
224	[BUG]  [BUGGY]  register(value,  REGISTRY,  3);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  REGISTRY,  3);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  REGISTRY,  3);	  register(value,    REGISTRY,    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
225	[BUG]  [BUGGY]  getRaw().add(new  IDKey(key));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRaw().add(new  IDKey(key));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRaw().add(new  IDKey(key));	          getRegistry().add(new    IDKey(value));    getRaw().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
226	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  Register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  Register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    Register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
227	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
228	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  }	  	compilable	  [FE]  StackOverflowError  	5	4	add
229	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value.getClass()!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value!=  null)  {  register(new  IDKey(value.getClass()));  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  }  }	  	compilable	  [FE]  StackOverflowError  	5	4	add
230	[BUG]  [BUGGY]  getregistry().add(new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getregistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getregistry().add(new  IDKey(value));	          getRegistry().add(new    IDKey(value));    getregistry().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
231	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	63	4	add
232	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	63	4	add
233	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  getRegistry().add(new  IDKey(value));  }  else  {  throw  new  IllegalStateException( " ");  }	          getRegistry().add(new    IDKey(value));    getRegistry().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
234	[BUG]  [BUGGY]  register(new  IDKey(value),  REGISTRY,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value),  REGISTRY,  DEFAULT_NAME);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value),  REGISTRY,  DEFAULT_NAME);	  register(new    IDKey(value),    REGISTRY,    value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
235	[BUG]  [BUGGY]  register(new  IDKey(value.getClass(),  value),  iConstant);  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass(),  value),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass(),  value),  iConstant);	  register(new    IDKey(value.getClass(),    value));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
236	[BUG]  [BUGGY]  Registers.register(value,  new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  Registers.register(value,  new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	Registers.register(value,  new  IDKey(value));	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
237	[BUG]  [BUGGY]  Registers.register(new  IDKey(value));  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  Registers.register(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	Registers.register(new  IDKey(value));	  if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
238	[BUG]  [BUGGY]  register(value,  iTotal);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  iTotal);	  register(value,    REGISTRY,    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
239	[BUG]  [BUGGY]  register(new  IDKey(value.getClass(),  value.getClass()  +  1));  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass(),  value.getClass()  +  1));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass(),  value.getClass()  +  1));	  register(new    IDKey(value.getClass(),    value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
240	[BUG]  [BUGGY]  register(new  IDKey(value),  REGISTRY,  iTotal  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value),  REGISTRY,  iTotal  +  1);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value),  REGISTRY,  iTotal  +  1);	  register(new    IDKey(value),    REGISTRY,    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
241	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  StackOverflowError  	45	4	add
242	[BUG]  [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(value  instanceof  IDKey)  {  register(new  IDKey(value));  if(value  instanceof  IDKey)  {  register(new  IDKey(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  StackOverflowError  	45	4	add
243	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  iTotal);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().register(new  IDKey(value),  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().register(new  IDKey(value),  iTotal);	  getRegistry().register(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
244	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(value,  iTotal  +  1));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(value,  iTotal  +  1));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(value,  iTotal  +  1));	  getRegistry().add(new    IDValue(value,    iTotal));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
245	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(key),  value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDKey(key),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDKey(key),  value);	  getRegistry().add(new    IDKey(key));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
246	[BUG]  [BUGGY]  if(value!=  null)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value!=  null)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value!=  null)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    register(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
247	[BUG]  [BUGGY]  register(new  IDKey(value,  REGISTRY,  iConstant);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  REGISTRY,  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  REGISTRY,  iConstant);	  register(new    IDKey(value,    iConstant,    REGISTRY);    	non-compiled	[CE]  ')'  expected	68	None	replace
248	[BUG]  [BUGGY]  register(new  IDKey(value,  iConstant,  REGISTRY));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  iConstant,  REGISTRY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  iConstant,  REGISTRY));	  register(new    IDKey(value,    iConstant,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
249	[BUG]  [BUGGY]  register(new  IDKey(value,  iConstant,  1);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  iConstant,  1);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  iConstant,  1);	  register(new    IDKey(value,    iConstant,    REGISTRY);    	non-compiled	[CE]  ')'  expected	68	None	replace
250	[BUG]  [BUGGY]  getRegy().add(new  IDKey(value),  REGISTRY);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegy().add(new  IDKey(value),  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegy().add(new  IDKey(value),  REGISTRY);	          getRegistry().add(new    IDKey(value));    getRegy().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
251	[BUG]  [BUGGY]  register(value,  iConstant,  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  iConstant,  1);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  iConstant,  1);	  register(value,    REGISTRY,    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
252	[BUG]  [BUGGY]  register(value,  iTotal,  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  iTotal,  1);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  iTotal,  1);	  register(value,    REGISTRY,    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
253	[BUG]  [BUGGY]  register(new  IDKey(iConstant),  value);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iConstant),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iConstant),  value);	  register(new    IDKey(value),    value);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
254	[BUG]  [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDValue(value));  getRegistry().add(new  IDValue(value));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDKey(value));  getRegistry().add(new  IDValue(value));  getRegistry().add(new  IDValue(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                getRegistry().add(new        IDKey(value));        getRegistry().add(new    IDKey(value));    getRegistry().add(new  IDValue(value));  getRegistry().add(new  IDValue(value));	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
255	[BUG]  [BUGGY]  register(new  IDKey(value,  iConstant,  DEFAULT_NON_ZeroOddNumber);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  iConstant,  DEFAULT_NON_ZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  iConstant,  DEFAULT_NON_ZeroOddNumber);	  register(new    IDKey(value,    iConstant,    REGISTRY);    	non-compiled	[CE]  ')'  expected	68	None	replace
256	[BUG]  [BUGGY]  if(value  instanceof  IOdatableIDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IOdatableIDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IOdatableIDKey)  {  register(new  IDKey(value));  }  else  {  getRegistry().add(new  IDKey(value));  }	          register(new    IDKey(value));    if(value    instanceof    IDKey)    {    register(new    IDKey(value));    }    else    {    getRegistry().add(new    IDKey(value));    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
257	[BUG]  [BUGGY]  register(new  IDKey(value,  iConstant.getClass()));  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value,  iConstant.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value,  iConstant.getClass()));	          register(new    IDKey(value.getClass()));    validate(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
258	[BUG]  [BUGGY]  register(new  IDKey(iConstant));  getRegistry().add(new  IDKey(iConstant));  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iConstant));  getRegistry().add(new  IDKey(iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iConstant));  getRegistry().add(new  IDKey(iConstant));	          register(new    IDKey(value));    getRegistry().add(new    IDKey(key));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
259	[BUG]  [BUGGY]  register(new  IDKey(iTotal  -  1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal  -  1));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal  -  1));	  register(new    IDKey(iTotal    +    1));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
260	[BUG]  [BUGGY]  getRegistry().remove(new  IDValue(value),  iTotal);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().remove(new  IDValue(value),  iTotal);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().remove(new  IDValue(value),  iTotal);	  getRegistry().remove(new    IDValue(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
261	[BUG]  [BUGGY]  getRegistry().remove(new  IDValue(value,  iTotal));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().remove(new  IDValue(value,  iTotal));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().remove(new  IDValue(value,  iTotal));	  getRegistry().remove(new    IDValue(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
262	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	63	4	add
263	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().remove(new    IDKey(value));    getRegistry().remove(new  IDKey(value));  getRegistry().remove(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	63	4	add
264	[BUG]  [BUGGY]  getRaw().add(new  IDKey(iConstant));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRaw().add(new  IDKey(iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRaw().add(new  IDKey(iConstant));	          getRegistry().add(new    IDKey(value));    getRaw().add(new    IDKey(value));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
265	[BUG]  [BUGGY]  if(value!=  null)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value!=  null)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value!=  null)  {  register(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  }	          register(new    IDKey(value.getClass()));    getRegistry().add(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
266	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  getregistry().add(new  IDKey(value.getClass()));  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  getRegistry().add(new  IDKey(value.getClass()));  getregistry().add(new  IDKey(value.getClass()));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        getRegistry().add(new    IDKey(value.getClass()));    getRegistry().add(new  IDKey(value.getClass()));  getregistry().add(new  IDKey(value.getClass()));	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
267	[BUG]  [BUGGY]  register(new  IDKey(value.toString()),  iTotal);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.toString()),  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.toString()),  iTotal);	  register(new    IDKey(value.toString()));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
268	[BUG]  [BUGGY]  getRegistry().remove(new  IDKey(iConstant));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().remove(new  IDKey(iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().remove(new  IDKey(iConstant));	  getRegistry().add(new    IDKey(regextant));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
269	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(iConstant));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().register(new  IDKey(iConstant));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().register(new  IDKey(iConstant));	  getRegistry().add(new    IDKey(regextant));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
270	[BUG]  [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  validate(value);  getRegistry().add(new  IDKey(value));  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    getRegistry().add(new  IDKey(value));  validate(value);  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        getRegistry().add(new    IDKey(value));    validate(value);  getRegistry().add(new  IDKey(value));	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
271	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value));        register(new    IDKey(value));    getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	39	4	add
272	[BUG]  [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value));    register(new  IDKey(value));  getRegistry().add(new  IDKey(value));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value));        register(new    IDKey(value));    getRegistry().add(new  IDKey(value));	  	compilable	  [FE]  StackOverflowError  	39	4	add
273	[BUG]  [BUGGY]  register(new  IDKey(value.getClass(),  value.getClass()),  iConstant);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass(),  value.getClass()),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass(),  value.getClass()),  iConstant);	  register(new    IDKey(value.getClass(),    value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
274	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	add	                register(new        IDKey(value.getClass()));        if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }	  	compilable	  [FE]  StackOverflowError  	50	4	add
275	[BUG]  [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]          register(new    IDKey(value.getClass()));    if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	                register(new        IDKey(value.getClass()));        if(value!=    null)    {    register(new    IDKey(value.getClass()));    }    if(value.getClass()!=  null)  {  register(new  IDKey(value.getClass()));  if(value!=  null)  {  register(new  IDKey(value.getClass()));  }  }	  	compilable	  [FE]  StackOverflowError  	50	4	add
276	[BUG]  [BUGGY]  register(new  IDKey(value.getClass(),  DEFAULT_ID_KEY));  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value.getClass(),  DEFAULT_ID_KEY));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value.getClass(),  DEFAULT_ID_KEY));	  register(new    IDKey(value.getClass(),    value));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
277	[BUG]  [BUGGY]  getRegistry().add(new  IDKey(iConstant),  value);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDKey(iConstant),  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDKey(iConstant),  value);	  getRegistry().add(new    IDKey(value),    value);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
278	[BUG]  [BUGGY]  getRegistry().register(new  IDKey(value),  iConstant);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().register(new  IDKey(value),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().register(new  IDKey(value),  iConstant);	  getRegistry().add(new    IDKey(value),    value);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
279	[BUG]  [BUGGY]  register(value,  REGISTRY,  new  ThreadLocal(),  iTotal);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  REGISTRY,  new  ThreadLocal(),  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  REGISTRY,  new  ThreadLocal(),  iTotal);	  register(value,    REGISTRY,    new    ThreadLocal());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
280	[BUG]  [BUGGY]  register(value,  REGISTRY,  new  ThreadLocal(),  iConstant);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(value,  REGISTRY,  new  ThreadLocal(),  iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(value,  REGISTRY,  new  ThreadLocal(),  iConstant);	  register(value,    REGISTRY,    new    ThreadLocal());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
281	[BUG]  [BUGGY]  register(new  IDKey(iTotal,  iConstant  +  1));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iTotal,  iConstant  +  1));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iTotal,  iConstant  +  1));	  register(new    IDKey(iTotal,    iConstant));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
282	[BUG]  [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().remove(new  IDKey(value.getClass()));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().remove(new  IDKey(value.getClass()));  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	if(value  instanceof  IDKey)  {  register(new  IDKey(value.getClass()));  }  else  {  getRegistry().remove(new  IDKey(value.getClass()));  }	          register(new    IDKey(value.getClass()));    register(new    IDKey(value.getClass()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
283	[BUG]  [BUGGY]  register(iConstant,  value,  REGISTRY,  iTotal);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(iConstant,  value,  REGISTRY,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(iConstant,  value,  REGISTRY,  iTotal);	  register(iConstant,    value,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
284	[BUG]  [BUGGY]  register(new  IDKey(iConstant),  value,  REGISTRY);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(iConstant),  value,  REGISTRY);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(iConstant),  value,  REGISTRY);	  register(new    IDKey(value),    iConstant,    REGISTRY);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
285	[BUG]  [BUGGY]  validate(iTotal,  iConstant));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  validate(iTotal,  iConstant));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	validate(iTotal,  iConstant));	  register(new    IDKey(iConstant,    iTotal));    	non-compiled	[CE]  ';'  expected	11	None	replace
286	[BUG]  [BUGGY]  register(new  IDKey(value),  iConstant,  value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  register(new  IDKey(value),  iConstant,  value);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	register(new  IDKey(value),  iConstant,  value);	  register(new    IDKey(value),    REGISTRY,    value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
287	[BUG]  [BUGGY]  getRegistry().add(new  IDValue(value),  iTotal,  iConstant);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  void  register(Object  value)  {  getRegistry().add(new  IDKey(value));      [BUGGY]  getRegistry().add(new  IDValue(value),  iTotal,  iConstant);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  register  [RETURN_TYPE]  void  Object  value  [VARIABLES]  Object  value  boolean  ThreadLocal  REGISTRY  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	523	523	1	replace	getRegistry().add(new  IDValue(value),  iTotal,  iConstant);	  getRegistry().add(new    IDValue(value),    iTotal);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
