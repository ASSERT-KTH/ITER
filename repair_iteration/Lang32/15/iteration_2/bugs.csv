bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  iConstant  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  for(int  iConstant  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  iConstant  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue    ==    null)    {    for(int    iConstant    =    0;    iConstant    <    fieldValue.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getDeclaredFields();  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue    ==    null)    {    for(int    iConstant    =    0;    iConstant    <    fieldValue.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue    ==    null)    {    for(int    iConstant    =    0;    iConstant    <    fieldValue.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getFields();  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  Field[]  fields  =  clazz.getFields();  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getFields();  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue    ==    null)    {    for(int    iConstant    =    0;    iConstant    <    fieldValue.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException ",  e);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException ",  e);  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException ",  e);	  throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e.getMessage());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e.getMessage());  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e.getMessage());	  throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: ");  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException: ");	  throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  builder.append(object);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  builder.append(object);  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(object);	      builder.append(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  builder.append(iConstant);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  builder.append(iConstant);  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(iConstant);	      builder.append(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
10	[BUG]  [BUGGY]  builder.append(this.fieldValue);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  builder.append(this.fieldValue);  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(this.fieldValue);	      builder.append(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  builder.append(field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  builder.append(field);  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(field);	      builder.append(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getDeclaredFields();	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  fieldValue  =  fieldValue.cloneTree();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  fieldValue  =  fieldValue.cloneTree();  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  =  fieldValue.cloneTree();	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getFields();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  Field[]  fields  =  clazz.getFields();  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getFields();	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  ThreadLocal.getInstance(fieldValue);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  ThreadLocal.getInstance(fieldValue);  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(fieldValue);	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  if(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  If(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  If(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	If(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }	      if(fieldValue    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    getFieldValue(i);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  Field[]  fields  =  getFields();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  Field[]  fields  =  getFields();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  getFields();	      if(fieldValue    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    getFieldValue(i);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  fieldValue[i]  =  getFieldValue(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  fieldValue[i]  =  getFieldValue(i);  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  getFieldValue(i);	      if(fieldValue    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    getFieldValue(i);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  if(object  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(object  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(object  ==  null)  {  throw  new  IllegalAccessException( " ");  }	      if(fieldValue    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  If(object  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  If(object  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	If(object  ==  null)  {  throw  new  IllegalAccessException( " ");  }	      if(fieldValue    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  	10	None	replace
23	[BUG]  [BUGGY]  if(object  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(object  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(object  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  If(object  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  If(object  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	If(object  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }	      if(fieldValue    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    fieldValue[i];    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getFields();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  Field[]  fields  =  clazz.getFields();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getFields();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }	      if(fieldValue    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    fieldValue[i];    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  fieldValue[i]  =  fieldValue[i];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  fieldValue[i]  =  fieldValue[i];  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  fieldValue[i];	      if(fieldValue    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    fieldValue[i];    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
28	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
29	[BUG]  [BUGGY]  if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " ".getMessage());  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
30	[BUG]  [BUGGY]  if(fieldValue!=  null)  {  for(int  iConstant  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(fieldValue!=  null)  {  for(int  iConstant  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue!=  null)  {  for(int  iConstant  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue    ==    null)    {    for(int    iConstant    =    0;    iConstant    <    fieldValue.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  if(fields!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(fields!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fields!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  fields[i]  =  getFieldValue(i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  fields[i]  =  getFieldValue(i);  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields[i]  =  getFieldValue(i);	      if(fieldValue    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    getFieldValue(i);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  builder.append(includeFields[iConstant]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  builder.append(includeFields[iConstant]);  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(includeFields[iConstant]);	      builder.append(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  builder.append(includeFields[iTotal]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  builder.append(includeFields[iTotal]);  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(includeFields[iTotal]);	      builder.append(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
35	[BUG]  [BUGGY]  safeMultiply(fieldValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  safeMultiply(fieldValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	safeMultiply(fieldValue)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
36	[BUG]  [BUGGY]  if(fieldValue  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(fieldValue  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  if(fieldValue  ==  null  ||  excludeFields!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(fieldValue  ==  null  ||  excludeFields!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null  ||  excludeFields!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  if(!useTransients)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(!useTransients)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(!useTransients)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
39	[BUG]  [BUGGY]  if(fields  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(fields  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fields  ==  null)  {  throw  new  IllegalAccessException( " ");  }	      if(fieldValue    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " ",  fieldValue);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " ",  fieldValue);  }  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " ",  fieldValue);  }	  if(fieldValue!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
41	[BUG]  [BUGGY]  if(fieldValue  ==  null)  {  throw  new  IllegalStateException( ". ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(fieldValue  ==  null)  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null)  {  throw  new  IllegalStateException( ". ");  }	  if(fieldValue!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  if(fields  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(fields  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fields  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ".);  }	      if(fieldValue    ==    null)    {    for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  builder.append('n');  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  builder.append('n');  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append('n');	      builder.append(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }	      if(fieldValue    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    getFieldValue(i);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  if(fieldValue  ==  null  ||  excludeFields.length  <  1)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(fieldValue  ==  null  ||  excludeFields.length  <  1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null  ||  excludeFields.length  <  1)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  IllegalArgumentException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  fieldValue  =  fieldValue.getClass();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  fieldValue  =  fieldValue.getClass();  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  =  fieldValue.getClass();	  if(fieldValue!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }	  throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException. ");  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException. ");  [BUGGY]      [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException. ");	  throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  if(fieldValue!=  null)  {  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(   "Unexpected  IllegalAccessException   ");  }  }  }  }  finally  {  unregister(object);  }    [BUGGY]  if(fieldValue!=  null)  {  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue!=  null)  {  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	      if(fieldValue    ==    null)    {    for(int    iConstant    =    0;    iConstant    <    fieldValue.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
