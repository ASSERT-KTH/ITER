bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  fieldValue  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  ==  null)  {  throw  new  IllegalAccessException( " ");  }	  if(fields    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
2	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	aughtExceptionHandler.throwInternal();	  if(fields    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
3	[BUG]  [BUGGY]  if(excludeFields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
4	[BUG]  [BUGGY]  if(excludeFields  ==  null  ||  fieldValue.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields  ==  null  ||  fieldValue.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields  ==  null  ||  fieldValue.length  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
5	[BUG]  [BUGGY]  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
6	[BUG]  [BUGGY]  if(excludeFields  ==  null  ||  excludeFields.length!=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields  ==  null  ||  excludeFields.length!=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields  ==  null  ||  excludeFields.length!=  0)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    findFieldValue(i);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fieldValues.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  fieldValues.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fieldValues.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    findFieldValue(i);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
9	[BUG]  [BUGGY]  Field[]  fields  =  getFieldValues();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  getFieldValues();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  getFieldValues();	  Field[]    fields    =    getFields();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
10	[BUG]  [BUGGY]  Field[]  fields  =  getDeclaredFields();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  getDeclaredFields();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  getDeclaredFields();	  Field[]    fields    =    getFields();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
11	[BUG]  [BUGGY]  Field[]  fields  =  getFields(fieldValue);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  getFields(fieldValue);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  getFields(fieldValue);	  Field[]    fields    =    getFields();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
12	[BUG]  [BUGGY]  While(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  While(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	While(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  If(object!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	17	None	replace
13	[BUG]  [BUGGY]  ThreadLocal.getInstance();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance();	  If(object!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  builder.append(fieldValue[iTotal]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(fieldValue[iTotal]);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(fieldValue[iTotal]);	  builder.append(includeFields[iTotal]);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
15	[BUG]  [BUGGY]  builder.append(includeFields[iTotal  -  1]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(includeFields[iTotal  -  1]);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(includeFields[iTotal  -  1]);	  builder.append(includeFields[iTotal]);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
16	[BUG]  [BUGGY]  builder.append(includeFields[iTotal  +  1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(includeFields[iTotal  +  1]);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(includeFields[iTotal  +  1]);	  builder.append(includeFields[iTotal]);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
17	[BUG]  [BUGGY]  if(excludeFields  ==  null  ||  excludeFields.length  <  1)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields  ==  null  ||  excludeFields.length  <  1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields  ==  null  ||  excludeFields.length  <  1)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields.length    <    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
18	[BUG]  [BUGGY]  if(excludeFields!=  null  ||  excludeFields.length  <  1)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields!=  null  ||  excludeFields.length  <  1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields!=  null  ||  excludeFields.length  <  1)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields.length    <    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
19	[BUG]  [BUGGY]  if(excludeFields  ==  null  ||  excludeFields.length  <  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields  ==  null  ||  excludeFields.length  <  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields  ==  null  ||  excludeFields.length  <  2)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields.length    <    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
20	[BUG]  [BUGGY]  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException. ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException. ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException. ");  }	  if(!useTransients)    {    throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
21	[BUG]  [BUGGY]  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ",  excludeFields[iTotal]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ",  excludeFields[iTotal]);  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ",  excludeFields[iTotal]);  }	  if(!useTransients)    {    throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
22	[BUG]  [BUGGY]  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ",  e);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ",  e);  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ",  e);  }	  if(!useTransients)    {    throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
23	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    getFieldValue(i);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fieldValues.length;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  fieldValues.length;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fieldValues.length;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    getFieldValue(i);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fieldValues.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  fieldValues.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fieldValues.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    fieldValue[i];    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  fieldValue[i]  =  fieldValue[i];  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    fieldValue[i];    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
28	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  for(int  iTotal  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  for(int  iTotal  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getDeclaredFields();  for(int  iTotal  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  Field[]    fields    =    clazz.getDeclaredFields();    for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  for(int  iConstant  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  for(int  iConstant  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getDeclaredFields();  for(int  iConstant  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  Field[]    fields    =    clazz.getDeclaredFields();    for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getDeclaredFields();  for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  Field[]    fields    =    clazz.getDeclaredFields();    for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  fieldValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
32	[BUG]  [BUGGY]  ThreadLocal.getInstance().reportError( "Unexpected  field  value: "  +  clazz.getName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance().reportError( "Unexpected  field  value: "  +  clazz.getName());  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance().reportError( "Unexpected  field  value: "  +  clazz.getName());	  if(fields    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
33	[BUG]  [BUGGY]  fieldValue  =  object.getClass();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  =  object.getClass();  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  =  object.getClass();	  fieldValue    =    fieldValue.getClass();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
34	[BUG]  [BUGGY]  fieldValue  =  clazz.getClass();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  =  clazz.getClass();  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  =  clazz.getClass();	  fieldValue    =    fieldValue.getClass();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
35	[BUG]  [BUGGY]  fieldValue  =  this.fieldValue.getClass();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  =  this.fieldValue.getClass();  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  =  this.fieldValue.getClass();	  fieldValue    =    fieldValue.getClass();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
36	[BUG]  [BUGGY]  for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  int  iConstant  =  0;  iTotal  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  int  iConstant  =  0;  iTotal  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	int  iConstant  =  0;  iTotal  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	3	None	replace
38	[BUG]  [BUGGY]  for(int  iConstant  =  0;  iTotal  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  iConstant  =  0;  iTotal  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  iConstant  =  0;  iTotal  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Throwables.throw  new  IllegalStateException( " "));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
40	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(fieldValue));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(fieldValue));  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(fieldValue));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
41	[BUG]  [BUGGY]  if(useTransients)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(useTransients)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(useTransients)  {  throw  new  IllegalStateException( " ");  }	  if(!useTransients)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
42	[BUG]  [BUGGY]  ThreadLocal.getInstance().unregister(object);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance().unregister(object);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance().unregister(object);	  if(object    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
43	[BUG]  [BUGGY]  ThreadLocal.getInstance(fieldValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(fieldValue));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(fieldValue));	  if(object    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	23	None	replace
44	[BUG]  [BUGGY]  fieldValue[i]  =  object;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[i]  =  object;  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  object;	  fieldValue[i]    =    fieldValue[i];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
45	[BUG]  [BUGGY]  fieldValue[i]  =  clazz.getSuperclass();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[i]  =  clazz.getSuperclass();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  clazz.getSuperclass();	  fieldValue[i]    =    fieldValue[i];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
46	[BUG]  [BUGGY]  fieldValue[i]  =  clazz.getRawClass();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[i]  =  clazz.getRawClass();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  clazz.getRawClass();	  fieldValue[i]    =    fieldValue[i];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
47	[BUG]  [BUGGY]  fieldValue[i]  =  clazz.getDeclaredField(fieldValue[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[i]  =  clazz.getDeclaredField(fieldValue[i]);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  clazz.getDeclaredField(fieldValue[i]);	  fieldValue[i]    =    fieldValue[i];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
48	[BUG]  [BUGGY]  fieldValue  =  object.cloneTree();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  =  object.cloneTree();  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  =  object.cloneTree();	  fieldValue    =    fieldValue.cloneTree();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
49	[BUG]  [BUGGY]  fieldValue  =  clazz.cloneTree();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  =  clazz.cloneTree();  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  =  clazz.cloneTree();	  fieldValue    =    fieldValue.cloneTree();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  fieldValue  =  getFieldValue(fieldValue);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  =  getFieldValue(fieldValue);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  =  getFieldValue(fieldValue);	  fieldValue    =    fieldValue.cloneTree();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
52	[BUG]  [BUGGY]  builder.append('N');  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append('N');  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append('N');	  builder.append('n');    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
53	[BUG]  [BUGGY]  builder.append('n',  iTotal);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append('n',  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append('n',  iTotal);	  builder.append('n');    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
54	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e);	  throw    new    InternalError(   "Unexpected    IllegalAccessException:   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e.toString());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e.toString());  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e.toString());	  throw    new    InternalError(   "Unexpected    IllegalAccessException:   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  builder.append(iTotal);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(iTotal);	  builder.append(iConstant);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
57	[BUG]  [BUGGY]  ThreadLocal.getInstance().reportError( "Unexpected  field  value: "  +  fieldValue);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance().reportError( "Unexpected  field  value: "  +  fieldValue);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance().reportError( "Unexpected  field  value: "  +  fieldValue);	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
58	[BUG]  [BUGGY]  ThreadLocal.getInstance().reportError( "Missing  field  value: "  +  fieldValue);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance().reportError( "Missing  field  value: "  +  fieldValue);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance().reportError( "Missing  field  value: "  +  fieldValue);	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
59	[BUG]  [BUGGY]  for(int  iTotal  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  iTotal  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  iTotal  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    iConstant    =    0;    iConstant    <    fieldValue.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
60	[BUG]  [BUGGY]  for(int  iConstant  =  0;  iTotal  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  iConstant  =  0;  iTotal  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  iConstant  =  0;  iTotal  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    iConstant    =    0;    iConstant    <    fieldValue.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    iConstant    =    0;    iConstant    <    fieldValue.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  if(excludeFields  ==  null  ||  fieldValue!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields  ==  null  ||  fieldValue!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields  ==  null  ||  fieldValue!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
63	[BUG]  [BUGGY]  if(excludeFields  ==  null  ||  fieldValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields  ==  null  ||  fieldValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields  ==  null  ||  fieldValue  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
64	[BUG]  [BUGGY]  if(excludeFields!=  null  ||  fieldValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields!=  null  ||  fieldValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields!=  null  ||  fieldValue  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
65	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e.getMessage(),  e);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e.getMessage(),  e);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  e.getMessage(),  e);	  throw    new    InternalError(   "Unexpected    IllegalAccessException:   "    +    e.getMessage());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
66	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  fieldValue.getMessage());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  fieldValue.getMessage());  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  fieldValue.getMessage());	  throw    new    InternalError(   "Unexpected    IllegalAccessException:   "    +    e.getMessage());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
67	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getFields();  for(int  iTotal  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getFields();  for(int  iTotal  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getFields();  for(int  iTotal  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  Field[]    fields    =    clazz.getFields();    for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getFields();  for(int  iConstant  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getFields();  for(int  iConstant  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getFields();  for(int  iConstant  =  0;  iConstant  <  excludeFields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  Field[]    fields    =    clazz.getFields();    for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getFields();  for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getFields();  for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getFields();  for(int  iTotal  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  Field[]    fields    =    clazz.getFields();    for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  fieldValue[i]  =  getFieldValue(iTotal);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[i]  =  getFieldValue(iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  getFieldValue(iTotal);	  fieldValue[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
71	[BUG]  [BUGGY]  fieldValue[i]  =  getFieldValue(object);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[i]  =  getFieldValue(object);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  getFieldValue(object);	  fieldValue[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
72	[BUG]  [BUGGY]  fieldValue[i]  =  getFieldValue(iConstant);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[i]  =  getFieldValue(iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  getFieldValue(iConstant);	  fieldValue[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
73	[BUG]  [BUGGY]  fieldValue[0]  =  getFieldValue(i);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[0]  =  getFieldValue(i);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[0]  =  getFieldValue(i);	  fieldValue[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
74	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getDeclaredFields();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }	  Field[]    fields    =    clazz.getFields();    for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    fieldValue[i];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
75	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getReferences();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getReferences();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getReferences();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }	  Field[]    fields    =    clazz.getFields();    for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    fieldValue[i];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
76	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getSuperclasses();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getSuperclasses();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getSuperclasses();  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }	  Field[]    fields    =    clazz.getFields();    for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    fieldValue[i];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
77	[BUG]  [BUGGY]  builder.append(fieldValue[iConstant]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(fieldValue[iConstant]);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(fieldValue[iConstant]);	  builder.append(includeFields[iConstant]);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
78	[BUG]  [BUGGY]  builder.append(objectValue[iConstant]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(objectValue[iConstant]);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(objectValue[iConstant]);	  builder.append(includeFields[iConstant]);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
79	[BUG]  [BUGGY]  builder.append(includeFields[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(includeFields[0]);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(includeFields[0]);	  builder.append(includeFields[iConstant]);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
80	[BUG]  [BUGGY]  if(fieldValue  ==  null)  {  builder.append(object);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue  ==  null)  {  builder.append(object);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null)  {  builder.append(object);  }  else  {  throw  new  IllegalStateException( " ");  }	  builder.append(object);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  if(fieldValue!=  null)  {  builder.append(object);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue!=  null)  {  builder.append(object);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue!=  null)  {  builder.append(object);  }  else  {  throw  new  IllegalStateException( " ");  }	  builder.append(object);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  if(fieldValue  ==  null)  {  builder.append(object);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue  ==  null)  {  builder.append(object);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null)  {  builder.append(object);  }	  builder.append(object);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  fields[i]  =  getFieldValue(object);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields[i]  =  getFieldValue(object);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields[i]  =  getFieldValue(object);	  fields[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
84	[BUG]  [BUGGY]  fields[i]  =  getFieldValue(iTotal);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields[i]  =  getFieldValue(iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields[i]  =  getFieldValue(iTotal);	  fields[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
85	[BUG]  [BUGGY]  fields[i]  =  getFieldValue(field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields[i]  =  getFieldValue(field);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields[i]  =  getFieldValue(field);	  fields[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
86	[BUG]  [BUGGY]  builder.append(this.fieldValue,  iTotal);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(this.fieldValue,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(this.fieldValue,  iTotal);	  builder.append(this.fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
87	[BUG]  [BUGGY]  builder.append(this.fieldValue,  this.iConstant);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(this.fieldValue,  this.iConstant);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(this.fieldValue,  this.iConstant);	  builder.append(this.fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
88	[BUG]  [BUGGY]  safeAdd(fieldValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  safeAdd(fieldValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	safeAdd(fieldValue)  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(fieldValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	35	None	replace
89	[BUG]  [BUGGY]  safeMultiply(object)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  safeMultiply(object)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	safeMultiply(object)  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(fieldValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	35	None	replace
90	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields(fieldValue);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields(fieldValue);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getDeclaredFields(fieldValue);	  Field[]    fields    =    clazz.getDeclaredFields();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
91	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getSuperclassFields();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getSuperclassFields();  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getSuperclassFields();	  Field[]    fields    =    clazz.getDeclaredFields();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
92	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getStaticFields();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getStaticFields();  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getStaticFields();	  Field[]    fields    =    clazz.getFields();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
93	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getReferences();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getReferences();  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getReferences();	  Field[]    fields    =    clazz.getFields();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
94	[BUG]  [BUGGY]  Field[]  fields  =  fieldValue.split( ", ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  fieldValue.split( ", ");  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  fieldValue.split( ", ");	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ",    fieldValue);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
95	[BUG]  [BUGGY]  Field[]  fields  =  fieldValue.split( ": ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  fieldValue.split( ": ");  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  fieldValue.split( ": ");	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ",    fieldValue);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
96	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException ",  e,  fieldValue);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException ",  e,  fieldValue);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException ",  e,  fieldValue);	  throw    new    InternalError(   "Unexpected    IllegalAccessException   ",    e);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
97	[BUG]  [BUGGY]  ThreadLocal.getInstance(fieldValue,  builder);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(fieldValue,  builder);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(fieldValue,  builder);	  ThreadLocal.getInstance(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  ThreadLocal.getInstance(object);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(object);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(object);	  ThreadLocal.getInstance(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
99	[BUG]  [BUGGY]  ThreadLocal.getInstance(object,  fieldValue);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(object,  fieldValue);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(object,  fieldValue);	  ThreadLocal.getInstance(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
100	[BUG]  [BUGGY]  ThreadLocal.getInstance(builder,  fieldValue);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(builder,  fieldValue);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(builder,  fieldValue);	  ThreadLocal.getInstance(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
101	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  clazz);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  clazz);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Throwables.throw  new  IllegalStateException( " "  +  clazz);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
102	[BUG]  [BUGGY]  fields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
103	[BUG]  [BUGGY]  if(fields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
104	[BUG]  [BUGGY]  fields  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
105	[BUG]  [BUGGY]  safeMultiply(fieldValue)  {  throw  new  IllegalStateException( ". ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  safeMultiply(fieldValue)  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	safeMultiply(fieldValue)  {  throw  new  IllegalStateException( ". ");  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  	41	None	replace
106	[BUG]  [BUGGY]  if(fieldValue!=  null)  {  throw  new  IllegalStateException( " ",  fieldValue);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue!=  null)  {  throw  new  IllegalStateException( " ",  fieldValue);  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue!=  null)  {  throw  new  IllegalStateException( " ",  fieldValue);  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ",    fieldValue);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
107	[BUG]  [BUGGY]  if(excludeFields!=  null  ||  excludeFields.length  <  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields!=  null  ||  excludeFields.length  <  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields!=  null  ||  excludeFields.length  <  2)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields.length    <    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
108	[BUG]  [BUGGY]  if(fieldValue  ==  null  ||  excludeFields  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue  ==  null  ||  excludeFields  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null  ||  excludeFields  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
109	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException ",  e.getMessage());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException ",  e.getMessage());  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException ",  e.getMessage());	  throw    new    InternalError(   "Unexpected    IllegalAccessException   ",    e);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
110	[BUG]  [BUGGY]  int  iConstant  =  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  int  iConstant  =  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	int  iConstant  =  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	43	None	replace
111	[BUG]  [BUGGY]  fields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalAccessException( " ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalAccessException( " ");  }	  if(fields    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
112	[BUG]  [BUGGY]  fields  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields  ==  null)  {  throw  new  IllegalAccessException( " ");  }	  if(fields    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
113	[BUG]  [BUGGY]  if(fields  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fields  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fields  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(fields    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
114	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields(excludeFields);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getDeclaredFields(excludeFields);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getDeclaredFields(excludeFields);	  Field[]    fields    =    clazz.getDeclaredFields();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
115	[BUG]  [BUGGY]  if(field  ==  null)  {  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(field  ==  null)  {  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(field  ==  null)  {  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }	  if(!useTransients)    {    throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
116	[BUG]  [BUGGY]  if(field!=  null)  {  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(field!=  null)  {  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(field!=  null)  {  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }	  if(!useTransients)    {    throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
117	[BUG]  [BUGGY]  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ",  excludeFields);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ",  excludeFields);  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ",  excludeFields);  }	  if(!useTransients)    {    throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
118	[BUG]  [BUGGY]  If(object  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  If(object  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	If(object  ==  null)  {  throw  new  IllegalStateException( " ");  }	  If(object    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
119	[BUG]  [BUGGY]  AllFieldValues(fieldValues,  null)  {  throw  new  IllegalAccessException( " ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  AllFieldValues(fieldValues,  null)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	AllFieldValues(fieldValues,  null)  {  throw  new  IllegalAccessException( " ");  }	  If(object    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
120	[BUG]  [BUGGY]  if(fieldValue  ==  null)  {  builder.append(object);  }  else  {  unregister(object);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue  ==  null)  {  builder.append(object);  }  else  {  unregister(object);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null)  {  builder.append(object);  }  else  {  unregister(object);  }	  builder.append(object);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
121	[BUG]  [BUGGY]  if(fieldValue  ==  null)  {  builder.append(object);  }  else  {  unregister(fieldValue);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue  ==  null)  {  builder.append(object);  }  else  {  unregister(fieldValue);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null)  {  builder.append(object);  }  else  {  unregister(fieldValue);  }	  builder.append(object);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
122	[BUG]  [BUGGY]  ThreadLocal.getInstance(fieldValue)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(fieldValue)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(fieldValue)  {  throw  new  IllegalArgumentException( " ");  }	  If(object    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	24	None	replace
123	[BUG]  [BUGGY]  If(object  ==  null)  {  throw  new  IllegalArgumentException( " ",  fieldValue);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  If(object  ==  null)  {  throw  new  IllegalArgumentException( " ",  fieldValue);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	If(object  ==  null)  {  throw  new  IllegalArgumentException( " ",  fieldValue);  }	  If(object    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	24	None	replace
124	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getFields(fieldValue);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getFields(fieldValue);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getFields(fieldValue);	  Field[]    fields    =    clazz.getFields();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
125	[BUG]  [BUGGY]  Field[]  fields  =  clazz.getSuperclasses();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  clazz.getSuperclasses();  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  clazz.getSuperclasses();	  Field[]    fields    =    clazz.getFields();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
126	[BUG]  [BUGGY]  fieldValue[i]  =  clazz;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[i]  =  clazz;  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  clazz;	  fieldValue[i]    =    fieldValue[i];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
127	[BUG]  [BUGGY]  fieldValue[i]  =  excludeFields[i];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[i]  =  excludeFields[i];  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  excludeFields[i];	  fieldValue[i]    =    fieldValue[i];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
128	[BUG]  [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  getFieldValue(i);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    getFieldValue(i);    }    	non-compiled	[CE]  >  expected	18	None	replace
129	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: ",  e);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: ",  e);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException: ",  e);	  throw    new    InternalError(   "Unexpected    IllegalAccessException:   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
130	[BUG]  [BUGGY]  Field[]  fields  =  getFields().toArray(fields);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Field[]  fields  =  getFields().toArray(fields);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Field[]  fields  =  getFields().toArray(fields);	  Field[]    fields    =    getFields();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
131	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
132	[BUG]  [BUGGY]  ThreadLocal.getInstance(fieldValue).unregister(object);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(fieldValue).unregister(object);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(fieldValue).unregister(object);	  if(object    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
133	[BUG]  [BUGGY]  fields!=  null  &&  fields.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields!=  null  &&  fields.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields!=  null  &&  fields.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
134	[BUG]  [BUGGY]  fields!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
135	[BUG]  [BUGGY]  if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " ").getMessage();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " ").getMessage();  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " ").getMessage();  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
136	[BUG]  [BUGGY]  if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " "  +  fieldValue.getMessage());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " "  +  fieldValue.getMessage());  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null)  {  throw  new  IllegalStateException( " "  +  fieldValue.getMessage());  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
137	[BUG]  [BUGGY]  fieldValue  =  getFieldValue(object);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  =  getFieldValue(object);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  =  getFieldValue(object);	  fieldValue    =    fieldValue.getClass();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
138	[BUG]  [BUGGY]  fieldValue[i]  =  getFieldValue(object,  iTotal);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[i]  =  getFieldValue(object,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  getFieldValue(object,  iTotal);	  fieldValue[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
139	[BUG]  [BUGGY]  fieldValue[i]  =  findFieldValue(i);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue[i]  =  findFieldValue(i);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue[i]  =  findFieldValue(i);	  fieldValue[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
140	[BUG]  [BUGGY]  builder.append(this.fieldValue,  clazz);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(this.fieldValue,  clazz);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(this.fieldValue,  clazz);	  builder.append(this.fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
141	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  clazz.getMessage());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  clazz.getMessage());  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  clazz.getMessage());	  throw    new    InternalError(   "Unexpected    IllegalAccessException:   "    +    e.getMessage());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
142	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  object.getMessage());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  object.getMessage());  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException: "  +  object.getMessage());	  throw    new    InternalError(   "Unexpected    IllegalAccessException:   "    +    e.getMessage());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
143	[BUG]  [BUGGY]  ThreadLocal.getInstance(fieldValue)  {  throw  new  IllegalAccessException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(fieldValue)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(fieldValue)  {  throw  new  IllegalAccessException( " ");  }	  if(object    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  	21	None	replace
144	[BUG]  [BUGGY]  mutationAppend(fieldValue,  null)  {  throw  new  IllegalAccessException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  mutationAppend(fieldValue,  null)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	mutationAppend(fieldValue,  null)  {  throw  new  IllegalAccessException( " ");  }	  if(object    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  	21	None	replace
145	[BUG]  [BUGGY]  ThreadLocal.getInstance(fieldValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(fieldValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(fieldValue)  {  throw  new  IllegalStateException( " ");  }	  if(object    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  	21	None	replace
146	[BUG]  [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  fieldValue[i];  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    fieldValue[i];    }    	non-compiled	[CE]  >  expected	25	None	replace
147	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fields!=  null)  {  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fields!=  null)  {  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  if(fieldValue!=    null)    {    for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
148	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  iConstant  =  0;  iConstant  <  field.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fields!=  null)  {  for(int  iConstant  =  0;  iConstant  <  field.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fields!=  null)  {  for(int  iConstant  =  0;  iConstant  <  field.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  if(fieldValue!=    null)    {    for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
149	[BUG]  [BUGGY]  AllFieldValues(fieldValues,  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  AllFieldValues(fieldValues,  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	AllFieldValues(fieldValues,  null)  {  throw  new  IllegalArgumentException( " ");  }	  If(object!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	17	None	replace
150	[BUG]  [BUGGY]  builder.append( ", ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append( ", ");  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append( ", ");	  builder.append(field);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
151	[BUG]  [BUGGY]  builder.append( "n ");  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append( "n ");  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append( "n ");	  builder.append(field);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
152	[BUG]  [BUGGY]  builder.append(excludeFields[iTotal  -  1]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(excludeFields[iTotal  -  1]);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(excludeFields[iTotal  -  1]);	  builder.append(includeFields[iTotal]);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
153	[BUG]  [BUGGY]  builder.append('[');  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append('[');  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append('[');	  builder.append('n');    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
154	[BUG]  [BUGGY]  fields[i]  =  getFieldValue(object,  iTotal);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields[i]  =  getFieldValue(object,  iTotal);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields[i]  =  getFieldValue(object,  iTotal);	  fields[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
155	[BUG]  [BUGGY]  fields[i]  =  getField(object);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields[i]  =  getField(object);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields[i]  =  getField(object);	  fields[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
156	[BUG]  [BUGGY]  parent  ==  null  &&!useTransients)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  parent  ==  null  &&!useTransients)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	parent  ==  null  &&!useTransients)  {  throw  new  IllegalStateException( " ");  }	  if(!useTransients)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	38	None	replace
157	[BUG]  [BUGGY]  parent!=  null  &&!useTransients)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  parent!=  null  &&!useTransients)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	parent!=  null  &&!useTransients)  {  throw  new  IllegalStateException( " ");  }	  if(!useTransients)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	38	None	replace
158	[BUG]  [BUGGY]  if(!useTransients  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(!useTransients  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(!useTransients  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(!useTransients)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  excludeFields.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  excludeFields.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  excludeFields.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    findFieldValue(i);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
160	[BUG]  [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  findFieldValue(i);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    findFieldValue(i);    }    	non-compiled	[CE]  >  expected	45	None	replace
161	[BUG]  [BUGGY]  mutationAppend(fieldValue,  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  mutationAppend(fieldValue,  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	mutationAppend(fieldValue,  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(object!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	16	None	replace
162	[BUG]  [BUGGY]  if(excludeFields!=  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields!=  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields!=  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
163	[BUG]  [BUGGY]  if(!useTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(!useTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(!useTransients)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  objectValue[i];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  objectValue[i];  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  objectValue[i];  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    fieldValue[i];    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
165	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  object[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  object[i];  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  object[i];  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    fieldValue[i];    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
166	[BUG]  [BUGGY]  builder.append(objectValue[iTotal]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(objectValue[iTotal]);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(objectValue[iTotal]);	  builder.append(includeFields[iTotal]);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
167	[BUG]  [BUGGY]  if(excludeFields!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(excludeFields!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(excludeFields!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(fieldValue    ==    null    ||    excludeFields!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
168	[BUG]  [BUGGY]  if(fieldValue  ==  null)  {  builder.append(fieldValue);  }  else  {  unregister(fieldValue);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue  ==  null)  {  builder.append(fieldValue);  }  else  {  unregister(fieldValue);  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null)  {  builder.append(fieldValue);  }  else  {  unregister(fieldValue);  }	  builder.append(object);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
169	[BUG]  [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException.  Possible: ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  throw  new  InternalError( "Unexpected  IllegalAccessException.  Possible: ");  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	throw  new  InternalError( "Unexpected  IllegalAccessException.  Possible: ");	  throw    new    InternalError(   "Unexpected    IllegalAccessException.   ");    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
171	[BUG]  [BUGGY]  ThreadLocal.getInstance(fieldValue,  object)  {  throw  new  IllegalAccessException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(fieldValue,  object)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(fieldValue,  object)  {  throw  new  IllegalAccessException( " ");  }	  if(object    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  	21	None	replace
172	[BUG]  [BUGGY]  ThreadLocal.getInstance(fieldValue,  object)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(fieldValue,  object)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(fieldValue,  object)  {  throw  new  IllegalStateException( " ");  }	  if(object    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  	21	None	replace
173	[BUG]  [BUGGY]  ThreadLocal.getInstance().reportError( "Missing  field  value: "  +  clazz.getName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance().reportError( "Missing  field  value: "  +  clazz.getName());  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance().reportError( "Missing  field  value: "  +  clazz.getName());	  if(object    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
174	[BUG]  [BUGGY]  ThreadLocal.If(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.If(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.If(object!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  If(object!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	17	None	replace
175	[BUG]  [BUGGY]  Class  <?>  clazz  =  object.getClass();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Class  <?>  clazz  =  object.getClass();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Class  <?>  clazz  =  object.getClass();	  If(object!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
176	[BUG]  [BUGGY]  Class  <?>  clazz  =  object.getComponentType();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Class  <?>  clazz  =  object.getComponentType();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Class  <?>  clazz  =  object.getComponentType();	  If(object!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
177	[BUG]  [BUGGY]  ThreadLocal.If(object  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.If(object  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.If(object  ==  null)  {  throw  new  IllegalStateException( " ");  }	  If(object    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
178	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ")).initCause(fieldValue);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  aught(new  IllegalArgumentException( " ")).initCause(fieldValue);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	aught(new  IllegalArgumentException( " ")).initCause(fieldValue);	  if(object!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
179	[BUG]  [BUGGY]  aught(new  IllegalStateException( " ")).initCause(fieldValue);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  aught(new  IllegalStateException( " ")).initCause(fieldValue);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	aught(new  IllegalStateException( " ")).initCause(fieldValue);	  if(object!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
180	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ")));  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  aught(new  IllegalArgumentException( " ")));  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	aught(new  IllegalArgumentException( " ")));	  if(object!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	16	None	replace
181	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ")).initCause(this);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  aught(new  IllegalArgumentException( " ")).initCause(this);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	aught(new  IllegalArgumentException( " ")).initCause(this);	  if(object!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
182	[BUG]  [BUGGY]  parent  ==  null  ||!useTransients)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  parent  ==  null  ||!useTransients)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	parent  ==  null  ||!useTransients)  {  throw  new  IllegalStateException( " ");  }	  if(!useTransients)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	38	None	replace
183	[BUG]  [BUGGY]  if(!useTransients  &&  excludeFields.length  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(!useTransients  &&  excludeFields.length  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(!useTransients  &&  excludeFields.length  >  0)  {  throw  new  IllegalStateException( " ");  }	  if(!useTransients)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
184	[BUG]  [BUGGY]  fieldValue  ==  null  ||  fieldValue.isArray())  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  ==  null  ||  fieldValue.isArray())  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  ==  null  ||  fieldValue.isArray())  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	non-compiled	[CE]  not  a  statement	29	None	replace
185	[BUG]  [BUGGY]  fieldValue  ==  null  ||  fieldValue.isEmpty())  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  ==  null  ||  fieldValue.isEmpty())  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  ==  null  ||  fieldValue.isEmpty())  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	non-compiled	[CE]  not  a  statement	29	None	replace
186	[BUG]  [BUGGY]  fieldValue  ==  null  ||  fieldValue.getClass()!=  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  ==  null  ||  fieldValue.getClass()!=  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  ==  null  ||  fieldValue.getClass()!=  null)  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	non-compiled	[CE]  not  a  statement	29	None	replace
187	[BUG]  [BUGGY]  fieldValue  ==  null  ||  fieldValue.getClass()!=  null)  {  throw  new  IllegalStateException( " ").getMessage();  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  ==  null  ||  fieldValue.getClass()!=  null)  {  throw  new  IllegalStateException( " ").getMessage();  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  ==  null  ||  fieldValue.getClass()!=  null)  {  throw  new  IllegalStateException( " ").getMessage();  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	non-compiled	[CE]  not  a  statement	29	None	replace
188	[BUG]  [BUGGY]  if(fieldValue  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( ". ");  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
189	[BUG]  [BUGGY]  if(fieldValue  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(fieldValue  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(fieldValue  ==  null  ||  excludeFields.length  ==  0)  {  throw  new  IllegalStateException( " ".);  }	  if(fieldValue    ==    null)    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
190	[BUG]  [BUGGY]  parent  ==  null  &&!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  parent  ==  null  &&!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	parent  ==  null  &&!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }	  if(!useTransients)    {    throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
191	[BUG]  [BUGGY]  if(!useTransients  &&  excludeFields.length  >  0)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  if(!useTransients  &&  excludeFields.length  >  0)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	if(!useTransients  &&  excludeFields.length  >  0)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }	  if(!useTransients)    {    throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
192	[BUG]  [BUGGY]  parent  ==  null  ||!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  parent  ==  null  ||!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	parent  ==  null  ||!useTransients)  {  throw  new  InternalError( "Unexpected  IllegalAccessException ");  }	  if(!useTransients)    {    throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
193	[BUG]  [BUGGY]  fields[i]  =  getFieldValue(fieldValue);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields[i]  =  getFieldValue(fieldValue);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields[i]  =  getFieldValue(fieldValue);	  fields[i]    =    getFieldValue(i);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
194	[BUG]  [BUGGY]  ThreadLocal.getInstance(base,  fieldValue);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance(base,  fieldValue);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance(base,  fieldValue);	  ThreadLocal.getInstance(fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
195	[BUG]  [BUGGY]  fieldValue  =  this.fieldValue.cloneTree();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  =  this.fieldValue.cloneTree();  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  =  this.fieldValue.cloneTree();	  fieldValue    =    fieldValue.cloneTree();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
196	[BUG]  [BUGGY]  String[]  fields  =  clazz.getDeclaredFields();  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  String[]  fields  =  clazz.getDeclaredFields();  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	String[]  fields  =  clazz.getDeclaredFields();  for(int  iConstant  =  0;  iConstant  <  fields.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  Field[]    fields    =    clazz.getDeclaredFields();    for(int    iConstant    =    0;    iConstant    <    fields.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
197	[BUG]  [BUGGY]  ThreadLocal.getInstance().reportError( "Missing  field  value. ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.getInstance().reportError( "Missing  field  value. ");  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.getInstance().reportError( "Missing  field  value. ");	  if(object    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
198	[BUG]  [BUGGY]  fieldValue  =  clazz.getFieldValue(fieldValue);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fieldValue  =  clazz.getFieldValue(fieldValue);  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fieldValue  =  clazz.getFieldValue(fieldValue);	  fieldValue    =    fieldValue.getClass();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
199	[BUG]  [BUGGY]  ThreadLocal.If(object  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  ThreadLocal.If(object  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	ThreadLocal.If(object  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  If(object    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	24	None	replace
200	[BUG]  [BUGGY]  for(int  i  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  iConstant  <  fieldValue.length;  iTotal++)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    iConstant    =    0;    iConstant    <    fieldValue.length;    iTotal++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
201	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	Throwables.throw  new  IllegalStateException( " ")	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  object;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  object;  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  fieldValue[i]  =  object;  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    fieldValue[i]    =    getFieldValue(i);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
203	[BUG]  [BUGGY]  fields  ==  null  ||  excludeFields.length  <  2)  {  throw  new  IllegalAccessException( " ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields  ==  null  ||  excludeFields.length  <  2)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields  ==  null  ||  excludeFields.length  <  2)  {  throw  new  IllegalAccessException( " ");  }	  if(fields    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
204	[BUG]  [BUGGY]  fields!=  null  &&  excludeFields.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  fields!=  null  &&  excludeFields.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	fields!=  null  &&  excludeFields.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
205	[BUG]  [BUGGY]  builder.append(this.fieldValue,  object);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  builder.append(this.fieldValue,  object);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	builder.append(this.fieldValue,  object);	  builder.append(this.fieldValue);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
206	[BUG]  [BUGGY]  safeMultiply(objectValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (IllegalAccessException  e)  {    throw  new  InternalError(     "Unexpected  IllegalAccessException     ");  }  }  }  }  finally  {  unregister(object);  }      [BUGGY]  safeMultiply(objectValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	198	198	1	replace	safeMultiply(objectValue)  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(fieldValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	35	None	replace
