bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  append((  double[])object,  iTotal);  [CE]  no  suitable  method  found  for  append(double[],int)  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  double[])object,  iTotal);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  iTotal);	      append((    double[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(double[],int)	4	None	replace
2	[BUG]  [BUGGY]  append((  double[])object,  iConstant);  [CE]  no  suitable  method  found  for  append(double[],int)  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  double[])object,  iConstant);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  iConstant);	      append((    double[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(double[],int)	4	None	replace
3	[BUG]  [BUGGY]  append((  double[])object,  0);  [CE]  no  suitable  method  found  for  append(double[],int)  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  double[])object,  0);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  0);	      append((    double[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(double[],int)	4	None	replace
4	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.toString();  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.toString();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  object.toString();	  iTotal    =    iTotal    *    iConstant    +    object.toString();    	non-compiled	[CE]  incompatible  types	12	None	replace
5	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.toString();  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.toString();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iTotal.toString();	  iTotal    =    iTotal    *    iConstant    +    object.toString();    	non-compiled	[CE]  int  cannot  be  dereferenced	12	None	replace
6	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  UUID.format(object,  iTotal.toString());  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  UUID.format(object,  iTotal.toString());  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  UUID.format(object,  iTotal.toString());	  iTotal    =    iTotal    *    iConstant    +    object.toString();    	non-compiled	[CE]  int  cannot  be  dereferenced	12	None	replace
7	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  append((  Object[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	        append((    Object[])object);    append((  Object[])object);	  	compilable	  [FE]  ClassCastException  	1	9	add
8	[BUG]  [BUGGY]      append((  Object[])object);  append((  Object[])object);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  append((  Object[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    Object[])object);    append((  Object[])object);	  	compilable	  [FE]  ClassCastException  	1	9	add
9	[BUG]  [BUGGY]      append((  Object[])object);  if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }  [CE]  'else'  without  'if'  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    Object[])object);    if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
10	[BUG]  [BUGGY]      append((  Object[])object);  if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    Object[])object);    if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
11	[BUG]  [BUGGY]      append((  Object[])object);  if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  Object[])object);  }  [CE]  'else'  without  'if'  [FE]          ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  Object[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    Object[])object);    if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  Object[])object);  }	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
12	[BUG]  [BUGGY]      append((  Object[])object);  if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    Object[])object);    if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
13	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.getClass().getName();  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.getClass().getName();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  object.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    	non-compiled	[CE]  incompatible  types	11	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	11	8	replace
15	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	11	8	replace
16	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.intValue();  [CE]  int  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.intValue();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iTotal.intValue();	  iTotal    =    iTotal    *    iConstant    +    object.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	19	None	replace
17	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.intValue();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.intValue();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  object.intValue();	  iTotal    =    iTotal    *    iConstant    +    object.intValue();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
18	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.intValue();  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.intValue();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  value.intValue();	  iTotal    =    iTotal    *    iConstant    +    object.intValue();    	non-compiled	[CE]  cannot  find  symbol  value	19	None	replace
19	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  append((  String[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	        append((    String[])object);    append((  String[])object);	  	compilable	  [FE]  ClassCastException  	7	9	add
20	[BUG]  [BUGGY]      append((  String[])object);  append((  String[])object);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  append((  String[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    String[])object);    append((  String[])object);	  	compilable	  [FE]  ClassCastException  	7	9	add
21	[BUG]  [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [CE]  'else'  without  'if'  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    String[])object);    if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
22	[BUG]  [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    String[])object);    if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
23	[BUG]  [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  String[])object);  }  [CE]  'else'  without  'if'  [FE]          ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  String[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    String[])object);    if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  String[])object);  }	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
24	[BUG]  [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [CE]  'else'  without  'if'  [FE]            ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    String[])object);    if((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
25	[BUG]  [BUGGY]  append((  int[])object,  iTotal);  [CE]  no  suitable  method  found  for  append(int[],int)  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  int[])object,  iTotal);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,  iTotal);	      append((    int[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(int[],int)	15	None	replace
26	[BUG]  [BUGGY]  append((  int[])object,  iConstant);  [CE]  no  suitable  method  found  for  append(int[],int)  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  int[])object,  iConstant);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,  iConstant);	      append((    int[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(int[],int)	15	None	replace
27	[BUG]  [BUGGY]  append((  int[])object,  0);  [CE]  no  suitable  method  found  for  append(int[],int)  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  int[])object,  0);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,  0);	      append((    int[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(int[],int)	15	None	replace
28	[BUG]  [BUGGY]  append((  String[])object,  iTotal);  [CE]  no  suitable  method  found  for  append(String[],int)  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  String[])object,  iTotal);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  iTotal);	      append((    String[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(String[],int)	8	None	replace
29	[BUG]  [BUGGY]  append((  String[])object,  iConstant);  [CE]  no  suitable  method  found  for  append(String[],int)  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  String[])object,  iConstant);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  iConstant);	      append((    String[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(String[],int)	8	None	replace
30	[BUG]  [BUGGY]  append((  String[])object,  0);  [CE]  no  suitable  method  found  for  append(String[],int)  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  String[])object,  0);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  0);	      append((    String[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(String[],int)	8	None	replace
31	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  append((  double[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	        append((    double[])object);    append((  double[])object);	  	compilable	  [FE]  ClassCastException  	3	9	add
32	[BUG]  [BUGGY]      append((  double[])object);  append((  double[])object);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  append((  double[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    double[])object);    append((  double[])object);	  	compilable	  [FE]  ClassCastException  	3	9	add
33	[BUG]  [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [CE]  'else'  without  'if'  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    double[])object);    if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
34	[BUG]  [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    double[])object);    if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
35	[BUG]  [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]          ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    double[])object);    if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
36	[BUG]  [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [CE]  'else'  without  'if'  [FE]            ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    double[])object);    if((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
37	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.toString().getClass().getName();  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.toString().getClass().getName();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  object.toString().getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    object.getClass().getName();    	non-compiled	[CE]  incompatible  types	13	None	replace
38	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.getClass().getName();  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.getClass().getName();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  REGISTRY.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    object.getClass().getName();    	non-compiled	[CE]  incompatible  types	13	None	replace
39	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  item.getClass().getName();  [CE]  cannot  find  symbol  item  [FE]                AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  item.getClass().getName();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  item.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    object.getClass().getName();    	non-compiled	[CE]  cannot  find  symbol  item	13	None	replace
40	[BUG]  [BUGGY]  append((  Object[])object,  iTotal);  [CE]  no  suitable  method  found  for  append(Object[],int)  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  Object[])object,  iTotal);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iTotal);	      append((    Object[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(Object[],int)	2	None	replace
41	[BUG]  [BUGGY]  append((  Object[])object,  1);  [CE]  no  suitable  method  found  for  append(Object[],int)  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  Object[])object,  1);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  1);	      append((    Object[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(Object[],int)	2	None	replace
42	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.length();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.length();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  object.length();	  iTotal    =    iTotal    *    iConstant    +    object.length();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
43	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.length();  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.length();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iTotal.length();	  iTotal    =    iTotal    *    iConstant    +    object.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	17	None	replace
44	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  item.length();  [CE]  cannot  find  symbol  item  [FE]            AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  item.length();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  item.length();	  iTotal    =    iTotal    *    iConstant    +    object.length();    	non-compiled	[CE]  cannot  find  symbol  item	17	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	        iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	5	8	add
46	[BUG]  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	5	8	add
47	[BUG]  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  item.hashCode();  [CE]  cannot  find  symbol  item  [FE]      AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  item.hashCode();  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  item.hashCode();	  	non-compiled	[CE]  cannot  find  symbol  item	5	None	add
48	[BUG]  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iconstant  +  object.hashCode();  [CE]  cannot  find  symbol  iconstant  [FE]        AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iconstant  +  object.hashCode();  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iconstant  +  object.hashCode();	  	non-compiled	[CE]  cannot  find  symbol  iconstant	5	None	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();	      iTotal    =    iTotal    *    iConstant    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	6	8	replace
50	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();	      iTotal    =    iTotal    *    iConstant    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	6	8	replace
51	[BUG]  [BUGGY]  append0((  Object[])object,  iTotal);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append0((  Object[])object,  iTotal);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  Object[])object,  iTotal);	      append0((    Object[])object);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
52	[BUG]  [BUGGY]  append0((  Object[])object,  iConstant);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append0((  Object[])object,  iConstant);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  Object[])object,  iConstant);	      append0((    Object[])object);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
53	[BUG]  [BUGGY]  append0((  String[])object);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append0((  String[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  String[])object);	      append0((    Object[])object);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
54	[BUG]  [BUGGY]  append0((  Object[])object,  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append0((  Object[])object,  1);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  Object[])object,  1);	      append0((    Object[])object);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
55	[BUG]  [BUGGY]  append((  Object[])object,  iTotal,  iConstant);  [CE]  no  suitable  method  found  for  append(Object[],int,int)  [FE]        AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  Object[])object,  iTotal,  iConstant);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iTotal,  iConstant);	      append((    Object[])object,    iConstant);    	non-compiled	[CE]  no  suitable  method  found  for  append(Object[],int,int)	20	None	replace
56	[BUG]  [BUGGY]  append((  Object[])object,  iConstant,  value);  [CE]  cannot  find  symbol  value  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  Object[])object,  iConstant,  value);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iConstant,  value);	      append((    Object[])object,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  value	20	None	replace
57	[BUG]  [BUGGY]  append((  Object[])object,  iConstant,  iTotal);  [CE]  no  suitable  method  found  for  append(Object[],int,int)  [FE]            AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  Object[])object,  iConstant,  iTotal);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iConstant,  iTotal);	      append((    Object[])object,    iConstant);    	non-compiled	[CE]  no  suitable  method  found  for  append(Object[],int,int)	20	None	replace
58	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  int[])object);  append((  int[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	        append((    int[])object);    append((  int[])object);	  	compilable	  [FE]  ClassCastException  	14	9	add
59	[BUG]  [BUGGY]      append((  int[])object);  append((  int[])object);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  int[])object);  append((  int[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    int[])object);    append((  int[])object);	  	compilable	  [FE]  ClassCastException  	14	9	add
60	[BUG]  [BUGGY]      append((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }  [CE]  'else'  without  'if'  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    int[])object);    if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }	  	non-compiled	[CE]  'else'  without  'if'	14	None	add
61	[BUG]  [BUGGY]      append((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    int[])object);    if((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
62	[BUG]  [BUGGY]      append((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    int[])object);    if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  	14	None	add
63	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.hashCode();  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.hashCode();	  iTotal    =    iTotal    *    iConstant    +    value.hashCode();    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	18	None	replace
64	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.hashCode();  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iTotal.hashCode();	  iTotal    =    iTotal    *    iConstant    +    value.hashCode();    	non-compiled	[CE]  int  cannot  be  dereferenced	18	None	replace
65	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iNonZeroOddNumber.hashCode();  [CE]  cannot  find  symbol  iNonZeroOddNumber  [FE]              AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iNonZeroOddNumber.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iNonZeroOddNumber.hashCode();	  iTotal    =    iTotal    *    iConstant    +    value.hashCode();    	non-compiled	[CE]  cannot  find  symbol  iNonZeroOddNumber	18	None	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	10	8	add
67	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	10	8	add
68	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	10	None	add
69	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  [CE]  cannot  find  symbol  item  [FE]        AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();	  	non-compiled	[CE]  cannot  find  symbol  item	10	None	add
70	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  item.hashCode();  [CE]  cannot  find  symbol  item  [FE]                AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  item.hashCode();  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  item.hashCode();	      iTotal    =    iTotal    *    iConstant.hashCode();    	non-compiled	[CE]  cannot  find  symbol  item	9	None	replace
71	[BUG]  [BUGGY]  iTotal  =  iConstant  *  iTotal.hashCode();  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iConstant  *  iTotal.hashCode();  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iConstant  *  iTotal.hashCode();	      iTotal    =    iTotal    *    iConstant.hashCode();    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
72	[BUG]  [BUGGY]      append((  Object[])object);  if((  Object[])object);  [CE]  incompatible  types  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  if((  Object[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    Object[])object);    if((  Object[])object);	  	non-compiled	[CE]  incompatible  types	1	None	add
73	[BUG]  [BUGGY]      append((  Object[])object);  Append((  Object[])object);  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  Append((  Object[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    Object[])object);    Append((  Object[])object);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
74	[BUG]  [BUGGY]      append((  Object[])object);  validate((  Object[])object);  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  validate((  Object[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    Object[])object);    validate((  Object[])object);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
75	[BUG]  [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    String[])object);    if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
76	[BUG]  [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  [CE]  'else'  without  'if'  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    String[])object);    if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
77	[BUG]  [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  i  [CE]  'else'  without  'if'  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  i  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    String[])object);    if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  i	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();	  iTotal    =    iTotal    *    iConstant    +    value.hashCode();    	compilable	  [FE]  AssertionFailedError  	18	8	replace
79	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();	  iTotal    =    iTotal    *    iConstant    +    value.hashCode();    	compilable	  [FE]  AssertionFailedError  	18	8	replace
80	[BUG]  [BUGGY]      append((  int[])object);  Append((  int[])object);  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  int[])object);  Append((  int[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    int[])object);    Append((  int[])object);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
81	[BUG]  [BUGGY]      append((  int[])object);  if((  int[])object);  [CE]  incompatible  types  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  int[])object);  if((  int[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    int[])object);    if((  int[])object);	  	non-compiled	[CE]  incompatible  types	14	None	add
82	[BUG]  [BUGGY]      append((  int[])object);  applyCode((  int[])object);  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  int[])object);  applyCode((  int[])object);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    int[])object);    applyCode((  int[])object);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
83	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.intValue();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.intValue();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  REGISTRY.intValue();	  iTotal    =    iTotal    *    iConstant    +    object.intValue();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
84	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iCONstant  +  object.getClass().getName();  [CE]  cannot  find  symbol  iCONstant  [FE]            AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iCONstant  +  object.getClass().getName();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iCONstant  +  object.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    object.getClass().getName();    	non-compiled	[CE]  cannot  find  symbol  iCONstant	13	None	replace
85	[BUG]  [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  [CE]  'else'  without  'if'  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    double[])object);    if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
86	[BUG]  [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  i  [CE]  'else'  without  'if'  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  i  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    double[])object);    if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  i	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
87	[BUG]  [BUGGY]  append((  Object[])object,  refNonZeroOddNumber,  iConstant);  [CE]  cannot  find  symbol  refNonZeroOddNumber  [FE]        AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  Object[])object,  refNonZeroOddNumber,  iConstant);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  refNonZeroOddNumber,  iConstant);	      append((    Object[])object,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  refNonZeroOddNumber	20	None	replace
88	[BUG]  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        iTotal    =    iTotal    *    iConstant    +    object.hashCode();    int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	5	None	add
89	[BUG]  [BUGGY]  append((  Object[])object,  value);  [CE]  cannot  find  symbol  value  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  Object[])object,  value);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  value);	      append((    Object[])object);    	non-compiled	[CE]  cannot  find  symbol  value	2	None	replace
90	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  Integer  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  Integer  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    Integer  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	10	None	add
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	10	8	add
92	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	10	8	add
93	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.toString();  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.toString();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  REGISTRY.toString();	  iTotal    =    iTotal    *    iConstant    +    object.toString();    	non-compiled	[CE]  incompatible  types	12	None	replace
94	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.toString();  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.toString();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  value.toString();	  iTotal    =    iTotal    *    iConstant    +    object.toString();    	non-compiled	[CE]  cannot  find  symbol  value	12	None	replace
95	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  DEFAULT_TYPE.toString();  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]              AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  DEFAULT_TYPE.toString();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  DEFAULT_TYPE.toString();	  iTotal    =    iTotal    *    iConstant    +    object.toString();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	12	None	replace
96	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.length();  [CE]  cannot  find  symbol  value  [FE]        AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.length();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  value.length();	  iTotal    =    iTotal    *    iConstant    +    object.length();    	non-compiled	[CE]  cannot  find  symbol  value	17	None	replace
97	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  property.length();  [CE]  cannot  find  symbol  property  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  property.length();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  property.length();	  iTotal    =    iTotal    *    iConstant    +    object.length();    	non-compiled	[CE]  cannot  find  symbol  property	17	None	replace
98	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iconstant  +  object.length();  [CE]  cannot  find  symbol  iconstant  [FE]        AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iconstant  +  object.length();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iconstant  +  object.length();	  iTotal    =    iTotal    *    iConstant    +    object.length();    	non-compiled	[CE]  cannot  find  symbol  iconstant	17	None	replace
99	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.toString();  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.toString();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.toString();	  iTotal    =    iTotal    *    iConstant    +    object.toString();    	non-compiled	[CE]  incompatible  types	12	None	replace
100	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  DEFAULT_NAME_SIZE  +  object.toString();  [CE]  cannot  find  symbol  DEFAULT_NAME_SIZE  [FE]            AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  DEFAULT_NAME_SIZE  +  object.toString();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  DEFAULT_NAME_SIZE  +  object.toString();	  iTotal    =    iTotal    *    iConstant    +    object.toString();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME_SIZE	12	None	replace
101	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iconstant  +  object.hashCode();  [CE]  cannot  find  symbol  iconstant  [FE]                AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iconstant  +  object.hashCode();  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iconstant  +  object.hashCode();	      iTotal    =    iTotal    *    iConstant.hashCode();    	non-compiled	[CE]  cannot  find  symbol  iconstant	9	None	replace
102	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	        append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	  	compilable	  [FE]  ClassCastException  	1	9	add
103	[BUG]  [BUGGY]      append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	  	compilable	  [FE]  ClassCastException  	1	9	add
104	[BUG]  [BUGGY]      append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant;  append((  Object[])object);  }  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant;  append((  Object[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant;  append((  Object[])object);  }	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	1	None	add
105	[BUG]  [BUGGY]      append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  Object[])object);  }  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  Object[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  Object[])object);  }	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	1	None	add
106	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.intValue();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.intValue();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.intValue();	  iTotal    =    iTotal    *    iConstant    +    object.intValue();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
107	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.intValue();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.intValue();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  2  +  object.intValue();	  iTotal    =    iTotal    *    iConstant    +    object.intValue();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
108	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	        append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }	  	compilable	  [FE]  ClassCastException  	3	9	add
109	[BUG]  [BUGGY]      append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }	  	compilable	  [FE]  ClassCastException  	3	9	add
110	[BUG]  [BUGGY]      append((  double[])object);  if((  double[])object);  if(iTotal  ==  0)  {  append((  double[])object);  }  [CE]  incompatible  types  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  if((  double[])object);  if(iTotal  ==  0)  {  append((  double[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    double[])object);    if((  double[])object);  if(iTotal  ==  0)  {  append((  double[])object);  }	  	non-compiled	[CE]  incompatible  types	3	None	add
111	[BUG]  [BUGGY]      append((  double[])object);  if((  double[])object);  if(iTotal!=  0)  {  append((  double[])object);  }  [CE]  incompatible  types  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  if((  double[])object);  if(iTotal!=  0)  {  append((  double[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    double[])object);    if((  double[])object);  if(iTotal!=  0)  {  append((  double[])object);  }	  	non-compiled	[CE]  incompatible  types	3	None	add
112	[BUG]  [BUGGY]      append((  double[])object);  if((  double[])object);  if(iTotal!=  iTotal)  {  append((  double[])object);  }  [CE]  incompatible  types  [FE]          ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  double[])object);  if((  double[])object);  if(iTotal!=  iTotal)  {  append((  double[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    double[])object);    if((  double[])object);  if(iTotal!=  iTotal)  {  append((  double[])object);  }	  	non-compiled	[CE]  incompatible  types	3	None	add
113	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iconstant  +  object.getClass().getName();  [CE]  cannot  find  symbol  iconstant  [FE]            AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iconstant  +  object.getClass().getName();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iconstant  +  object.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    object.getClass().getName();    	non-compiled	[CE]  cannot  find  symbol  iconstant	13	None	replace
114	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iValue.hashCode();  [CE]  cannot  find  symbol  iValue  [FE]          AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iValue.hashCode();  [BUGGY]    }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iValue.hashCode();	  iTotal    =    iTotal    *    iConstant    +    value.hashCode();    	non-compiled	[CE]  cannot  find  symbol  iValue	18	None	replace
115	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	        append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }	  	compilable	  [FE]  ClassCastException  	7	9	add
116	[BUG]  [BUGGY]      append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }	  	compilable	  [FE]  ClassCastException  	7	9	add
117	[BUG]  [BUGGY]      append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant;  append((  String[])object);  }  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant;  append((  String[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant;  append((  String[])object);  }	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	7	None	add
118	[BUG]  [BUGGY]      append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  String[])object);  }  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]        ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  String[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  String[])object);  }	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	7	None	add
119	[BUG]  [BUGGY]      append((  int[])object);  if((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  else  {  append((  int[])object);  }  [CE]  incompatible  types  [FE]    ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  int[])object);  if((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  else  {  append((  int[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    int[])object);    if((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  else  {  append((  int[])object);  }	  	non-compiled	[CE]  incompatible  types	14	None	add
120	[BUG]  [BUGGY]      append((  int[])object);  if((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  [CE]  incompatible  types  [FE]      ClassCastException    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]      append((  int[])object);  if((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	        append((    int[])object);    if((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }	  	non-compiled	[CE]  incompatible  types	14	None	add
121	[BUG]  [BUGGY]  append((  Object[])object,  initialNonZeroOddNumber,  iConstant);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]        AssertionFailedError    [CONTEXT]    append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {    [BUGGY]  append((  Object[])object,  initialNonZeroOddNumber,  iConstant);  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  initialNonZeroOddNumber,  iConstant);	      append((    Object[])object,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	20	None	replace
