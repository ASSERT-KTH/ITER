bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    append((  Object[])object);  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	    append((  Object[])object);		compilable	  [FE]  ClassCastException  	58	9	add
2	[BUG]  [BUGGY]    append((  Object[])object);  [FE]  ClassCastException  [FE]    AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    append((  Object[])object);  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	    append((  Object[])object);		compilable	  [FE]  ClassCastException  	58	9	add
3	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    append((  double[])object);  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	    append((  double[])object);		compilable	  [FE]  ClassCastException  	58	9	add
4	[BUG]  [BUGGY]    append((  double[])object);  [FE]  ClassCastException  [FE]      AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    append((  double[])object);  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	    append((  double[])object);		compilable	  [FE]  ClassCastException  	58	9	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	    iTotal  =  iTotal  *  iConstant  +  object.hashCode();		compilable	  [FE]  AssertionFailedError  	58	8	add
6	[BUG]  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	    iTotal  =  iTotal  *  iConstant  +  object.hashCode();		compilable	  [FE]  AssertionFailedError  	58	8	add
7	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    append((  String[])object);  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	    append((  String[])object);		compilable	  [FE]  ClassCastException  	58	9	add
8	[BUG]  [BUGGY]    append((  String[])object);  [FE]  ClassCastException  [FE]          AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    append((  String[])object);  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	    append((  String[])object);		compilable	  [FE]  ClassCastException  	58	9	add
9	[BUG]  [BUGGY]    iTotal  =  iTotal  *  iConstant.hashCode();  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    iTotal  =  iTotal  *  iConstant.hashCode();  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	    iTotal  =  iTotal  *  iConstant.hashCode();		non-compiled	[CE]  int  cannot  be  dereferenced	58	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	iTotal  =  iTotal  *  iConstant  +  object.hashCode();  	compilable	  [FE]  AssertionFailedError  	57	8	replace
11	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	iTotal  =  iTotal  *  iConstant  +  object.hashCode();  	compilable	  [FE]  AssertionFailedError  	57	8	replace
12	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.toString();  [CE]  incompatible  types  [FE]      AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.toString();  [BUGGY]  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  object.toString();	iTotal  =  iTotal  *  iConstant  +  object.hashCode();  	non-compiled	[CE]  incompatible  types	57	None	replace
13	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().getName();  [CE]  incompatible  types  [FE]        AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().getName();  [BUGGY]  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  object.getClass().getName();	iTotal  =  iTotal  *  iConstant  +  object.hashCode();  	non-compiled	[CE]  incompatible  types	57	None	replace
14	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    append((  int[])object);  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	    append((  int[])object);		compilable	  [FE]  ClassCastException  	58	9	add
15	[BUG]  [BUGGY]    append((  int[])object);  [FE]  ClassCastException  [FE]    AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    append((  int[])object);  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	    append((  int[])object);		compilable	  [FE]  ClassCastException  	58	9	add
16	[BUG]  [BUGGY]    append0((  Object[])object);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    append0((  Object[])object);  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	    append0((  Object[])object);		non-compiled	[CE]  cannot  find  symbol	58	None	add
17	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.length();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.length();  [BUGGY]  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  object.length();	iTotal  =  iTotal  *  iConstant  +  object.hashCode();  	non-compiled	[CE]  cannot  find  symbol	57	None	replace
18	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.hashCode();  [CE]  cannot  find  symbol  value  [FE]      AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.hashCode();  [BUGGY]  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  value.hashCode();	iTotal  =  iTotal  *  iConstant  +  object.hashCode();  	non-compiled	[CE]  cannot  find  symbol  value	57	None	replace
19	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.intValue();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.intValue();  [BUGGY]  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  object.intValue();	iTotal  =  iTotal  *  iConstant  +  object.hashCode();  	non-compiled	[CE]  cannot  find  symbol	57	None	replace
20	[BUG]  [BUGGY]    append((  Object[])object,  iConstant);  [CE]  no  suitable  method  found  for  append(Object[],int)  [FE]    AssertionFailedError  [CONTEXT]  append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {  [BUGGY]    append((  Object[])object,  iConstant);  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	    append((  Object[])object,  iConstant);		non-compiled	[CE]  no  suitable  method  found  for  append(Object[],int)	58	None	add
