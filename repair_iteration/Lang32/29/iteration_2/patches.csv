bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  append((  Object[])object,  iniConstant,  iTotal);  [CE]  cannot  find  symbol  iniConstant  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  iniConstant,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iniConstant,  iTotal);	  append((    Object[])object,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  iniConstant	40	None	replace
2	[BUG]  [BUGGY]  append((  Object[])object,  int  iTotal);  [CE]  '.class'  expected  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  int  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  int  iTotal);	  append((    Object[])object,    iTotal);    	non-compiled	[CE]  '.class'  expected	40	None	replace
3	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  ClassCastException  	61	9	replace
4	[BUG]  [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  ClassCastException  	61	9	replace
5	[BUG]  [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  int[])  {  append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  int[])  {  append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  AssertionFailedError  	61	8	replace
7	[BUG]  [BUGGY]  if(object  instanceof  int[])  {  append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [FE]  AssertionFailedError  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  int[])  {  append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  int[])  {  append((  int[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  AssertionFailedError  	61	8	replace
8	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  ClassCastException  	61	9	replace
9	[BUG]  [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  ClassCastException  	61	9	replace
10	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.doubleValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iTotal.doubleValue();	  iTotal    =    iTotal    *    iConstant    +    iTotal.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	16	None	replace
11	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.floatValue();  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.floatValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iTotal.floatValue();	  iTotal    =    iTotal    *    iConstant    +    iTotal.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	16	None	replace
12	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.longValue();  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.longValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iTotal.longValue();	  iTotal    =    iTotal    *    iConstant    +    iTotal.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	16	None	replace
13	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.floatValue();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.floatValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  REGISTRY.floatValue();	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.intValue();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
14	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.doubleValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.doubleValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  REGISTRY.doubleValue();	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.intValue();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
15	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  REGISTRY.intValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  REGISTRY.intValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  REGISTRY.intValue();	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.intValue();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
16	[BUG]  [BUGGY]  append((  Object[])object,  initialNonZeroOddNumber);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  initialNonZeroOddNumber);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  initialNonZeroOddNumber);	  append((    Object[])object,    value);    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	89	None	replace
17	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iType.hashCode();  [CE]  cannot  find  symbol  iType  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iType.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iType.hashCode();	  iTotal    =    iTotal    *    iConstant    +    item.hashCode();    	non-compiled	[CE]  cannot  find  symbol  iType	70	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	14	8	add
19	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	14	8	add
20	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    int  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	14	None	add
21	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  item.hashCode();  [CE]  cannot  find  symbol  item  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  item.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  item.hashCode();	  	non-compiled	[CE]  cannot  find  symbol  item	14	None	add
22	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal  ==  0)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  double[])object);  if(iTotal  ==  0)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal    ==    0)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	110	9	replace
23	[BUG]  [BUGGY]  append((  double[])object);  if(iTotal  ==  0)  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal  ==  0)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if(iTotal  ==  0)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal    ==    0)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	110	9	replace
24	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal!=  0)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  double[])object);  if(iTotal!=  0)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal    ==    0)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	110	9	replace
25	[BUG]  [BUGGY]  append((  double[])object);  if(iTotal!=  0)  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal!=  0)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if(iTotal!=  0)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal    ==    0)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	110	9	replace
26	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal  >=  0)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  double[])object);  if(iTotal  >=  0)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal    ==    0)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	110	9	replace
27	[BUG]  [BUGGY]  append((  double[])object);  if(iTotal  >=  0)  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal  >=  0)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if(iTotal  >=  0)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal    ==    0)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	110	9	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	91	8	add
29	[BUG]  [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	91	8	add
30	[BUG]  [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	91	None	add
31	[BUG]  [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [CE]  cannot  find  symbol  item  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();	  	non-compiled	[CE]  cannot  find  symbol  item	91	None	add
32	[BUG]  [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode()  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode()  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode()	  	non-compiled	[CE]  ';'  expected	91	None	add
33	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iconstant  +  object.toString().getClass().getName();  [CE]  cannot  find  symbol  iconstant  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iconstant  +  object.toString().getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iconstant  +  object.toString().getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    object.toString().getClass().getName();    	non-compiled	[CE]  cannot  find  symbol  iconstant	37	None	replace
34	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iCONstant  +  object.toString().getClass().getName();  [CE]  cannot  find  symbol  iCONstant  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iCONstant  +  object.toString().getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iCONstant  +  object.toString().getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    object.toString().getClass().getName();    	non-compiled	[CE]  cannot  find  symbol  iCONstant	37	None	replace
35	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.intValue();  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.intValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.intValue();	  iTotal    =    iTotal    *    iConstant    +    value.intValue();    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	18	None	replace
36	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iNonZeroOddNumber.intValue();  [CE]  cannot  find  symbol  iNonZeroOddNumber  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iNonZeroOddNumber.intValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iNonZeroOddNumber.intValue();	  iTotal    =    iTotal    *    iConstant    +    value.intValue();    	non-compiled	[CE]  cannot  find  symbol  iNonZeroOddNumber	18	None	replace
37	[BUG]  [BUGGY]  append((  Object[])object,  0,  1);  [CE]  no  suitable  method  found  for  append(Object[],int,int)  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  0,  1);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  0,  1);	  append((    Object[])object,    1);    	non-compiled	[CE]  no  suitable  method  found  for  append(Object[],int,int)	41	None	replace
38	[BUG]  [BUGGY]  append((  Object[])object,  1,  iTotal);  [CE]  no  suitable  method  found  for  append(Object[],int,int)  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  1,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  1,  iTotal);	  append((    Object[])object,    1);    	non-compiled	[CE]  no  suitable  method  found  for  append(Object[],int,int)	41	None	replace
39	[BUG]  [BUGGY]  append((  Object[])object,  iConstant,  initialNonZeroOddNumber);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  iConstant,  initialNonZeroOddNumber);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iConstant,  initialNonZeroOddNumber);	  append((    Object[])object,    iConstant,    value);    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	56	None	replace
40	[BUG]  [BUGGY]  append((  Object[])object,  iConstant,  iConstant);  [CE]  no  suitable  method  found  for  append(Object[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  iConstant,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iConstant,  iConstant);	  append((    Object[])object,    initialNonZeroOddNumber,    iConstant);    	non-compiled	[CE]  no  suitable  method  found  for  append(Object[],int,int)	121	None	replace
41	[BUG]  [BUGGY]  append((  Object[])object,  iConstant,  iNonZeroOddNumber);  [CE]  cannot  find  symbol  iNonZeroOddNumber  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  iConstant,  iNonZeroOddNumber);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iConstant,  iNonZeroOddNumber);	  append((    Object[])object,    initialNonZeroOddNumber,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  iNonZeroOddNumber	121	None	replace
42	[BUG]  [BUGGY]  append((  Object[])object,  iConstant,  iZeroOddNumber);  [CE]  cannot  find  symbol  iZeroOddNumber  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  iConstant,  iZeroOddNumber);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iConstant,  iZeroOddNumber);	  append((    Object[])object,    initialNonZeroOddNumber,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  iZeroOddNumber	121	None	replace
43	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }	          append((    Object[])object);    if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant;    append((    Object[])object);    }    	compilable	  [FE]  ClassCastException  	104	9	replace
44	[BUG]  [BUGGY]  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }	          append((    Object[])object);    if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant;    append((    Object[])object);    }    	compilable	  [FE]  ClassCastException  	104	9	replace
45	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object);  if(object  instanceof  boolean[])  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  Object[])object);  if(object  instanceof  boolean[])  {  append((  Object[])object);  }	          append((    Object[])object);    if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant;    append((    Object[])object);    }    	compilable	  [FE]  ClassCastException  	104	9	replace
46	[BUG]  [BUGGY]  append((  Object[])object);  if(object  instanceof  boolean[])  {  append((  Object[])object);  }  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object);  if(object  instanceof  boolean[])  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object);  if(object  instanceof  boolean[])  {  append((  Object[])object);  }	          append((    Object[])object);    if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant;    append((    Object[])object);    }    	compilable	  [FE]  ClassCastException  	104	9	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  3  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  3  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	15	8	replace
48	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  3  +  object.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  3  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  3  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	15	8	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  4  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  4  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	15	8	replace
50	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  4  +  object.hashCode();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  4  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  4  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	15	8	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  2  *  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	15	8	replace
52	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  object.hashCode();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  2  *  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	15	8	replace
53	[BUG]  [BUGGY]  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
54	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  ClassCastException  	10	9	replace
55	[BUG]  [BUGGY]  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  ClassCastException  	10	9	replace
56	[BUG]  [BUGGY]  validate((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
57	[BUG]  [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	10	None	replace
58	[BUG]  [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
59	[BUG]  [BUGGY]  validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
60	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  ClassCastException  	35	9	replace
61	[BUG]  [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  ClassCastException  	35	9	replace
62	[BUG]  [BUGGY]  validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
63	[BUG]  [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [CE]  'else'  without  'if'  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    double[])object);    }    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
64	[BUG]  [BUGGY]  validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [CE]  'else'  without  'if'  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    double[])object);    }    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1;  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  1;  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	67	8	replace
66	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1;  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1;  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1;  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	67	8	replace
67	[BUG]  [BUGGY]  nTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  nTotal  *  iConstant  +  1  +  object.hashCode();  [CE]  cannot  find  symbol  nTotal  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  nTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  nTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	nTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  nTotal  *  iConstant  +  1  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    	non-compiled	[CE]  cannot  find  symbol  nTotal	67	None	replace
68	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1;  iTotal  =  iTotal  *  iConstant  +  1  +  object.getClass().getName();  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1;  iTotal  =  iTotal  *  iConstant  +  1  +  object.getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1;  iTotal  =  iTotal  *  iConstant  +  1  +  object.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    	non-compiled	[CE]  incompatible  types	67	None	replace
69	[BUG]  [BUGGY]  append((  Object[])object,  iInitialNonZeroOddNumber,  iConstant);  [CE]  cannot  find  symbol  iInitialNonZeroOddNumber  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  iInitialNonZeroOddNumber,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iInitialNonZeroOddNumber,  iConstant);	  append((    Object[])object,    refNonZeroOddNumber,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  iInitialNonZeroOddNumber	87	None	replace
70	[BUG]  [BUGGY]  append((  int[])object,  iTotal,  iConstant);  [CE]  no  suitable  method  found  for  append(int[],int,int)  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object,  iTotal,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,  iTotal,  iConstant);	  append((    int[])object,    iConstant);    	non-compiled	[CE]  no  suitable  method  found  for  append(int[],int,int)	26	None	replace
71	[BUG]  [BUGGY]  append((  int[])object,  iConstant,  value);  [CE]  cannot  find  symbol  value  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object,  iConstant,  value);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,  iConstant,  value);	  append((    int[])object,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  value	26	None	replace
72	[BUG]  [BUGGY]  append((  int[])object,  iConstant,  iTotal);  [CE]  no  suitable  method  found  for  append(int[],int,int)  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object,  iConstant,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,  iConstant,  iTotal);	  append((    int[])object,    iConstant);    	non-compiled	[CE]  no  suitable  method  found  for  append(int[],int,int)	26	None	replace
73	[BUG]  [BUGGY]  validate((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	62	None	replace
74	[BUG]  [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	62	None	replace
75	[BUG]  [BUGGY]  validate((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	62	None	replace
76	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object);  if(!(object  instanceof  Object[]))  throw  new  IllegalArgumentException( " ");  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  Object[])object);  if(!(object  instanceof  Object[]))  throw  new  IllegalArgumentException( " ");	          append((    Object[])object);    if((    Object[])object);    	compilable	  [FE]  ClassCastException  	72	9	replace
77	[BUG]  [BUGGY]  append((  Object[])object);  if(!(object  instanceof  Object[]))  throw  new  IllegalArgumentException( " ");  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object);  if(!(object  instanceof  Object[]))  throw  new  IllegalArgumentException( " ");  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object);  if(!(object  instanceof  Object[]))  throw  new  IllegalArgumentException( " ");	          append((    Object[])object);    if((    Object[])object);    	compilable	  [FE]  ClassCastException  	72	9	replace
78	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    append((  Object[])object);  append((  Object[])object);  append((  Object[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        Object[])object);        append((    Object[])object);    append((  Object[])object);  append((  Object[])object);	  	compilable	  [FE]  ClassCastException  	7	9	add
79	[BUG]  [BUGGY]          append((    Object[])object);    append((  Object[])object);  append((  Object[])object);  append((  Object[])object);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    append((  Object[])object);  append((  Object[])object);  append((  Object[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        Object[])object);        append((    Object[])object);    append((  Object[])object);  append((  Object[])object);	  	compilable	  [FE]  ClassCastException  	7	9	add
80	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        Object[])object);        append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }	  	compilable	  [FE]  ClassCastException  	7	9	add
81	[BUG]  [BUGGY]          append((    Object[])object);    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        Object[])object);        append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }	  	compilable	  [FE]  ClassCastException  	7	9	add
82	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        Object[])object);        append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  append((  Object[])object);  }	  	compilable	  [FE]  ClassCastException  	7	9	add
83	[BUG]  [BUGGY]          append((    Object[])object);    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        Object[])object);        append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  append((  Object[])object);  }	  	compilable	  [FE]  ClassCastException  	7	9	add
84	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        Object[])object);        append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ClassCastException  	7	9	add
85	[BUG]  [BUGGY]          append((    Object[])object);    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        Object[])object);        append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ClassCastException  	7	9	add
86	[BUG]  [BUGGY]  append((  Object[])object,  iTotal,  iConstant,  value);  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  iTotal,  iConstant,  value);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iTotal,  iConstant,  value);	  append((    Object[])object,    iTotal,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  value	55	None	replace
87	[BUG]  [BUGGY]  append((  Object[])object,  iTotal,  iConstant,  values);  [CE]  cannot  find  symbol  values  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  iTotal,  iConstant,  values);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iTotal,  iConstant,  values);	  append((    Object[])object,    iTotal,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  values	55	None	replace
88	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  Object[])object);  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  Object[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  Object[])object);	          append((    Object[])object);    if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    append((    Object[])object);    }    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	105	None	replace
89	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    Object[])object);    if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    append((    Object[])object);    }    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	105	None	replace
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  AssertionFailedError  	12	8	replace
91	[BUG]  [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [FE]  AssertionFailedError  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  AssertionFailedError  	12	8	replace
92	[BUG]  [BUGGY]  validate((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
93	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.hashCode();  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    1    +    item.hashCode();    	non-compiled	[CE]  int  cannot  be  dereferenced	69	None	replace
94	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  [CE]  cannot  find  symbol  item  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    1    +    item.hashCode();    	non-compiled	[CE]  cannot  find  symbol  item	69	None	replace
95	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  this.iConstant.hashCode();  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  this.iConstant.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  this.iConstant.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    1    +    item.hashCode();    	non-compiled	[CE]  int  cannot  be  dereferenced	69	None	replace
96	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    append((  String[])object);  append((  String[])object);  append((  String[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        String[])object);        append((    String[])object);    append((  String[])object);  append((  String[])object);	  	compilable	  [FE]  ClassCastException  	19	9	add
97	[BUG]  [BUGGY]          append((    String[])object);    append((  String[])object);  append((  String[])object);  append((  String[])object);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    append((  String[])object);  append((  String[])object);  append((  String[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        String[])object);        append((    String[])object);    append((  String[])object);  append((  String[])object);	  	compilable	  [FE]  ClassCastException  	19	9	add
98	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        String[])object);        append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }	  	compilable	  [FE]  ClassCastException  	19	9	add
99	[BUG]  [BUGGY]          append((    String[])object);    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        String[])object);        append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }	  	compilable	  [FE]  ClassCastException  	19	9	add
100	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        String[])object);        append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  append((  String[])object);  }	  	compilable	  [FE]  ClassCastException  	19	9	add
101	[BUG]  [BUGGY]          append((    String[])object);    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  append((  String[])object);  }  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        String[])object);        append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  append((  String[])object);  }	  	compilable	  [FE]  ClassCastException  	19	9	add
102	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        String[])object);        append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ClassCastException  	19	9	add
103	[BUG]  [BUGGY]          append((    String[])object);    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        String[])object);        append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ClassCastException  	19	9	add
104	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    append((  String[])object);  append((  String[])object);  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        String[])object);        append((    String[])object);    append((  String[])object);  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	compilable	  [FE]  ClassCastException  	19	9	add
105	[BUG]  [BUGGY]          append((    String[])object);    append((  String[])object);  append((  String[])object);  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    append((  String[])object);  append((  String[])object);  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        String[])object);        append((    String[])object);    append((  String[])object);  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	compilable	  [FE]  ClassCastException  	19	9	add
106	[BUG]  [BUGGY]  append0((  Object[])object,  iConstant,  iTotal);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  Object[])object,  iConstant,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  Object[])object,  iConstant,  iTotal);	  append0((    Object[])object,    iConstant);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
107	[BUG]  [BUGGY]  append0((  Object[])object,  iConstant,  value);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  Object[])object,  iConstant,  value);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  Object[])object,  iConstant,  value);	  append0((    Object[])object,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  value	52	None	replace
108	[BUG]  [BUGGY]  append0((  Object[])object,  iniConstant);  [CE]  cannot  find  symbol  iniConstant  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  Object[])object,  iniConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  Object[])object,  iniConstant);	  append0((    Object[])object,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  iniConstant	52	None	replace
109	[BUG]  [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [CE]  'else'  without  'if'  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    String[])object);    }    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
110	[BUG]  [BUGGY]  validate((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [CE]  'else'  without  'if'  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    String[])object);    }    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
111	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	24	9	replace
112	[BUG]  [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	24	9	replace
113	[BUG]  [BUGGY]  approve((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [CE]  'else'  without  'if'  [FE]                      ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  approve((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	approve((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    String[])object);    }    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  object.hashCode();  iTotal  =  iTotal  *  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  object.hashCode();  iTotal  =  iTotal  *  object.hashCode();	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iconstant    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	48	8	replace
115	[BUG]  [BUGGY]  iTotal  =  iTotal  *  object.hashCode();  iTotal  =  iTotal  *  object.hashCode();  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  object.hashCode();  iTotal  =  iTotal  *  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  object.hashCode();  iTotal  =  iTotal  *  object.hashCode();	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iconstant    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	48	8	replace
116	[BUG]  [BUGGY]  Integer  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]        AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  Integer  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	Integer  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    Integer    iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	90	None	replace
117	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    Integer    iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	90	None	replace
118	[BUG]  [BUGGY]  Integer  iTotal  =  iTotal  *  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  Integer  iTotal  =  iTotal  *  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	Integer  iTotal  =  iTotal  *  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    Integer    iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	90	None	replace
119	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  object.getClass().getName();  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  object.getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  iConstant  +  object.getClass().getName();	  iTotal    =    iTotal    *    iCONstant    +    object.getClass().getName();    	non-compiled	[CE]  incompatible  types	84	None	replace
120	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.toString();  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.toString();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.toString();	  iTotal    =    iTotal    *    iConstant    +    iTotal.toString();    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
121	[BUG]  [BUGGY]  linguri((  Object[])object);  if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  linguri((  Object[])object);  if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	linguri((  Object[])object);  if((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    append((    Object[])object);    }    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
122	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.toString();  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  +  object.toString();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  2  +  object.toString();	  iTotal    =    iTotal    *    iConstant    +    DEFAULT_NAME_SIZE    +    object.toString();    	non-compiled	[CE]  incompatible  types	100	None	replace
123	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.toString().getClass().getName();  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.toString().getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  REGISTRY.toString().getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.getClass().getName();    	non-compiled	[CE]  incompatible  types	38	None	replace
124	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.instance.getClass().getName();  [CE]  cannot  find  symbol  instance  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.instance.getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  REGISTRY.instance.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.getClass().getName();    	non-compiled	[CE]  cannot  find  symbol  instance	38	None	replace
125	[BUG]  [BUGGY]  append((  long[])object);  applyCode((  long[])object);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  long[])object);  applyCode((  long[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  long[])object);  applyCode((  long[])object);	          append((    int[])object);    applyCode((    int[])object);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
126	[BUG]  [BUGGY]  append((  double[])object);  applyCode((  double[])object);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  applyCode((  double[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  applyCode((  double[])object);	          append((    int[])object);    applyCode((    int[])object);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
127	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  String[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant;    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	117	9	replace
128	[BUG]  [BUGGY]  append((  String[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant;    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	117	9	replace
129	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  Double[])  {  append((  Double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  String[])object);  if(object  instanceof  Double[])  {  append((  Double[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant;    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	117	9	replace
130	[BUG]  [BUGGY]  append((  String[])object);  if(object  instanceof  Double[])  {  append((  Double[])object);  }  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  Double[])  {  append((  Double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  if(object  instanceof  Double[])  {  append((  Double[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant;    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	117	9	replace
131	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  iConstant;  append((  String[])object);  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  iConstant;  append((  String[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  iConstant;  append((  String[])object);	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant;    append((    String[])object);    }    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	117	None	replace
132	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.getName();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.getName();	  iTotal    =    iTotal    *    iConstant    +    super.toString();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
133	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.getClass().toString();  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.getClass().toString();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.getClass().toString();	  iTotal    =    iTotal    *    iConstant    +    super.toString();    	non-compiled	[CE]  incompatible  types	99	None	replace
134	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.toString(regexp);  [CE]  cannot  find  symbol  regexp  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.toString(regexp);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.toString(regexp);	  iTotal    =    iTotal    *    iConstant    +    super.toString();    	non-compiled	[CE]  cannot  find  symbol  regexp	99	None	replace
135	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	          append((    Object[])object);    append((    Object[])object);    	compilable	  [FE]  ClassCastException  	8	9	replace
136	[BUG]  [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	          append((    Object[])object);    append((    Object[])object);    	compilable	  [FE]  ClassCastException  	8	9	replace
137	[BUG]  [BUGGY]  validate((  Object[])object);  validate((  Object[])object);  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  Object[])object);  validate((  Object[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  Object[])object);  validate((  Object[])object);	          append((    Object[])object);    append((    Object[])object);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  Object[])  {  append((  Object[])object);  }	          append((    Object[])object);    append((    Object[])object);    	compilable	  [FE]  AssertionFailedError  	8	8	replace
139	[BUG]  [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  }  [FE]  AssertionFailedError  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  Object[])  {  append((  Object[])object);  }	          append((    Object[])object);    append((    Object[])object);    	compilable	  [FE]  AssertionFailedError  	8	8	replace
140	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.toString().hashCode();  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.toString().hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iTotal.toString().hashCode();	  iTotal    =    iTotal    *    iConstant    +    iTotal.hashCode();    	non-compiled	[CE]  int  cannot  be  dereferenced	64	None	replace
141	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.size();  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iTotal.size();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iTotal.size();	  iTotal    =    iTotal    *    iConstant    +    iTotal.hashCode();    	non-compiled	[CE]  int  cannot  be  dereferenced	64	None	replace
142	[BUG]  [BUGGY]  append((  double[])object,  iTotal,  iConstant);  [CE]  no  suitable  method  found  for  append(double[],int,int)  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object,  iTotal,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  iTotal,  iConstant);	  append((    double[])object,    iTotal);    	non-compiled	[CE]  no  suitable  method  found  for  append(double[],int,int)	1	None	replace
143	[BUG]  [BUGGY]  append((  double[])object,  iConstant,  iTotal);  [CE]  no  suitable  method  found  for  append(double[],int,int)  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object,  iConstant,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  iConstant,  iTotal);	  append((    double[])object,    iTotal);    	non-compiled	[CE]  no  suitable  method  found  for  append(double[],int,int)	1	None	replace
144	[BUG]  [BUGGY]  append((  double[])object,  int  iTotal);  [CE]  '.class'  expected  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object,  int  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  int  iTotal);	  append((    double[])object,    iTotal);    	non-compiled	[CE]  '.class'  expected	1	None	replace
145	[BUG]  [BUGGY]  append((  double[])object,  iTotal,  int);  [CE]  '.class'  expected  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object,  iTotal,  int);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  iTotal,  int);	  append((    double[])object,    iTotal);    	non-compiled	[CE]  '.class'  expected	1	None	replace
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                iTotal        =        iTotal        *        iConstant        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	45	8	add
147	[BUG]  [BUGGY]          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                iTotal        =        iTotal        *        iConstant        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	45	8	add
148	[BUG]  [BUGGY]          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                iTotal        =        iTotal        *        iConstant        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    object.hashCode();    int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	45	None	add
149	[BUG]  [BUGGY]          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iconstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  cannot  find  symbol  iconstant  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iconstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                iTotal        =        iTotal        *        iConstant        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iconstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	non-compiled	[CE]  cannot  find  symbol  iconstant	45	None	add
150	[BUG]  [BUGGY]          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  cannot  find  symbol  item  [FE]          AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                iTotal        =        iTotal        *        iConstant        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	non-compiled	[CE]  cannot  find  symbol  item	45	None	add
151	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  item.length();  [CE]  cannot  find  symbol  item  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  item.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  item.length();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.length();    	non-compiled	[CE]  cannot  find  symbol  item	42	None	replace
152	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  super.length();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  super.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  super.length();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.length();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
153	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  this.iConstant.length();  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  this.iConstant.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  this.iConstant.length();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	42	None	replace
154	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal!=  iTotal)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  double[])object);  if(iTotal!=  iTotal)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal!=    iTotal)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	112	9	replace
155	[BUG]  [BUGGY]  append((  double[])object);  if(iTotal!=  iTotal)  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal!=  iTotal)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if(iTotal!=  iTotal)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal!=    iTotal)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	112	9	replace
156	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal  ==  iTotal)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  double[])object);  if(iTotal  ==  iTotal)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal!=    iTotal)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	112	9	replace
157	[BUG]  [BUGGY]  append((  double[])object);  if(iTotal  ==  iTotal)  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal  ==  iTotal)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if(iTotal  ==  iTotal)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal!=    iTotal)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	112	9	replace
158	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal  >=  iTotal)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  double[])object);  if(iTotal  >=  iTotal)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal!=    iTotal)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	112	9	replace
159	[BUG]  [BUGGY]  append((  double[])object);  if(iTotal  >=  iTotal)  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(iTotal  >=  iTotal)  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if(iTotal  >=  iTotal)  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    if(iTotal!=    iTotal)    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	112	9	replace
160	[BUG]  [BUGGY]  validate((  Object[])object);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  Object[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  Object[])object);	          append((    Object[])object);    validate((    Object[])object);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
161	[BUG]  [BUGGY]  validate((  String[])object);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  String[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  String[])object);	          append((    Object[])object);    validate((    Object[])object);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
162	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  UUID.format(iTotal,  object.toString());  [CE]  cannot  find  symbol  UUID  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  UUID.format(iTotal,  object.toString());  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  UUID.format(iTotal,  object.toString());	  iTotal    =    iTotal    *    iConstant    +    UUID.format(object,    iTotal.toString());    	non-compiled	[CE]  cannot  find  symbol  UUID	6	None	replace
163	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  UUID.format(iTotal,  iTotal.toString());  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  UUID.format(iTotal,  iTotal.toString());  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  UUID.format(iTotal,  iTotal.toString());	  iTotal    =    iTotal    *    iConstant    +    UUID.format(object,    iTotal.toString());    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
164	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  UUID.format(object,  object.toString());  [CE]  cannot  find  symbol  UUID  [FE]                      AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  UUID.format(object,  object.toString());  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  UUID.format(object,  object.toString());	  iTotal    =    iTotal    *    iConstant    +    UUID.format(object,    iTotal.toString());    	non-compiled	[CE]  cannot  find  symbol  UUID	6	None	replace
165	[BUG]  [BUGGY]  validate((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }	          append((    double[])object);    if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
166	[BUG]  [BUGGY]  approve((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  approve((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	approve((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }	          append((    double[])object);    if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
167	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(object  instanceof  float[])  {  append((  float[])object);  }  else  {  append((  float[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  double[])object);  if(object  instanceof  float[])  {  append((  float[])object);  }  else  {  append((  float[])object);  }	          append((    double[])object);    if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	109	9	replace
168	[BUG]  [BUGGY]  append((  double[])object);  if(object  instanceof  float[])  {  append((  float[])object);  }  else  {  append((  float[])object);  }  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if(object  instanceof  float[])  {  append((  float[])object);  }  else  {  append((  float[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if(object  instanceof  float[])  {  append((  float[])object);  }  else  {  append((  float[])object);  }	          append((    double[])object);    if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	109	9	replace
169	[BUG]  [BUGGY]  append0((  String[])object,  iTotal);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  String[])object,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  String[])object,  iTotal);	  append0((    String[])object);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
170	[BUG]  [BUGGY]  append0((  String[])object,  iConstant);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  String[])object,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  String[])object,  iConstant);	  append0((    String[])object);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
171	[BUG]  [BUGGY]  append0((  String[])object,  int  iTotal);  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  String[])object,  int  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  String[])object,  int  iTotal);	  append0((    String[])object);    	non-compiled	[CE]  '.class'  expected	53	None	replace
172	[BUG]  [BUGGY]  append0((  String[])object,  1);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  String[])object,  1);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  String[])object,  1);	  append0((    String[])object);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
173	[BUG]  [BUGGY]  append((  long[])object);  Append((  long[])object);  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  long[])object);  Append((  long[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  long[])object);  Append((  long[])object);	          append((    int[])object);    Append((    int[])object);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
174	[BUG]  [BUGGY]  append((  float[])object);  Append((  float[])object);  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  float[])object);  Append((  float[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  float[])object);  Append((  float[])object);	          append((    int[])object);    Append((    int[])object);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
175	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]        AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  object.hashCode();	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	88	None	replace
176	[BUG]  [BUGGY]  Integer  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  Integer  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	Integer  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	88	None	replace
177	[BUG]  [BUGGY]  append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  i  [CE]  'else'  without  'if'  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  i  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  i	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    i    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
178	[BUG]  [BUGGY]  append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  incompatible  types  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    i    	non-compiled	[CE]  incompatible  types	77	None	replace
179	[BUG]  [BUGGY]  append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    i    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
180	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    i    	compilable	  [FE]  AssertionFailedError  	77	8	replace
181	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [FE]  AssertionFailedError  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    i    	compilable	  [FE]  AssertionFailedError  	77	8	replace
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().getName().hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  object.getClass().getName().hashCode();	  iTotal    =    iTotal    *    iConstant    +    object.getClass().hashCode();    	compilable	  [FE]  AssertionFailedError  	50	8	replace
183	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().getName().hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().getName().hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  object.getClass().getName().hashCode();	  iTotal    =    iTotal    *    iConstant    +    object.getClass().hashCode();    	compilable	  [FE]  AssertionFailedError  	50	8	replace
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.toString().hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  object.toString().hashCode();	  iTotal    =    iTotal    *    iConstant    +    object.getClass().hashCode();    	compilable	  [FE]  AssertionFailedError  	50	8	replace
185	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.toString().hashCode();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.toString().hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  object.toString().hashCode();	  iTotal    =    iTotal    *    iConstant    +    object.getClass().hashCode();    	compilable	  [FE]  AssertionFailedError  	50	8	replace
186	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        Object[])object);        if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    append((    Object[])object);    }    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	  	compilable	  [FE]  ClassCastException  	102	9	add
187	[BUG]  [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        Object[])object);        if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    append((    Object[])object);    }    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	  	compilable	  [FE]  ClassCastException  	102	9	add
188	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  if(object  instanceof  Object[])  {  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        Object[])object);        if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    append((    Object[])object);    }    if(object  instanceof  Object[])  {  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  }	  	compilable	  [FE]  ClassCastException  	102	9	add
189	[BUG]  [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  if(object  instanceof  Object[])  {  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  if(object  instanceof  Object[])  {  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        Object[])object);        if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    append((    Object[])object);    }    if(object  instanceof  Object[])  {  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  }	  	compilable	  [FE]  ClassCastException  	102	9	add
190	[BUG]  [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        Object[])object);        if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    append((    Object[])object);    }    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
191	[BUG]  [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  if(object  instanceof  Object[])  {  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  if(object  instanceof  Object[])  {  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        Object[])object);        if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    append((    Object[])object);    }    if(object  instanceof  Object[])  {  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
192	[BUG]  [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  (  Object[])object);  }  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  (  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        Object[])object);        if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    append((    Object[])object);    }    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  (  Object[])object);  }	  	non-compiled	[CE]  not  a  statement	102	None	add
193	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  REGISTRY.toString();  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  REGISTRY.toString();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  REGISTRY.toString();	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.toString();    	non-compiled	[CE]  incompatible  types	93	None	replace
194	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  UNKNOWN.toString();  [CE]  cannot  find  symbol  UNKNOWN  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  UNKNOWN.toString();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  UNKNOWN.toString();	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.toString();    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	93	None	replace
195	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        String[])object);        if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }	  	compilable	  [FE]  ClassCastException  	115	9	add
196	[BUG]  [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        String[])object);        if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }	  	compilable	  [FE]  ClassCastException  	115	9	add
197	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  if(object  instanceof  String[])  {  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        String[])object);        if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    if(object  instanceof  String[])  {  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  }	  	compilable	  [FE]  ClassCastException  	115	9	add
198	[BUG]  [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  if(object  instanceof  String[])  {  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  if(object  instanceof  String[])  {  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        String[])object);        if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    if(object  instanceof  String[])  {  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  }	  	compilable	  [FE]  ClassCastException  	115	9	add
199	[BUG]  [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        String[])object);        if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
200	[BUG]  [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  if(object  instanceof  String[])  {  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  if(object  instanceof  String[])  {  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        String[])object);        if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    if(object  instanceof  String[])  {  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
201	[BUG]  [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  (  String[])object);  }  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  (  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        String[])object);        if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  (  String[])object);  }	  	non-compiled	[CE]  not  a  statement	115	None	add
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iConstant  *  iTotal  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iConstant  *  iTotal  +  object.hashCode();	  iTotal    =    iConstant    *    iTotal.hashCode();    	compilable	  [FE]  AssertionFailedError  	71	1	replace
203	[BUG]  [BUGGY]  iTotal  =  iConstant  *  iTotal  +  object.hashCode();  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iConstant  *  iTotal  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iConstant  *  iTotal  +  object.hashCode();	  iTotal    =    iConstant    *    iTotal.hashCode();    	compilable	  [FE]  AssertionFailedError  	71	1	replace
204	[BUG]  [BUGGY]  iTotal  =  itotal  *  iConstant.hashCode();  [CE]  cannot  find  symbol  itotal  [FE]                        AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  itotal  *  iConstant.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  itotal  *  iConstant.hashCode();	  iTotal    =    iConstant    *    iTotal.hashCode();    	non-compiled	[CE]  cannot  find  symbol  itotal	71	None	replace
205	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.length();  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.length();	  iTotal    =    iTotal    *    iConstant    +    iTotal.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	43	None	replace
206	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  this.iTotal.length();  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  this.iTotal.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  this.iTotal.length();	  iTotal    =    iTotal    *    iConstant    +    iTotal.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	43	None	replace
207	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.length();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.length();	  iTotal    =    iTotal    *    iConstant    +    property.length();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
208	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iValue.length();  [CE]  cannot  find  symbol  iValue  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iValue.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iValue.length();	  iTotal    =    iTotal    *    iConstant    +    property.length();    	non-compiled	[CE]  cannot  find  symbol  iValue	97	None	replace
209	[BUG]  [BUGGY]  append((  int[])object,  iTotal,  value);  [CE]  cannot  find  symbol  value  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object,  iTotal,  value);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,  iTotal,  value);	  append((    int[])object,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  value	25	None	replace
210	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  int[])  {  append((  int[])object);  }  else  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  int[])  {  append((  int[])object);  }  else  {  append((  int[])object);  }	          append((    int[])object);    append((    int[])object);    	compilable	  [FE]  ClassCastException  	59	9	replace
211	[BUG]  [BUGGY]  if(object  instanceof  int[])  {  append((  int[])object);  }  else  {  append((  int[])object);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  int[])  {  append((  int[])object);  }  else  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  int[])  {  append((  int[])object);  }  else  {  append((  int[])object);  }	          append((    int[])object);    append((    int[])object);    	compilable	  [FE]  ClassCastException  	59	9	replace
212	[BUG]  [BUGGY]  validate((  int[])object);  validate((  int[])object);  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  int[])object);  validate((  int[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  int[])object);  validate((  int[])object);	          append((    int[])object);    append((    int[])object);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
213	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  int[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }	          append((    int[])object);    append((    int[])object);    	compilable	  [FE]  ClassCastException  	59	9	replace
214	[BUG]  [BUGGY]  append((  int[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }	          append((    int[])object);    append((    int[])object);    	compilable	  [FE]  ClassCastException  	59	9	replace
215	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.intValue();  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.intValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  iTotal.intValue();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	17	None	replace
216	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.doubleValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.doubleValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  object.doubleValue();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.intValue();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
217	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  super.intValue();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  super.intValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  super.intValue();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.intValue();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
218	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1,  object.toString();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1,  object.toString();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1,  object.toString();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.toString();    	non-compiled	[CE]  ';'  expected	4	None	replace
219	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.getClass().toString();  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object.getClass().toString();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  object.getClass().toString();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.toString();    	non-compiled	[CE]  incompatible  types	4	None	replace
220	[BUG]  [BUGGY]  iTotal  =  iConstant  *  iTotal  +  object.getClass().getName();  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iConstant  *  iTotal  +  object.getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iConstant  *  iTotal  +  object.getClass().getName();	  iTotal    =    iTotal    *    iconstant    +    object.getClass().getName();    	non-compiled	[CE]  incompatible  types	113	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  REGISTRY.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  1  +  REGISTRY.hashCode();	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.hashCode();    	compilable	  [FE]  AssertionFailedError  	79	8	replace
222	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  REGISTRY.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  REGISTRY.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  REGISTRY.hashCode();	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.hashCode();    	compilable	  [FE]  AssertionFailedError  	79	8	replace
223	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1.hashCode();  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1.hashCode();	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.hashCode();    	non-compiled	[CE]  ';'  expected	79	None	replace
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1;  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  1;	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.hashCode();    	compilable	  [FE]  AssertionFailedError  	79	8	replace
225	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1;  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1;	  iTotal    =    iTotal    *    iConstant    +    REGISTRY.hashCode();    	compilable	  [FE]  AssertionFailedError  	79	8	replace
226	[BUG]  [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
227	[BUG]  [BUGGY]  validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
228	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1,  object.getClass().getName();  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1,  object.getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1,  object.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.getClass().getName();    	non-compiled	[CE]  ';'  expected	13	None	replace
229	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iconstant  +  1  +  object.getClass().getName();  [CE]  cannot  find  symbol  iconstant  [FE]          AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iconstant  +  1  +  object.getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iconstant  +  1  +  object.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.getClass().getName();    	non-compiled	[CE]  cannot  find  symbol  iconstant	13	None	replace
230	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object,  object.getClass().getName();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  object,  object.getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  object,  object.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.getClass().getName();    	non-compiled	[CE]  ';'  expected	13	None	replace
231	[BUG]  [BUGGY]  append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  [CE]  'else'  without  'if'  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
232	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    	non-compiled	[CE]  ';'  expected	76	None	replace
233	[BUG]  [BUGGY]  append((  int[])object);  if(!(int[])object);  [CE]  bad  operand  type  int[]  for  unary  operator  '!'  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if(!(int[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  if(!(int[])object);	          append((    int[])object);    if((    int[])object);    	non-compiled	[CE]  bad  operand  type  int[]  for  unary  operator  '!'	81	None	replace
234	[BUG]  [BUGGY]  append((  int[])object);  if((  int[])iTotal);  [CE]  inconvertible  types  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if((  int[])iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  if((  int[])iTotal);	          append((    int[])object);    if((    int[])object);    	non-compiled	[CE]  inconvertible  types	81	None	replace
235	[BUG]  [BUGGY]  append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  incompatible  types  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    i    	non-compiled	[CE]  incompatible  types	86	None	replace
236	[BUG]  [BUGGY]  append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  i  [CE]  'else'  without  'if'  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  i  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  i	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    i    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
237	[BUG]  [BUGGY]  append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  'else'  without  'if'  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    i    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
238	[BUG]  [BUGGY]  append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    i    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal    =    iTotal    *    iConstant    +    object.getClass().hashCode();    iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();	  	compilable	  [FE]  AssertionFailedError  	49	8	add
240	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    object.getClass().hashCode();    iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();	  	compilable	  [FE]  AssertionFailedError  	49	8	add
241	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  int  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  int  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    object.getClass().hashCode();    int  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	49	None	add
242	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  iTotal  =  iTotal  *  iConstant  +  item.getClass().hashCode();  [CE]  cannot  find  symbol  item  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.getClass().hashCode();  iTotal  =  iTotal  *  iConstant  +  item.getClass().hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    object.getClass().hashCode();    iTotal  =  iTotal  *  iConstant  +  item.getClass().hashCode();	  	non-compiled	[CE]  cannot  find  symbol  item	49	None	add
243	[BUG]  [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
244	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  ClassCastException  	75	9	replace
245	[BUG]  [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  ClassCastException  	75	9	replace
246	[BUG]  [BUGGY]  validate((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
248	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [FE]  AssertionFailedError  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
249	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iConstant.getClass().getName();  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iConstant.getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iConstant.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    item.getClass().getName();    	non-compiled	[CE]  int  cannot  be  dereferenced	39	None	replace
250	[BUG]  [BUGGY]  nTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  nTotal  *  iConstant  +  2  +  object.hashCode();  [CE]  cannot  find  symbol  nTotal  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  nTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  nTotal  *  iConstant  +  2  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	nTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  nTotal  *  iConstant  +  2  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    	non-compiled	[CE]  cannot  find  symbol  nTotal	92	None	replace
251	[BUG]  [BUGGY]  nTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  cannot  find  symbol  nTotal  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  nTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	nTotal  =  iTotal  *  iConstant  +  object.hashCode();	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    	non-compiled	[CE]  cannot  find  symbol  nTotal	46	None	replace
252	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  float[])  {  append((  float[])object);  }  else  {  append((  float[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  String[])object);  if(object  instanceof  float[])  {  append((  float[])object);  }  else  {  append((  float[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	116	9	replace
253	[BUG]  [BUGGY]  append((  String[])object);  if(object  instanceof  float[])  {  append((  float[])object);  }  else  {  append((  float[])object);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  float[])  {  append((  float[])object);  }  else  {  append((  float[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  if(object  instanceof  float[])  {  append((  float[])object);  }  else  {  append((  float[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	116	9	replace
254	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  String[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	116	9	replace
255	[BUG]  [BUGGY]  append((  String[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	116	9	replace
256	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  Double[])  {  append((  Double[])object);  }  else  {  append((  Double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  String[])object);  if(object  instanceof  Double[])  {  append((  Double[])object);  }  else  {  append((  Double[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	116	9	replace
257	[BUG]  [BUGGY]  append((  String[])object);  if(object  instanceof  Double[])  {  append((  Double[])object);  }  else  {  append((  Double[])object);  }  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  Double[])  {  append((  Double[])object);  }  else  {  append((  Double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  if(object  instanceof  Double[])  {  append((  Double[])object);  }  else  {  append((  Double[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	116	9	replace
258	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  String[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	116	9	replace
259	[BUG]  [BUGGY]  append((  String[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	116	9	replace
260	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }	          append((    int[])object);    if((    int[])object);    if(iTotal    ==    0)    {    append((    int[])object);    }    	compilable	  [FE]  ClassCastException  	120	9	replace
261	[BUG]  [BUGGY]  append((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }	          append((    int[])object);    if((    int[])object);    if(iTotal    ==    0)    {    append((    int[])object);    }    	compilable	  [FE]  ClassCastException  	120	9	replace
262	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if(iTotal!=  0)  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  int[])object);  if(iTotal!=  0)  {  append((  int[])object);  }	          append((    int[])object);    if((    int[])object);    if(iTotal    ==    0)    {    append((    int[])object);    }    	compilable	  [FE]  ClassCastException  	120	9	replace
263	[BUG]  [BUGGY]  append((  int[])object);  if(iTotal!=  0)  {  append((  int[])object);  }  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if(iTotal!=  0)  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  if(iTotal!=  0)  {  append((  int[])object);  }	          append((    int[])object);    if((    int[])object);    if(iTotal    ==    0)    {    append((    int[])object);    }    	compilable	  [FE]  ClassCastException  	120	9	replace
264	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if(iTotal  >=  0)  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  int[])object);  if(iTotal  >=  0)  {  append((  int[])object);  }	          append((    int[])object);    if((    int[])object);    if(iTotal    ==    0)    {    append((    int[])object);    }    	compilable	  [FE]  ClassCastException  	120	9	replace
265	[BUG]  [BUGGY]  append((  int[])object);  if(iTotal  >=  0)  {  append((  int[])object);  }  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if(iTotal  >=  0)  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  if(iTotal  >=  0)  {  append((  int[])object);  }	          append((    int[])object);    if((    int[])object);    if(iTotal    ==    0)    {    append((    int[])object);    }    	compilable	  [FE]  ClassCastException  	120	9	replace
266	[BUG]  [BUGGY]  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }  [CE]  'else'  without  'if'  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    Object[])object);    }    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
267	[BUG]  [BUGGY]  validate((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }  [CE]  'else'  without  'if'  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    Object[])object);    }    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
268	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }	          append((    String[])object);    append((    String[])object);    	compilable	  [FE]  ClassCastException  	20	9	replace
269	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  }  else  {  append((  String[])object);  }	          append((    String[])object);    append((    String[])object);    	compilable	  [FE]  ClassCastException  	20	9	replace
270	[BUG]  [BUGGY]  validate((  String[])object);  validate((  String[])object);  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  String[])object);  validate((  String[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  String[])object);  validate((  String[])object);	          append((    String[])object);    append((    String[])object);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  String[])  {  append((  String[])object);  }	          append((    String[])object);    append((    String[])object);    	compilable	  [FE]  AssertionFailedError  	20	8	replace
272	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  }  [FE]  AssertionFailedError  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  }	          append((    String[])object);    append((    String[])object);    	compilable	  [FE]  AssertionFailedError  	20	8	replace
273	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  String[])object);  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  String[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  append((  String[])object);	          append((    String[])object);    if(object    instanceof    String[])    {    append((    String[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    append((    String[])object);    }    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	118	None	replace
274	[BUG]  [BUGGY]  validate((  double[])object);  validate((  double[])object);  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  double[])object);  validate((  double[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  double[])object);  validate((  double[])object);	          append((    double[])object);    append((    double[])object);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
275	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  float[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  float[])object);	          append((    double[])object);    append((    double[])object);    	compilable	  [FE]  ClassCastException  	32	9	replace
276	[BUG]  [BUGGY]  append((  float[])object);  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  float[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  float[])object);	          append((    double[])object);    append((    double[])object);    	compilable	  [FE]  ClassCastException  	32	9	replace
277	[BUG]  [BUGGY]  append((  Object[])object,  iConstant,  iTotal,  iTotal);  [CE]  no  suitable  method  found  for  append(Object[],int,int,int)  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  iConstant,  iTotal,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iConstant,  iTotal,  iTotal);	  append((    Object[])object,    iConstant,    iTotal);    	non-compiled	[CE]  no  suitable  method  found  for  append(Object[],int,int,int)	57	None	replace
278	[BUG]  [BUGGY]  append((  Object[])object,  initialNonZeroOddNumber,  iConstant,  iTotal);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  initialNonZeroOddNumber,  iConstant,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  initialNonZeroOddNumber,  iConstant,  iTotal);	  append((    Object[])object,    iConstant,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	57	None	replace
279	[BUG]  [BUGGY]  append((  Object[])object,  initialNonZeroOddNumber,  iTotal,  iConstant);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  initialNonZeroOddNumber,  iTotal,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  initialNonZeroOddNumber,  iTotal,  iConstant);	  append((    Object[])object,    iConstant,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	57	None	replace
280	[BUG]  [BUGGY]  iTotal  =  iConstant  *  iTotal  +  object.length();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iConstant  *  iTotal  +  object.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iConstant  *  iTotal  +  object.length();	  iTotal    =    iTotal    *    iconstant    +    object.length();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
281	[BUG]  [BUGGY]  append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  [CE]  'else'  without  'if'  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  if((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    	compilable	  [FE]  AssertionFailedError  	85	8	replace
283	[BUG]  [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [FE]  AssertionFailedError  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    	compilable	  [FE]  AssertionFailedError  	85	8	replace
284	[BUG]  [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    append((    String[])object);    }    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
285	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    append((    String[])object);    }    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	23	None	replace
286	[BUG]  [BUGGY]  validate((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  'else'  without  'if'  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    append((    String[])object);    }    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	66	8	add
288	[BUG]  [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	66	8	add
289	[BUG]  [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    int  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	66	None	add
290	[BUG]  [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [CE]  cannot  find  symbol  item  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();	  	non-compiled	[CE]  cannot  find  symbol  item	66	None	add
291	[BUG]  [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  [CE]  cannot  find  symbol  item  [FE]          AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();	  	non-compiled	[CE]  cannot  find  symbol  item	66	None	add
292	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        double[])object);        if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }	  	compilable	  [FE]  ClassCastException  	108	9	add
293	[BUG]  [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }	  	compilable	  [FE]  ClassCastException  	108	9	add
294	[BUG]  [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {	  	non-compiled	[CE]  illegal  start  of  expression	108	None	add
295	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  if(object  instanceof  double[])  {  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        double[])object);        if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    if(object  instanceof  double[])  {  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  }	  	compilable	  [FE]  ClassCastException  	108	9	add
296	[BUG]  [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  if(object  instanceof  double[])  {  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  }  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  if(object  instanceof  double[])  {  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    if(object  instanceof  double[])  {  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  }	  	compilable	  [FE]  ClassCastException  	108	9	add
297	[BUG]  [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  (  double[])object);  }  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  (  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  (  double[])object);  }	  	non-compiled	[CE]  not  a  statement	108	None	add
298	[BUG]  [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  if(object  instanceof  double[])  {  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  if(object  instanceof  double[])  {  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    if(object  instanceof  double[])  {  append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }	  	non-compiled	[CE]  illegal  start  of  expression	108	None	add
299	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    int[])object);    append((  int[])object);  append((  int[])object);  append((  int[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        int[])object);        append((    int[])object);    append((  int[])object);  append((  int[])object);	  	compilable	  [FE]  ClassCastException  	58	9	add
300	[BUG]  [BUGGY]          append((    int[])object);    append((  int[])object);  append((  int[])object);  append((  int[])object);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    int[])object);    append((  int[])object);  append((  int[])object);  append((  int[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        int[])object);        append((    int[])object);    append((  int[])object);  append((  int[])object);	  	compilable	  [FE]  ClassCastException  	58	9	add
301	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    int[])object);    append((  int[])object);  if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        int[])object);        append((    int[])object);    if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }	  	compilable	  [FE]  ClassCastException  	58	9	add
302	[BUG]  [BUGGY]          append((    int[])object);    append((  int[])object);  if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    int[])object);    append((  int[])object);  if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        int[])object);        append((    int[])object);    if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }	  	compilable	  [FE]  ClassCastException  	58	9	add
303	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    int[])object);    append((  int[])object);  if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  else  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        int[])object);        append((    int[])object);    if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  else  {  append((  int[])object);  }	  	compilable	  [FE]  ClassCastException  	58	9	add
304	[BUG]  [BUGGY]          append((    int[])object);    append((  int[])object);  if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  else  {  append((  int[])object);  }  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    int[])object);    append((  int[])object);  if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  else  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        int[])object);        append((    int[])object);    if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  else  {  append((  int[])object);  }	  	compilable	  [FE]  ClassCastException  	58	9	add
305	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    int[])object);    append((  int[])object);  if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        int[])object);        append((    int[])object);    if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ClassCastException  	58	9	add
306	[BUG]  [BUGGY]          append((    int[])object);    append((  int[])object);  if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    int[])object);    append((  int[])object);  if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        int[])object);        append((    int[])object);    if(object  instanceof  int[])  {  append((  int[])object);  append((  int[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ClassCastException  	58	9	add
307	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.length();  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.length();	  iTotal    =    iTotal    *    iConstant    +    value.length();    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	96	None	replace
308	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iInitialNonZeroOddNumber.length();  [CE]  cannot  find  symbol  iInitialNonZeroOddNumber  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iInitialNonZeroOddNumber.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iInitialNonZeroOddNumber.length();	  iTotal    =    iTotal    *    iConstant    +    value.length();    	non-compiled	[CE]  cannot  find  symbol  iInitialNonZeroOddNumber	96	None	replace
309	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  iValue.hashCode();  [CE]  cannot  find  symbol  iValue  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  iValue.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  iConstant  +  iValue.hashCode();	  iTotal    =    iTotal    *    iConstant    +    iValue.hashCode();    	non-compiled	[CE]  cannot  find  symbol  iValue	114	None	replace
310	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.floatValue();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.floatValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.floatValue();	  iTotal    =    iTotal    *    iConstant    +    super.intValue();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
311	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.doubleValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.doubleValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.doubleValue();	  iTotal    =    iTotal    *    iConstant    +    super.intValue();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
312	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.regularValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.regularValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.regularValue();	  iTotal    =    iTotal    *    iConstant    +    super.intValue();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
313	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  object  +  1  +  object.hashCode();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  object  +  1  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  object  +  1  +  object.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    int    iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	68	None	replace
314	[BUG]  [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [CE]  'else'  without  'if'  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    String[])object);    }    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
315	[BUG]  [BUGGY]  validate((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [CE]  'else'  without  'if'  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    String[])object);    }    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
316	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	21	9	replace
317	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	21	9	replace
318	[BUG]  [BUGGY]  append0((  Object[])object,  iTotal,  iConstant);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  Object[])object,  iTotal,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  Object[])object,  iTotal,  iConstant);	  append0((    Object[])object,    iTotal);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
319	[BUG]  [BUGGY]  append0((  Object[])object,  int  iTotal);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  Object[])object,  int  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  Object[])object,  int  iTotal);	  append0((    Object[])object,    iTotal);    	non-compiled	[CE]  '.class'  expected	51	None	replace
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal    =    iTotal    *    iConstant    +    REGISTRY.hashCode();    iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();	  	compilable	  [FE]  AssertionFailedError  	78	8	add
321	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    REGISTRY.hashCode();    iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();	  	compilable	  [FE]  AssertionFailedError  	78	8	add
322	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  int  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    REGISTRY.hashCode();    int  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	78	None	add
323	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  Integer  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  Integer  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    REGISTRY.hashCode();    Integer  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();	  	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	78	None	add
324	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  else  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  else  {  append((  int[])object);  }	          append((    int[])object);    if((    int[])object);    if(iTotal    ==    0)    {    append((    int[])object);    }    else    {    append((    int[])object);    }    	compilable	  [FE]  ClassCastException  	119	9	replace
325	[BUG]  [BUGGY]  append((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  else  {  append((  int[])object);  }  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  else  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  if(iTotal  ==  0)  {  append((  int[])object);  }  else  {  append((  int[])object);  }	          append((    int[])object);    if((    int[])object);    if(iTotal    ==    0)    {    append((    int[])object);    }    else    {    append((    int[])object);    }    	compilable	  [FE]  ClassCastException  	119	9	replace
326	[BUG]  [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }  [CE]  'else'  without  'if'  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    int[])object);    }    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
327	[BUG]  [BUGGY]  validate((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }  [CE]  'else'  without  'if'  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    int[])object);    }    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
328	[BUG]  [BUGGY]  validate((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }  [CE]  'else'  without  'if'  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  int[])object);  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    int[])object);    }    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
329	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  DEFAULT_NUMBER.toString();  [CE]  cannot  find  symbol  DEFAULT_NUMBER  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  DEFAULT_NUMBER.toString();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  DEFAULT_NUMBER.toString();	  iTotal    =    iTotal    *    iConstant    +    DEFAULT_TYPE.toString();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NUMBER	95	None	replace
330	[BUG]  [BUGGY]  append((  int[])object,  0,  iTotal);  [CE]  no  suitable  method  found  for  append(int[],int,int)  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object,  0,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,  0,  iTotal);	  append((    int[])object,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(int[],int,int)	27	None	replace
331	[BUG]  [BUGGY]  append((  int[])object,  1);  [CE]  no  suitable  method  found  for  append(int[],int)  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object,  1);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,  1);	  append((    int[])object,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(int[],int)	27	None	replace
332	[BUG]  [BUGGY]  append((  int[])object,  0,  iConstant);  [CE]  no  suitable  method  found  for  append(int[],int,int)  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object,  0,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,  0,  iConstant);	  append((    int[])object,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(int[],int,int)	27	None	replace
333	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.toString();  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.toString();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  initialNonZeroOddNumber.toString();	  iTotal    =    iTotal    *    iConstant    +    value.toString();    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	94	None	replace
334	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  iConstant.intValue();  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  iConstant.intValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  2  *  iConstant.intValue();	  iTotal    =    iTotal    *    iConstant    +    2    +    object.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	107	None	replace
335	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  iType.intValue();  [CE]  cannot  find  symbol  iType  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  iType.intValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  2  *  iType.intValue();	  iTotal    =    iTotal    *    iConstant    +    2    +    object.intValue();    	non-compiled	[CE]  cannot  find  symbol  iType	107	None	replace
336	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  iValue.intValue();  [CE]  cannot  find  symbol  iValue  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  iValue.intValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  2  *  iValue.intValue();	  iTotal    =    iTotal    *    iConstant    +    2    +    object.intValue();    	non-compiled	[CE]  cannot  find  symbol  iValue	107	None	replace
337	[BUG]  [BUGGY]  append((  String[])object);  Append((  Object[])object);  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  Append((  Object[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  Append((  Object[])object);	          append((    Object[])object);    Append((    Object[])object);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
338	[BUG]  [BUGGY]  append((  double[])object,  0,  iTotal);  [CE]  no  suitable  method  found  for  append(double[],int,int)  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object,  0,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  0,  iTotal);	  append((    double[])object,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(double[],int,int)	3	None	replace
339	[BUG]  [BUGGY]  append((  double[])object,  0,  iConstant);  [CE]  no  suitable  method  found  for  append(double[],int,int)  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object,  0,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  0,  iConstant);	  append((    double[])object,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(double[],int,int)	3	None	replace
340	[BUG]  [BUGGY]  append((  double[])object,  1);  [CE]  no  suitable  method  found  for  append(double[],int)  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object,  1);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  1);	  append((    double[])object,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(double[],int)	3	None	replace
341	[BUG]  [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [CE]  'else'  without  'if'  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    double[])object);    }    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
342	[BUG]  [BUGGY]  validate((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [CE]  'else'  without  'if'  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    double[])object);    }    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
343	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	append((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	36	9	replace
344	[BUG]  [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    double[])object);    }    	compilable	  [FE]  ClassCastException  	36	9	replace
345	[BUG]  [BUGGY]  approve((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [CE]  'else'  without  'if'  [FE]                      ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  approve((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	approve((  double[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  double[])object);  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    double[])object);    }    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
346	[BUG]  [BUGGY]  validate((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  validate((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	validate((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	          append((    Object[])object);    if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    append((    Object[])object);    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
347	[BUG]  [BUGGY]  approve((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  approve((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	approve((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	          append((    Object[])object);    if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    append((    Object[])object);    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
348	[BUG]  [BUGGY]  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {	          append((    Object[])object);    if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    append((    Object[])object);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
349	[BUG]  [BUGGY]  append((  double[])object,  iConstant,  value);  [CE]  cannot  find  symbol  value  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object,  iConstant,  value);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  iConstant,  value);	  append((    double[])object,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  value	2	None	replace
350	[BUG]  [BUGGY]  append((  String[])object,  0,  iTotal);  [CE]  no  suitable  method  found  for  append(String[],int,int)  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object,  0,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  0,  iTotal);	  append((    String[])object,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(String[],int,int)	30	None	replace
351	[BUG]  [BUGGY]  append((  String[])object,  0,  iConstant);  [CE]  no  suitable  method  found  for  append(String[],int,int)  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object,  0,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  0,  iConstant);	  append((    String[])object,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(String[],int,int)	30	None	replace
352	[BUG]  [BUGGY]  append((  String[])object,  1);  [CE]  no  suitable  method  found  for  append(String[],int)  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object,  1);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  1);	  append((    String[])object,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(String[],int)	30	None	replace
353	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  append((  double[])object);  append((  double[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        double[])object);        append((    double[])object);    append((  double[])object);  append((  double[])object);	  	compilable	  [FE]  ClassCastException  	31	9	add
354	[BUG]  [BUGGY]          append((    double[])object);    append((  double[])object);  append((  double[])object);  append((  double[])object);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  append((  double[])object);  append((  double[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        append((    double[])object);    append((  double[])object);  append((  double[])object);	  	compilable	  [FE]  ClassCastException  	31	9	add
355	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        double[])object);        append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }	  	compilable	  [FE]  ClassCastException  	31	9	add
356	[BUG]  [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }	  	compilable	  [FE]  ClassCastException  	31	9	add
357	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        double[])object);        append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  append((  double[])object);  }	  	compilable	  [FE]  ClassCastException  	31	9	add
358	[BUG]  [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  append((  double[])object);  }  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  append((  double[])object);  }	  	compilable	  [FE]  ClassCastException  	31	9	add
359	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        double[])object);        append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ClassCastException  	31	9	add
360	[BUG]  [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ClassCastException  	31	9	add
361	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  append((  double[])object);  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	                append((        double[])object);        append((    double[])object);    append((  double[])object);  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	compilable	  [FE]  ClassCastException  	31	9	add
362	[BUG]  [BUGGY]          append((    double[])object);    append((  double[])object);  append((  double[])object);  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  append((  double[])object);  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        append((    double[])object);    append((  double[])object);  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	  	compilable	  [FE]  ClassCastException  	31	9	add
363	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  multiplierNonZeroOddNumber.hashCode();  [CE]  cannot  find  symbol  multiplierNonZeroOddNumber  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  multiplierNonZeroOddNumber.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  multiplierNonZeroOddNumber.hashCode();	  iTotal    =    iTotal    *    iConstant    +    initialNonZeroOddNumber.hashCode();    	non-compiled	[CE]  cannot  find  symbol  multiplierNonZeroOddNumber	63	None	replace
364	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.toString().hashCode();  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.toString().hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  value.toString().hashCode();	  iTotal    =    iTotal    *    iConstant    +    initialNonZeroOddNumber.hashCode();    	non-compiled	[CE]  cannot  find  symbol  value	63	None	replace
365	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iInitialNonZeroOddNumber.hashCode();  [CE]  cannot  find  symbol  iInitialNonZeroOddNumber  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  iInitialNonZeroOddNumber.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  iInitialNonZeroOddNumber.hashCode();	  iTotal    =    iTotal    *    iConstant    +    iNonZeroOddNumber.hashCode();    	non-compiled	[CE]  cannot  find  symbol  iInitialNonZeroOddNumber	65	None	replace
366	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  iNonZeroOddNumber.hashCode();  [CE]  cannot  find  symbol  iNonZeroOddNumber  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  iConstant  +  iNonZeroOddNumber.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  iConstant  +  iNonZeroOddNumber.hashCode();	  iTotal    =    iTotal    *    iConstant    +    iNonZeroOddNumber.hashCode();    	non-compiled	[CE]  cannot  find  symbol  iNonZeroOddNumber	65	None	replace
367	[BUG]  [BUGGY]  append((  String[])object,  iTotal,  iConstant);  [CE]  no  suitable  method  found  for  append(String[],int,int)  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object,  iTotal,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  iTotal,  iConstant);	  append((    String[])object,    iTotal);    	non-compiled	[CE]  no  suitable  method  found  for  append(String[],int,int)	28	None	replace
368	[BUG]  [BUGGY]  append((  String[])object,  iConstant,  iTotal);  [CE]  no  suitable  method  found  for  append(String[],int,int)  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object,  iConstant,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  iConstant,  iTotal);	  append((    String[])object,    iTotal);    	non-compiled	[CE]  no  suitable  method  found  for  append(String[],int,int)	28	None	replace
369	[BUG]  [BUGGY]  append((  String[])object,  int  iTotal);  [CE]  '.class'  expected  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object,  int  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  int  iTotal);	  append((    String[])object,    iTotal);    	non-compiled	[CE]  '.class'  expected	28	None	replace
370	[BUG]  [BUGGY]  append((  String[])object,  iTotal,  value);  [CE]  cannot  find  symbol  value  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object,  iTotal,  value);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  iTotal,  value);	  append((    String[])object,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  value	28	None	replace
371	[BUG]  [BUGGY]  append0((  Object[])object,  0,  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  Object[])object,  0,  1);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  Object[])object,  0,  1);	  append0((    Object[])object,    1);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
372	[BUG]  [BUGGY]  append0((  Object[])object,  2);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  Object[])object,  2);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  Object[])object,  2);	  append0((    Object[])object,    1);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
373	[BUG]  [BUGGY]  append0((  Object[])object,  1,  iTotal);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append0((  Object[])object,  1,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append0((  Object[])object,  1,  iTotal);	  append0((    Object[])object,    1);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
374	[BUG]  [BUGGY]  append((  String[])object,  iConstant,  value);  [CE]  cannot  find  symbol  value  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object,  iConstant,  value);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  iConstant,  value);	  append((    String[])object,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  value	29	None	replace
375	[BUG]  [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
376	[BUG]  [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hash  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hash  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hash	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
377	[BUG]  [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  Object[])  {  append((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
378	[BUG]  [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  ';'  expected	35	None	replace
379	[BUG]  [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	35	None	replace
380	[BUG]  [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  ';'  expected	35	None	replace
381	[BUG]  [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hash  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hash  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hash	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  ';'  expected	35	None	replace
382	[BUG]  [BUGGY]  approve((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }  [CE]  'else'  without  'if'  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  approve((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	approve((  Object[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  Object[])object);  }	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    Object[])object);    }    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
383	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
384	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
385	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hash  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hash  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hash	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
386	[BUG]  [BUGGY]  append((  Object[])object,  refNonZeroOddNumber,  iTotal,  iConstant);  [CE]  cannot  find  symbol  refNonZeroOddNumber  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  refNonZeroOddNumber,  iTotal,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  refNonZeroOddNumber,  iTotal,  iConstant);	  append((    Object[])object,    iConstant,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  refNonZeroOddNumber	57	None	replace
387	[BUG]  [BUGGY]  append((  Object[])object,  iTotal,  value,  iConstant);  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  iTotal,  value,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  iTotal,  value,  iConstant);	  append((    Object[])object,    iTotal,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  value	55	None	replace
388	[BUG]  [BUGGY]          append((    String[])object);    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  append((  String[])Object);  }  [CE]  cannot  find  symbol  Object  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    String[])object);    append((  String[])object);  if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  append((  String[])Object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        String[])object);        append((    String[])object);    if(object  instanceof  String[])  {  append((  String[])object);  append((  String[])object);  }  else  {  append((  String[])Object);  }	  	non-compiled	[CE]  cannot  find  symbol  Object	19	None	add
389	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.toString(initialNonZeroOddNumber);  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.toString(initialNonZeroOddNumber);  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.toString(initialNonZeroOddNumber);	  iTotal    =    iTotal    *    iConstant    +    super.toString();    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	99	None	replace
390	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.getCode();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.getCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.getCode();	  iTotal    =    iTotal    *    iConstant    +    super.toString();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
391	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  int[])  {  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  int[])  {  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	62	9	replace
392	[BUG]  [BUGGY]  if(object  instanceof  int[])  {  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  int[])  {  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  int[])  {  append((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	62	9	replace
393	[BUG]  [BUGGY]  if(object  instanceof  int[])  {  append((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  int[])  {  append((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  int[])  {  append((  int[])object);  if((  int[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          append((    int[])object);    if((    int[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	62	None	replace
394	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iRegNumber  +  object.hashCode();  [CE]  cannot  find  symbol  iRegNumber  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iRegNumber  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iRegNumber  +  object.hashCode();	  iTotal    =    iTotal    *    iconstant    +    object.hashCode();    	non-compiled	[CE]  cannot  find  symbol  iRegNumber	101	None	replace
395	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iReGISTRY  +  object.hashCode();  [CE]  cannot  find  symbol  iReGISTRY  [FE]                      AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iReGISTRY  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iReGISTRY  +  object.hashCode();	  iTotal    =    iTotal    *    iconstant    +    object.hashCode();    	non-compiled	[CE]  cannot  find  symbol  iReGISTRY	101	None	replace
396	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iRefNumber  +  object.hashCode();  [CE]  cannot  find  symbol  iRefNumber  [FE]                        AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iRefNumber  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iRefNumber  +  object.hashCode();	  iTotal    =    iTotal    *    iconstant    +    object.hashCode();    	non-compiled	[CE]  cannot  find  symbol  iRefNumber	101	None	replace
397	[BUG]  [BUGGY]  iTotal  =  iTotal  *  value  +  iNonZeroOddNumber.hashCode();  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  value  +  iNonZeroOddNumber.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  value  +  iNonZeroOddNumber.hashCode();	  iTotal    =    iTotal    *    iConstant    +    iNonZeroOddNumber.hashCode();    	non-compiled	[CE]  cannot  find  symbol  value	65	None	replace
398	[BUG]  [BUGGY]  iTotal  =  iTotal  *  NONZeroOddNumber  +  value.hashCode();  [CE]  cannot  find  symbol  NONZeroOddNumber  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  NONZeroOddNumber  +  value.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  NONZeroOddNumber  +  value.hashCode();	  iTotal    =    iTotal    *    iConstant    +    iNonZeroOddNumber.hashCode();    	non-compiled	[CE]  cannot  find  symbol  NONZeroOddNumber	65	None	replace
399	[BUG]  [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  validate((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  validate((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    validate((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }	  	non-compiled	[CE]  cannot  find  symbol	108	None	add
400	[BUG]  [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  (  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [CE]  not  a  statement  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  (  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        if(object    instanceof    double[])    {    append((    double[])object);    }    else    {    append((    double[])object);    }    (  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  }  else  {  append((  double[])object);  }	  	non-compiled	[CE]  not  a  statement	108	None	add
401	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object!=  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object!=  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	46	8	replace
402	[BUG]  [BUGGY]  if(object!=  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object!=  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object!=  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	46	8	replace
403	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  ==  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  ==  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	46	8	replace
404	[BUG]  [BUGGY]  if(object  ==  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  ==  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  ==  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	46	8	replace
405	[BUG]  [BUGGY]  if(iTotal!=  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CE]  incomparable  types:  int  and  <null>  [FE]        AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(iTotal!=  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(iTotal!=  null)  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    	non-compiled	[CE]  incomparable  types:  int  and  <null>	46	None	replace
406	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  iConstant;  append((  Object[])object);  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  iConstant;  append((  Object[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  iConstant;  append((  Object[])object);	          append((    Object[])object);    if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant;    append((    Object[])object);    }    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	104	None	replace
407	[BUG]  [BUGGY]  int  iTotal  =  iTotal  *  iConstant;  [CE]  variable  iTotal  might  not  have  been  initialized  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  int  iTotal  =  iTotal  *  iConstant;  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	int  iTotal  =  iTotal  *  iConstant;	          append((    Object[])object);    if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    int    iTotal    =    iTotal    *    iConstant;    append((    Object[])object);    }    	non-compiled	[CE]  variable  iTotal  might  not  have  been  initialized	104	None	replace
408	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  object.intValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  object.intValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  2  *  object.intValue();	  iTotal    =    iTotal    *    iConstant    +    2    +    object.intValue();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
409	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  value.intValue();  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  2  *  value.intValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  2  *  value.intValue();	  iTotal    =    iTotal    *    iConstant    +    2    +    object.intValue();    	non-compiled	[CE]  cannot  find  symbol  value	107	None	replace
410	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  value.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  value.hashCode();  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  value.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  value.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  value.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  value.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    1    +    item.hashCode();    	non-compiled	[CE]  cannot  find  symbol  value	69	None	replace
411	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  [CE]  cannot  find  symbol  item  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  item.hashCode();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    1    +    item.hashCode();    	non-compiled	[CE]  cannot  find  symbol  item	69	None	replace
412	[BUG]  [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  validate((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  validate((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        Object[])object);        if(object    instanceof    Object[])    {    append((    Object[])object);    }    else    {    append((    Object[])object);    }    validate((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  }  else  {  append((  Object[])object);  }	  	non-compiled	[CE]  cannot  find  symbol	102	None	add
413	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  DEFAULT_TYPE.getClass().getName();  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                    AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  DEFAULT_TYPE.getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  DEFAULT_TYPE.getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    item.getClass().getName();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	39	None	replace
414	[BUG]  [BUGGY]  iTotal  =  iTotal  *  object  +  object.hashCode();  iTotal  =  iTotal  *  iconstant  +  object.hashCode();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  object  +  object.hashCode();  iTotal  =  iTotal  *  iconstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  object  +  object.hashCode();  iTotal  =  iTotal  *  iconstant  +  object.hashCode();	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iconstant    +    object.hashCode();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	48	None	replace
415	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iTotal  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iTotal  +  object.hashCode();	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iconstant    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	48	8	replace
416	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iTotal  +  object.hashCode();  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iTotal  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  object.hashCode();  iTotal  =  iTotal  *  iTotal  +  object.hashCode();	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iconstant    +    object.hashCode();    	compilable	  [FE]  AssertionFailedError  	48	8	replace
417	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.length();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  REGISTRY.length();	  iTotal    =    iTotal    *    iConstant    +    item.length();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
418	[BUG]  [BUGGY]          append((    Object[])object);    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    Object[])object);    append((  Object[])object);  if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        Object[])object);        append((    Object[])object);    if(object  instanceof  Object[])  {  append((  Object[])object);  append((  Object[])object);  }  else  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  iTotal  =  iTotal  *  REGISTRY.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal    =    iTotal    *    iConstant    +    REGISTRY.hashCode();    iTotal  =  iTotal  *  REGISTRY.hashCode();	  	compilable	  [FE]  AssertionFailedError  	78	8	add
420	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  iTotal  =  iTotal  *  REGISTRY.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  REGISTRY.hashCode();  iTotal  =  iTotal  *  REGISTRY.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal    =    iTotal    *    iConstant    +    REGISTRY.hashCode();    iTotal  =  iTotal  *  REGISTRY.hashCode();	  	compilable	  [FE]  AssertionFailedError  	78	8	add
421	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    append((    String[])object);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
422	[BUG]  [BUGGY]  append((  Object[])object,(Object[])object);  [CE]  no  suitable  method  found  for  append(Object[],Object[])  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,(Object[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,(Object[])object);	          append((    Object[])object);    append((    Object[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(Object[],Object[])	8	None	replace
423	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  cannot  find  symbol  value  [FE]          AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  value.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  value.hashCode();  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    +    item.hashCode();    	non-compiled	[CE]  cannot  find  symbol  value	47	None	replace
424	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  this.value.length();  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  1  +  this.value.length();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  1  +  this.value.length();	  iTotal    =    iTotal    *    iConstant    +    1    +    object.length();    	non-compiled	[CE]  cannot  find  symbol  value	42	None	replace
425	[BUG]  [BUGGY]  append((  double[])object,(double[])object);  [CE]  no  suitable  method  found  for  append(double[],double[])  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object,(double[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,(double[])object);	          append((    double[])object);    append((    double[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(double[],double[])	32	None	replace
426	[BUG]  [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  System.arraycopy((  double[])object,  0,  append((  double[])object);  }  [CE]  ')'  expected  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  System.arraycopy((  double[])object,  0,  append((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  System.arraycopy((  double[])object,  0,  append((  double[])object);  }	  	non-compiled	[CE]  ')'  expected	31	None	add
427	[BUG]  [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  System.arraycopy((  double[])object);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]          append((    double[])object);    append((  double[])object);  if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  System.arraycopy((  double[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	                append((        double[])object);        append((    double[])object);    if(object  instanceof  double[])  {  append((  double[])object);  append((  double[])object);  }  else  {  System.arraycopy((  double[])object);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	31	None	add
428	[BUG]  [BUGGY]  append((  int[])object,(int[])object);  [CE]  no  suitable  method  found  for  append(int[],int[])  [FE]    ClassCastException    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object,(int[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,(int[])object);	          append((    int[])object);    append((    int[])object);    	non-compiled	[CE]  no  suitable  method  found  for  append(int[],int[])	59	None	replace
429	[BUG]  [BUGGY]  if(!(object  instanceof  String[]))  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [CE]  ';'  expected  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(!(object  instanceof  String[]))  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(!(object  instanceof  String[]))  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    	non-compiled	[CE]  ';'  expected	76	None	replace
430	[BUG]  [BUGGY]  append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [CE]  'else'  without  'if'  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object);  if((  String[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  int  iTotal  =  iTotal  *  iConstant  +  object.hashCode()	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    iTotal    =    iTotal    *    iConstant    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
431	[BUG]  [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode()  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode()	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  ';'  expected	34	None	replace
432	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  AssertionFailedError  	34	1	replace
433	[BUG]  [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [FE]  AssertionFailedError  [FE]              ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	compilable	  [FE]  AssertionFailedError  	34	1	replace
434	[BUG]  [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  }  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  double[])  {  append((  double[])object);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  }	          append((    double[])object);    if((    double[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
435	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	24	9	replace
436	[BUG]  [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	if(object  instanceof  String[])  {  append((  String[])object);  iTotal  =  iTotal  *  iConstant;  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  else  {  append((  String[])object);  }	          append((    String[])object);    if((    String[])object);    iTotal    =    iTotal    *    iConstant;    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    else    {    append((    String[])object);    }    	compilable	  [FE]  ClassCastException  	24	9	replace
437	[BUG]  [BUGGY]  iTotal  =  iTotal  *  object  +  object.hashCode();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  object  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  object  +  object.hashCode();	          iTotal    =    iTotal    *    iConstant    +    object.hashCode();    int    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	88	None	replace
438	[BUG]  [BUGGY]  append((  Object[])object,  value);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [CE]  cannot  find  symbol  value  [FE]                ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  value);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  value);  iTotal  =  iTotal  *  iConstant  +  object.hashCode();	          append((    Object[])object);    if((    Object[])object);    iTotal    =    iTotal    *    iConstant    +    object.hashCode();    }    	non-compiled	[CE]  cannot  find  symbol  value	12	None	replace
439	[BUG]  [BUGGY]  iTotal  =  iTotal  *  result  +  object.toString().getClass().getName();  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  result  +  object.toString().getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  result  +  object.toString().getClass().getName();	  iTotal    =    iTotal    *    iConstant    +    object.toString().getClass().getName();    	non-compiled	[CE]  cannot  find  symbol  result	37	None	replace
440	[BUG]  [BUGGY]  append((  double[])object);  Append((  double[])object);  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object);  Append((  double[])object);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object);  Append((  double[])object);	          append((    int[])object);    Append((    int[])object);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
441	[BUG]  [BUGGY]  iTotal  =  iTotal  *  NON_ZeroOddNumber  +  object.getClass().getName();  [CE]  cannot  find  symbol  NON_ZeroOddNumber  [FE]                AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  NON_ZeroOddNumber  +  object.getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  NON_ZeroOddNumber  +  object.getClass().getName();	  iTotal    =    iTotal    *    iCONstant    +    object.getClass().getName();    	non-compiled	[CE]  cannot  find  symbol  NON_ZeroOddNumber	84	None	replace
442	[BUG]  [BUGGY]  iTotal  =  iTotal  *  value  +  object.getClass().getName();  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  value  +  object.getClass().getName();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  value  +  object.getClass().getName();	  iTotal    =    iTotal    *    iCONstant    +    object.getClass().getName();    	non-compiled	[CE]  cannot  find  symbol  value	84	None	replace
443	[BUG]  [BUGGY]  append((  String[])object,  1,  0);  [CE]  no  suitable  method  found  for  append(String[],int,int)  [FE]            ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  String[])object,  1,  0);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  String[])object,  1,  0);	  append((    String[])object,    0);    	non-compiled	[CE]  no  suitable  method  found  for  append(String[],int,int)	30	None	replace
444	[BUG]  [BUGGY]  append((  Object[])object,  value,  iConstant);  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  Object[])object,  value,  iConstant);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  Object[])object,  value,  iConstant);	  append((    Object[])object,    initialNonZeroOddNumber,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  value	121	None	replace
445	[BUG]  [BUGGY]  append((  double[])object,  iniConstant,  iTotal);  [CE]  cannot  find  symbol  iniConstant  [FE]          ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  double[])object,  iniConstant,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  double[])object,  iniConstant,  iTotal);	  append((    double[])object,    iConstant);    	non-compiled	[CE]  cannot  find  symbol  iniConstant	2	None	replace
446	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  3  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	add	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  3  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	91	8	add
447	[BUG]  [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  3  +  object.hashCode();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal    =    iTotal    *    iConstant    +    1    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  2  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  3  +  object.hashCode();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal        =        iTotal        *        iConstant        +        1        +        object.hashCode();        iTotal    =    iTotal    *    iConstant    +    2    +    object.hashCode();    iTotal  =  iTotal  *  iConstant  +  1  +  object.hashCode();  iTotal  =  iTotal  *  iConstant  +  3  +  object.hashCode();	  	compilable	  [FE]  AssertionFailedError  	91	8	add
448	[BUG]  [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.longValue();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  iTotal  =  iTotal  *  iConstant  +  super.longValue();  [BUGGY]      }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	iTotal  =  iTotal  *  iConstant  +  super.longValue();	  iTotal    =    iTotal    *    iConstant    +    super.intValue();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
449	[BUG]  [BUGGY]  append((  int[])object,  token,  iTotal);  [CE]  cannot  find  symbol  token  [FE]        ClassCastException      [CONTEXT]      append((double[])  object);  }  else  if  (object  instanceof  float[])  {  append((float[])  object);  }  else  if  (object  instanceof  boolean[])  {  append((boolean[])  object);  }  else  {  append((Object[])  object);  }  }  else  {      [BUGGY]  append((  int[])object,  token,  iTotal);  [BUGGY]      iTotal  =  iTotal  *  iConstant  +  object.hashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  append  [RETURN_TYPE]  HashCodeBuilder  Object  object  [VARIABLES]  Object  object  boolean  ThreadLocal  REGISTRY  int  i  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  value  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.3333333333333333	883	883	1	replace	append((  int[])object,  token,  iTotal);	  append((    int[])object,    iTotal);    	non-compiled	[CE]  cannot  find  symbol  token	25	None	replace
