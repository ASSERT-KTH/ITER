bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  unregister(object,  e);  [CE]  cannot  find  symbol  e  [FE]    AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]  unregister(object,  e);  [BUGGY]  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	unregister(object,  e);	unregister(object);  	non-compiled	[CE]  cannot  find  symbol  e	25	None	replace
2	[BUG]  [BUGGY]  unregister(object,  builder);  [CE]  method  unregister  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]  unregister(object,  builder);  [BUGGY]  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	unregister(object,  builder);	unregister(object);  	non-compiled	[CE]  method  unregister  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	25	None	replace
3	[BUG]  [BUGGY]  threadLocal.unregister(object);  [CE]  cannot  find  symbol  threadLocal  [FE]        AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]  threadLocal.unregister(object);  [BUGGY]  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	threadLocal.unregister(object);	unregister(object);  	non-compiled	[CE]  cannot  find  symbol  threadLocal	25	None	replace
4	[BUG]  [BUGGY]  unregister(object,  clazz);  [CE]  method  unregister  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]  unregister(object,  clazz);  [BUGGY]  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	unregister(object,  clazz);	unregister(object);  	non-compiled	[CE]  method  unregister  in  class  HashCodeBuilder  cannot  be  applied  to  given  types;	25	None	replace
5	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  <null>  but  was:  [org.apache.commons.lang3.builder.IDKey@3be0aeb  [FE]            AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    [BUGGY]  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	add	  	unregister(object);  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  <null>  but  was:  [org.apache.commons.lang3.builder.IDKey@3be0aeb  	25	3	replace
6	[BUG]  [BUGGY]    [FE]  junit.framework.AssertionFailedError:  Expected:  <null>  but  was:  [org.apache.commons.lang3.builder.IDKey@3be0aeb  [FE]            AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    [BUGGY]  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	  	unregister(object);  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  <null>  but  was:  [org.apache.commons.lang3.builder.IDKey@3be0aeb  	25	3	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    Field[]  fields  =  clazz.getDeclaredFields();  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	add	    Field[]  fields  =  clazz.getDeclaredFields();		compilable	  [FE]  AssertionFailedError  	26	1	add
8	[BUG]  [BUGGY]    Field[]  fields  =  clazz.getDeclaredFields();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    Field[]  fields  =  clazz.getDeclaredFields();  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    Field[]  fields  =  clazz.getDeclaredFields();		compilable	  [FE]  AssertionFailedError  	26	1	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    Field[]  fields  =  clazz.getFields();  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	add	    Field[]  fields  =  clazz.getFields();		compilable	  [FE]  AssertionFailedError  	26	1	add
10	[BUG]  [BUGGY]    Field[]  fields  =  clazz.getFields();  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    Field[]  fields  =  clazz.getFields();  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    Field[]  fields  =  clazz.getFields();		compilable	  [FE]  AssertionFailedError  	26	1	add
11	[BUG]  [BUGGY]    Field[]  fields  =  clazz.getDeclaredFields();  builder.append(fieldValue);  [CE]  cannot  find  symbol  fieldValue  [FE]        AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    Field[]  fields  =  clazz.getDeclaredFields();  builder.append(fieldValue);  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    Field[]  fields  =  clazz.getDeclaredFields();  builder.append(fieldValue);		non-compiled	[CE]  cannot  find  symbol  fieldValue	26	None	add
12	[BUG]  [BUGGY]    ThreadLocal.getInstance().reportCodeChange();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    ThreadLocal.getInstance().reportCodeChange();  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    ThreadLocal.getInstance().reportCodeChange();		non-compiled	[CE]  cannot  find  symbol	26	None	add
13	[BUG]  [BUGGY]    Field[]  fields  =  clazz.getFields();  builder.append(fieldValue);  [CE]  cannot  find  symbol  fieldValue  [FE]            AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    Field[]  fields  =  clazz.getFields();  builder.append(fieldValue);  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    Field[]  fields  =  clazz.getFields();  builder.append(fieldValue);		non-compiled	[CE]  cannot  find  symbol  fieldValue	26	None	add
14	[BUG]  [BUGGY]  unregister(fieldValue);  [CE]  cannot  find  symbol  fieldValue  [FE]    AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]  unregister(fieldValue);  [BUGGY]  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	unregister(fieldValue);	unregister(object);  	non-compiled	[CE]  cannot  find  symbol  fieldValue	25	None	replace
15	[BUG]  [BUGGY]  validate(object);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]  validate(object);  [BUGGY]  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	validate(object);	unregister(object);  	non-compiled	[CE]  cannot  find  symbol	25	None	replace
16	[BUG]  [BUGGY]    int  objectCount  =  field.get(object);  [CE]  cannot  find  symbol  field  [FE]    AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    int  objectCount  =  field.get(object);  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    int  objectCount  =  field.get(object);		non-compiled	[CE]  cannot  find  symbol  field	26	None	add
17	[BUG]  [BUGGY]    ThreadLocal.getInstance();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    ThreadLocal.getInstance();  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    ThreadLocal.getInstance();		non-compiled	[CE]  cannot  find  symbol	26	None	add
18	[BUG]  [BUGGY]    ThreadLocal.getInstance(field,  clazz);  [CE]  cannot  find  symbol  field  [FE]        AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    ThreadLocal.getInstance(field,  clazz);  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    ThreadLocal.getInstance(field,  clazz);		non-compiled	[CE]  cannot  find  symbol  field	26	None	add
19	[BUG]  [BUGGY]    ThreadLocal.getInstance(fieldValue,  clazz);  [CE]  cannot  find  symbol  fieldValue  [FE]          AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    ThreadLocal.getInstance(fieldValue,  clazz);  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    ThreadLocal.getInstance(fieldValue,  clazz);		non-compiled	[CE]  cannot  find  symbol  fieldValue	26	None	add
20	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    if(object!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	add	    if(object!=  null)  {  throw  new  IllegalStateException( " ");  }		compilable	  [FE]  IllegalStateException  	26	4	add
21	[BUG]  [BUGGY]    if(object!=  null)  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]    AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    if(object!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    if(object!=  null)  {  throw  new  IllegalStateException( " ");  }		compilable	  [FE]  IllegalStateException  	26	4	add
22	[BUG]  [BUGGY]    Class  <?>  object  =  clazz.getSuperclass();  [CE]  variable  object  is  already  defined  in  method  reflectionAppend(Object,Class<?>,HashCodeBuilder,boolean,String[])  [FE]      AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    Class  <?>  object  =  clazz.getSuperclass();  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    Class  <?>  object  =  clazz.getSuperclass();		non-compiled	[CE]  variable  object  is  already  defined  in  method  reflectionAppend(Object,Class<?>,HashCodeBuilder,boolean,String[])	26	None	add
23	[BUG]  [BUGGY]    Field[]  fields  =  clazz.getDeclaredFields();  builder.append(fields[i]);  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError  [CONTEXT]  Object  fieldValue  =  field.get(object);  builder.append(fieldValue);  }  catch  (IllegalAccessException  e)  {    throw  new  InternalError( "Unexpected  IllegalAccessException ");  }  }  }  }  finally  {  [BUGGY]    Field[]  fields  =  clazz.getDeclaredFields();  builder.append(fields[i]);  [BUGGY]  unregister(object);  }  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionAppend  [RETURN_TYPE]  void  Object  object  Class<?>  clazz  HashCodeBuilder  builder  boolean  useTransients  String[]  excludeFields  [VARIABLES]  Field  field  boolean  useTransients  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Object  fieldValue  object  Class  clazz  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  Field[]  fields  IllegalAccessException  e  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.5	196	196	1	replace	    Field[]  fields  =  clazz.getDeclaredFields();  builder.append(fields[i]);		non-compiled	[CE]  cannot  find  symbol  i	26	None	add
