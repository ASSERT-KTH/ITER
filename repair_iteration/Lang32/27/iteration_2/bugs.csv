bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	18	None	replace
2	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	18	None	replace
3	[BUG]  [BUGGY]  int  iConstant  =  initialNonZeroOddNumber;  [CE]  cannot  find  symbol  builder  [FE]    AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  iConstant  =  initialNonZeroOddNumber;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  initialNonZeroOddNumber;	      int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	21	None	replace
4	[BUG]  [BUGGY]  int  iConstant  =  initialNonZeroOddNumber  +  multiplierNonZeroOddNumber;  [CE]  cannot  find  symbol  builder  [FE]      AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  iConstant  =  initialNonZeroOddNumber  +  multiplierNonZeroOddNumber;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  initialNonZeroOddNumber  +  multiplierNonZeroOddNumber;	      int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	21	None	replace
5	[BUG]  [BUGGY]  int  iConstant  =  tokenNonZeroOddNumber;  [CE]  cannot  find  symbol  tokenNonZeroOddNumber  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  iConstant  =  tokenNonZeroOddNumber;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  tokenNonZeroOddNumber;	      int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  tokenNonZeroOddNumber	21	None	replace
6	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean)  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean)	6	None	replace
7	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,Class<CAP#1>)  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,Class<CAP#1>)	6	None	replace
8	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  testTransients);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,boolean)  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  testTransients);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  testTransients);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,boolean)	6	None	replace
9	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,String[])	6	None	replace
10	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	3	None	replace
11	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	3	None	replace
12	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  ')'  expected	3	None	replace
13	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	4	None	replace
14	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	4	None	replace
15	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	1	None	replace
16	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	1	None	replace
17	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	1	None	replace
18	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  +  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  +  1;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	22	None	replace
19	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	22	None	replace
20	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	9	None	add
21	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]      IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	9	None	add
22	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	9	None	add
23	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	9	None	add
24	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	9	None	add
25	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	13	None	replace
26	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	13	None	replace
27	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  cannot  find  symbol  multiplyerNonZeroOddNumber  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplyerNonZeroOddNumber,    initialNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol  multiplyerNonZeroOddNumber	11	None	replace
28	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  cannot  find  symbol  multipleNonZeroOddNumber  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplyerNonZeroOddNumber,    initialNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol  multipleNonZeroOddNumber	11	None	replace
29	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multierNonZeroOddNumber);  [CE]  cannot  find  symbol  multierNonZeroOddNumber  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multierNonZeroOddNumber);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplyerNonZeroOddNumber,    initialNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol  multierNonZeroOddNumber	11	None	replace
30	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,String[])	7	None	replace
31	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  excludeFields);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  excludeFields);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean,String[])	7	None	replace
32	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	15	None	replace
33	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	15	None	replace
34	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	15	None	replace
35	[BUG]  [BUGGY]      int  iConstant  =  multiplierNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber;  [CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]      int  iConstant  =  multiplierNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	        int    iConstant    =    multiplierNonZeroOddNumber;    int  iConstant  =  multiplierNonZeroOddNumber;	  	non-compiled	[CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	20	None	add
36	[BUG]  [BUGGY]      int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  multiplierNonZeroOddNumber;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]      int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  multiplierNonZeroOddNumber;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	        int    iConstant    =    multiplierNonZeroOddNumber;    Int  iConstant  =  multiplierNonZeroOddNumber;	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
37	[BUG]  [BUGGY]      int  iConstant  =  multiplierNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]      int  iConstant  =  multiplierNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	        int    iConstant    =    multiplierNonZeroOddNumber;    int  iConstant  =  multiplierNonZeroOddNumber);	  	non-compiled	[CE]  ';'  expected	20	None	add
38	[BUG]  [BUGGY]      int  iConstant  =  multiplierNonZeroOddNumber;  int  iConstant  =  multiplyerNonZeroOddNumber;  [CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]      int  iConstant  =  multiplierNonZeroOddNumber;  int  iConstant  =  multiplyerNonZeroOddNumber;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	        int    iConstant    =    multiplierNonZeroOddNumber;    int  iConstant  =  multiplyerNonZeroOddNumber;	  	non-compiled	[CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	20	None	add
39	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  excludeFields);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	14	None	replace
40	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  multiplierNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	14	None	replace
41	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	14	None	replace
42	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  iTotal;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  iTotal;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  iTotal;	      int    initialNonZeroOddNumber    =    iTotal    +    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	19	None	replace
43	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber;	      int    initialNonZeroOddNumber    =    iTotal    +    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	19	None	replace
44	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  tokenNonZeroOddNumber;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  tokenNonZeroOddNumber;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  tokenNonZeroOddNumber;	      int    initialNonZeroOddNumber    =    iTotal    +    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	19	None	replace
45	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	12	None	replace
46	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients);	      int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	12	None	replace
47	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	12	None	replace
48	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	12	None	replace
49	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	5	None	replace
50	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	5	None	replace
51	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)+  3;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)+  3;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)+  3;	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	5	None	replace
52	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
53	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
54	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
55	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  1;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    -    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	17	None	replace
56	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  -  2;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  -  2;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  -  2;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    -    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	17	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  AssertionFailedError  	10	4	replace
58	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  AssertionFailedError  	10	4	replace
59	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T)  [FE]      IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T)	10	None	replace
60	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.toString());  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,String)  [FE]        IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.toString());  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.toString());	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,String)	10	None	replace
61	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	2	None	replace
62	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	2	None	replace
63	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int)  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int)	8	None	replace
64	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  object);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,T)  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  object);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  object);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,T)	8	None	replace
65	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  iTotal,  object);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  iTotal,  object);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  iTotal,  object);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	8	None	replace
66	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients);	      int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	12	None	replace
67	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multierNonZeroOddNumber,  testTransients);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multierNonZeroOddNumber,  testTransients);	      int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	12	None	replace
68	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	14	None	replace
69	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  reflectUpToClass);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,Class<CAP#1>)  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  reflectUpToClass);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,Class<CAP#1>)	7	None	replace
70	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectionHashCode,  excludeFields);  [CE]  cannot  find  symbol  reflectionHashCode  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectionHashCode,  excludeFields);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectionHashCode,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  cannot  find  symbol  reflectionHashCode	7	None	replace
71	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  1);  [CE]  cannot  find  symbol  multiplyerNonZeroOddNumber  [FE]    IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  1);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  cannot  find  symbol  multiplyerNonZeroOddNumber	10	None	replace
72	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  cannot  find  symbol  multipleNonZeroOddNumber  [FE]      IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  cannot  find  symbol  multipleNonZeroOddNumber	10	None	replace
73	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(numberNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  cannot  find  symbol  numberNonZeroOddNumber  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(numberNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(numberNonZeroOddNumber,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplyerNonZeroOddNumber,    initialNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol  numberNonZeroOddNumber	11	None	replace
74	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  object);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  object);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  object);	      int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
75	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  null);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  null);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  null);	      int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
76	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  target);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  target);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  target);	      int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
77	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  1;  [CE]  cannot  find  symbol  builder  [FE]    AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  1;	      int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	21	None	replace
78	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber;  [CE]  cannot  find  symbol  builder  [FE]      AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber;	      int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	21	None	replace
79	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  -  1;  [CE]  cannot  find  symbol  builder  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  -  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  -  1;	      int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	21	None	replace
80	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  excludeFields);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	15	None	replace
81	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  -  1  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  -  1  +  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  -  1  +  1;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    -    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	17	None	replace
82	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	13	None	replace
83	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	2	None	replace
84	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	2	None	replace
85	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	18	None	replace
86	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	3	None	replace
87	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	3	None	replace
88	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	3	None	replace
89	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  total;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  total;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  total;	      int    initialNonZeroOddNumber    =    iTotal    +    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	19	None	replace
90	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	5	None	replace
91	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	5	None	replace
92	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	5	None	replace
93	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	22	None	replace
94	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  -  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  -  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  -  1;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	22	None	replace
95	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;	  	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	9	None	add
96	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]      IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	9	None	add
97	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	4	None	replace
98	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	4	None	replace
99	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	1	None	replace
100	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	1	None	replace
101	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	1	None	replace
102	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass);	      int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	14	None	replace
103	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	1	None	replace
104	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	4	None	replace
105	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [CE]  unclosed  string  literal  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplyerNonZeroOddNumber,    initialNonZeroOddNumber);    	compilable	  [FE]  AssertionFailedError  	11	4	replace
107	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplyerNonZeroOddNumber,    initialNonZeroOddNumber);    	compilable	  [FE]  AssertionFailedError  	11	4	replace
108	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	9	None	add
109	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]      IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  	non-compiled	[CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	9	None	add
110	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  ')'  expected	3	None	replace
111	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	3	None	replace
112	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  ')'  expected	3	None	replace
113	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  index;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  index;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  index;	      int    initialNonZeroOddNumber    =    iTotal    +    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	19	None	replace
114	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(initialNonZeroOddNumber);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(initialNonZeroOddNumber);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(initialNonZeroOddNumber);	      int    initialNonZeroOddNumber    =    iTotal    +    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	19	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  AssertionFailedError  	10	8	replace
116	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  AssertionFailedError  	10	8	replace
117	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;	      int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	5	None	replace
118	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	22	None	replace
119	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  +  2;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  +  2;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  +  2;	      int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	22	None	replace
120	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  reflectUpToClass);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean,Class<CAP#1>)  [FE]          AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  reflectUpToClass);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean,Class<CAP#1>)	7	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]      int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	        int    iConstant    =    multiplierNonZeroOddNumber;    int  iCONstant  =  multiplierNonZeroOddNumber;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
122	[BUG]  [BUGGY]      int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]      int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	        int    iConstant    =    multiplierNonZeroOddNumber;    int  iCONstant  =  multiplierNonZeroOddNumber;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
123	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  testTransients);	      int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
124	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  reflectUpToClass);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  reflectUpToClass);	      int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
125	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  testTransients);  [CE]  cannot  find  symbol  objects  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  testTransients);  [BUGGY]    Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  testTransients);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  cannot  find  symbol  objects	6	None	replace
126	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]    public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(   "The  object  to  build  a  hash  code  for  must  not  be  null   ");  }    [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  reflectUpToClass);  [BUGGY]    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  reflectUpToClass);	      int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	12	None	replace
