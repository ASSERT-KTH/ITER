bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    /    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	55	None	replace
2	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  initialNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  initialNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  initialNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	104	None	replace
3	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	104	None	replace
4	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	86	None	replace
5	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	102	None	replace
6	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	102	None	replace
7	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	102	None	replace
8	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	90	None	replace
9	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(numberNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(numberNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(numberNonZeroOddNumber,  multiplierNonZeroOddNumber)+  1;	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	90	None	replace
10	[BUG]  [BUGGY]  int  iConstant  =  initialNonZeroOddNumber  -  1;  [CE]  cannot  find  symbol  builder  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  initialNonZeroOddNumber  -  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  initialNonZeroOddNumber  -  1;	  int    iConstant    =    multiplierNonZeroOddNumber    -    1;    	non-compiled	[CE]  cannot  find  symbol  builder	79	None	replace
11	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  /  1;  [CE]  cannot  find  symbol  builder  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  /  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  /  1;	  int    iConstant    =    multiplierNonZeroOddNumber    -    1;    	non-compiled	[CE]  cannot  find  symbol  builder	79	None	replace
12	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  testTransients.toString());  [CE]  boolean  cannot  be  dereferenced  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  testTransients.toString());  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  testTransients.toString());	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    object.toString());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	60	None	replace
13	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  testTransients);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean)  [FE]              IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  testTransients);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  testTransients);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    object.toString());    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean)	60	None	replace
14	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber.toString());  [CE]  int  cannot  be  dereferenced  [FE]                IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber.toString());  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber.toString());	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    object.toString());    	non-compiled	[CE]  int  cannot  be  dereferenced	60	None	replace
15	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFi    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
16	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFi    	non-compiled	[CE]  ')'  expected	112	None	replace
17	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	87	None	replace
18	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  ')'  expected	87	None	replace
19	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2  +  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    /    2;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	85	None	replace
20	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  2;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  2;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    /    2;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	85	None	replace
21	[BUG]  [BUGGY]  int  iConstant  =  initialNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [CE]  cannot  find  symbol  builder  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  initialNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  initialNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;	          int    iConstant    =    multiplierNonZeroOddNumber;    int    iCONstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	122	None	replace
22	[BUG]  [BUGGY]  Integer  iConstant  =  initialNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [CE]  cannot  find  symbol  builder  [FE]      AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  iConstant  =  initialNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  iConstant  =  initialNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;	          int    iConstant    =    multiplierNonZeroOddNumber;    int    iCONstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	122	None	replace
23	[BUG]  [BUGGY]  Integer  iConstant  =  initialNonZeroOddNumber;  Integer  iCONstant  =  multiplierNonZeroOddNumber;  [CE]  cannot  find  symbol  builder  [FE]        AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  iConstant  =  initialNonZeroOddNumber;  Integer  iCONstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  iConstant  =  initialNonZeroOddNumber;  Integer  iCONstant  =  multiplierNonZeroOddNumber;	          int    iConstant    =    multiplierNonZeroOddNumber;    int    iCONstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	122	None	replace
24	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	92	None	replace
25	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	124	None	replace
26	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	124	None	replace
27	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	124	None	replace
28	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	123	None	replace
29	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplyerNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplyerNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplyerNonZeroOddNumber,  testTransients);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	123	None	replace
30	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  Integer    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	14	None	replace
31	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	  Integer    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	14	None	replace
32	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  tokenNonZeroOddNumber;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  tokenNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  tokenNonZeroOddNumber;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    tokenNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	44	None	replace
33	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  tokenNonZeroOddNumber  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  tokenNonZeroOddNumber  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  tokenNonZeroOddNumber  +  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    tokenNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	44	None	replace
34	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  reflectUpToClass;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  reflectUpToClass;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  reflectUpToClass;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    /    reflectUpToClass;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	118	None	replace
35	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  object;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  object;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  object;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    /    reflectUpToClass;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	118	None	replace
36	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass  +  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    /    reflectUpToClass;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	118	None	replace
37	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	99	None	replace
38	[BUG]  [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
39	[BUG]  [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
40	[BUG]  [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
41	[BUG]  [BUGGY]  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  cannot  find  symbol  clazz  [FE]                IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol  clazz	21	None	replace
42	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients);	  Integer    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	48	None	replace
43	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	  Integer    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	48	None	replace
44	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients);	  Integer    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	48	None	replace
45	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber);	  Integer    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	48	None	replace
46	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  initialNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  initialNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  initialNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    Math.min(multipleNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	101	None	replace
47	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  int    multiplierNonZeroOddNumber    =    Math.min(multipleNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	101	None	replace
48	[BUG]  [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class    <?>    clazz    =    object.getClass();    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
49	[BUG]  [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  exclude  [CE]  ')'  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  exclude  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  exclude	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class    <?>    clazz    =    object.getClass();    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  ')'  expected	22	None	replace
50	[BUG]  [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class    <?>    clazz    =    object.getClass();    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
51	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.min(multipleNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	88	None	replace
52	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.min(multipleNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	88	None	replace
53	[BUG]  [BUGGY]  int  iConstant  =  initialNonZeroOddNumber;  Integer  iConstant  =  multiplierNonZeroOddNumber;  [CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  initialNonZeroOddNumber;  Integer  iConstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  initialNonZeroOddNumber;  Integer  iConstant  =  multiplierNonZeroOddNumber;	          int    iConstant    =    multiplierNonZeroOddNumber;    Int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	36	None	replace
54	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Integer  iConstant  =  multiplierNonZeroOddNumber;  [CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Integer  iConstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber;  Integer  iConstant  =  multiplierNonZeroOddNumber;	          int    iConstant    =    multiplierNonZeroOddNumber;    Int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	36	None	replace
55	[BUG]  [BUGGY]  Integer  iConstant  =  multiplierNonZeroOddNumber;  [CE]  cannot  find  symbol  builder  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  iConstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  iConstant  =  multiplierNonZeroOddNumber;	          int    iConstant    =    multiplierNonZeroOddNumber;    Int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	36	None	replace
56	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
57	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyNonZeroOddNumber,  initialNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyNonZeroOddNumber,  initialNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiplyNonZeroOddNumber,  initialNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
58	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	126	None	replace
59	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	126	None	replace
60	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	126	None	replace
61	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber.intValue();  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber.intValue();  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber.intValue();	  int    iConstant    =    tokenNonZeroOddNumber;    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
62	[BUG]  [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  int  iConstant  =  multiplierNonZeroOddN  [CE]  ';'  expected  [FE]        IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  int  iConstant  =  multiplierNonZeroOddN  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  int  iConstant  =  multiplierNonZeroOddN	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    int    iConstant    =    multiplierNonZeroOddNumber    +    1;    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  ';'  expected	108	None	replace
63	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    int    iConstant    =    multiplierNonZeroOddNumber    +    1;    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  IllegalArgumentException  	108	4	replace
64	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    int    iConstant    =    multiplierNonZeroOddNumber    +    1;    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  IllegalArgumentException  	108	4	replace
65	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  cannot  find  symbol  multiplyerNonZeroOddNumber  [FE]        IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplyerNonZeroOddNumber,    initialNonZeroOddNumber    +    1);    	non-compiled	[CE]  cannot  find  symbol  multiplyerNonZeroOddNumber	71	None	replace
66	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    reflectUpToClass,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	82	None	replace
67	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    reflectUpToClass,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	82	None	replace
68	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  reflectUpToClass,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    reflectUpToClass,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	82	None	replace
69	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	97	None	replace
70	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplyerNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplyerNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplyerNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	97	None	replace
71	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    exclude    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
72	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    exclude    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
73	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	32	None	replace
74	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  null,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  null,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  null,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	32	None	replace
75	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  1  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  1  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  1  +  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    -    1    +    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	81	None	replace
76	[BUG]  [BUGGY]          int    iConstant    =    multiplierNonZeroOddNumber;    int  iCONstant  =  multiplierNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]          int    iConstant    =    multiplierNonZeroOddNumber;    int  iCONstant  =  multiplierNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	                int        iConstant        =        multiplierNonZeroOddNumber;        int    iCONstant    =    multiplierNonZeroOddNumber;    int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;	  	non-compiled	[CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	121	None	add
77	[BUG]  [BUGGY]          int    iConstant    =    multiplierNonZeroOddNumber;    int  iCONstant  =  multiplierNonZeroOddNumber;  int  multiplierNonZeroOddNumber  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]      AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]          int    iConstant    =    multiplierNonZeroOddNumber;    int  iCONstant  =  multiplierNonZeroOddNumber;  int  multiplierNonZeroOddNumber  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	                int        iConstant        =        multiplierNonZeroOddNumber;        int    iCONstant    =    multiplierNonZeroOddNumber;    int  multiplierNonZeroOddNumber  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;	  	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	121	None	add
78	[BUG]  [BUGGY]          int    iConstant    =    multiplierNonZeroOddNumber;    int  iCONstant  =  multiplierNonZeroOddNumber;  Integer  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]          int    iConstant    =    multiplierNonZeroOddNumber;    int  iCONstant  =  multiplierNonZeroOddNumber;  Integer  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	                int        iConstant        =        multiplierNonZeroOddNumber;        int    iCONstant    =    multiplierNonZeroOddNumber;    Integer  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;	  	non-compiled	[CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	121	None	add
79	[BUG]  [BUGGY]          int    iConstant    =    multiplierNonZeroOddNumber;    int  iCONstant  =  multiplierNonZeroOddNumber;  int  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]          int    iConstant    =    multiplierNonZeroOddNumber;    int  iCONstant  =  multiplierNonZeroOddNumber;  int  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	                int        iConstant        =        multiplierNonZeroOddNumber;        int    iCONstant    =    multiplierNonZeroOddNumber;    int  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber;	  	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	121	None	add
80	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object);	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    toInteger(initialNonZeroOddNumber);    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	114	None	replace
81	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object.initialNonZeroOddNumber);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object.initialNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object.initialNonZeroOddNumber);	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    toInteger(initialNonZeroOddNumber);    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	114	None	replace
82	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object,  multiplierNonZeroOddNumber);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object,  multiplierNonZeroOddNumber);	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    toInteger(initialNonZeroOddNumber);    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	114	None	replace
83	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object,  initialNonZeroOddNumber);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object,  initialNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(object,  initialNonZeroOddNumber);	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    toInteger(initialNonZeroOddNumber);    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	114	None	replace
84	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  Integer.toHexString(initialNonZeroOddNumber);  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  Integer.toHexString(initialNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  Integer.toHexString(initialNonZeroOddNumber);	  int    iConstant    =    initialNonZeroOddNumber;    	non-compiled	[CE]  incompatible  types	3	None	replace
85	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	66	None	replace
86	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  initialNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  initialNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  initialNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    Math.min(multiperNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	100	None	replace
87	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  int    multiplierNonZeroOddNumber    =    Math.min(multiperNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	100	None	replace
88	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)  [FE]                IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)	24	None	replace
89	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)	24	None	replace
90	[BUG]  [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  }  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  }  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  }	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)	24	None	replace
91	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)	24	None	replace
92	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0L;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0L;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0L;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    /    2.0;    	non-compiled	[CE]  ';'  expected	2	None	replace
93	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  2.0;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  2.0;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  2.0;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    /    2.0;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	2	None	replace
94	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0f;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0f;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0f;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    /    2.0;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	2	None	replace
95	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber  +  1;  [CE]  cannot  find  symbol  builder  [FE]          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber  +  1;	  int    iConstant    =    multiplierNonZeroOddNumber    +    initialNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	78	None	replace
96	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber  +  multiplierNonZeroOddNumber;  [CE]  cannot  find  symbol  builder  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber  +  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  initialNonZeroOddNumber  +  multiplierNonZeroOddNumber;	  int    iConstant    =    multiplierNonZeroOddNumber    +    initialNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	78	None	replace
97	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  testTransients);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	41	None	replace
98	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  testTransients,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  testTransients,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  testTransients,  reflectUpToClass);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	41	None	replace
99	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	41	None	replace
100	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  testTransients);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	41	None	replace
101	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  object);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  object);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  object);	  Integer    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	53	None	replace
102	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients);	  Integer    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	53	None	replace
103	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    exclude    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
104	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    exclude    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
105	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    exclude    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
106	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    object);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	74	None	replace
107	[BUG]  [BUGGY]  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class    <?>    object    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	109	None	replace
108	[BUG]  [BUGGY]  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class    <?>    object    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	109	None	replace
109	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddN  [CE]  ')'  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddN  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddN	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class    <?>    object    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  ')'  expected	109	None	replace
110	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroO  [CE]  ')'  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroO  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroO	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class    <?>    object    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  ')'  expected	109	None	replace
111	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  multiplierNonZeroOddNumber;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  multiplierNonZeroOddNumber;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    initialNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	43	None	replace
112	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass,  excludeFields);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,Class<CAP#1>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    testTransients,    reflectUpToClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,Class<CAP#1>,String[])	7	None	replace
113	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)/    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	50	None	replace
114	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  3;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  3;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  3;	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)/    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	50	None	replace
115	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)/    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	50	None	replace
116	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  Integer    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	11	None	replace
117	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  -  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  -  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multierNonZeroOddNumber);    	compilable	  [FE]  IllegalArgumentException  	29	4	replace
118	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  -  multiplierNonZeroOddNumber);  [FE]  IllegalArgumentException  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  -  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  -  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multierNonZeroOddNumber);    	compilable	  [FE]  IllegalArgumentException  	29	4	replace
119	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber;  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber;	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multierNonZeroOddNumber);    	non-compiled	[CE]  ')'  expected	29	None	replace
120	[BUG]  [BUGGY]  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  cannot  find  symbol  clazz  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    clazz    =    object.getClass();    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol  clazz	96	None	replace
121	[BUG]  [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    clazz    =    object.getClass();    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
122	[BUG]  [BUGGY]  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  cannot  find  symbol  builder  [FE]              IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    clazz    =    object.getClass();    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol  builder	96	None	replace
123	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields,  testTransients);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,String[],boolean)  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields,  testTransients);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields,  testTransients);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    reflectUpToClass,    excludeFields);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,String[],boolean)	30	None	replace
124	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  testTransients,  excludeFields);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,boolean,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    reflectUpToClass,    excludeFields);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,boolean,String[])	30	None	replace
125	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  %  2;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  %  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  %  2;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    -    2;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	56	None	replace
126	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	115	None	add
127	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]      AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	115	None	add
128	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	115	None	add
129	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);	  	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	115	None	add
130	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	54	None	replace
131	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  object);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  object);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  object);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	54	None	replace
132	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  testTransients,  initialNonZeroOddNumber);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,boolean,int)  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  testTransients,  initialNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  testTransients,  initialNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    testTransients,    object);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,boolean,int)	64	None	replace
133	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  object,  reflectUpToClass);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,T,Class<CAP#1>)  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  object,  reflectUpToClass);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  object,  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    testTransients,    object);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,T,Class<CAP#1>)	64	None	replace
134	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber  +  1,  initialNonZeroOddNumber);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int)  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber  +  1,  initialNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber  +  1,  initialNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    object);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int)	59	None	replace
135	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  reflectUpToClass);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,Class<CAP#1>)  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  reflectUpToClass);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    object);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,Class<CAP#1>)	59	None	replace
136	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  iConstant);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]              IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  iConstant);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  iConstant);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    object);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	59	None	replace
137	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  target);  [CE]  cannot  find  symbol  target  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  target);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  target);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(object,    multiplierNonZeroOddNumber,    initialNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol  target	63	None	replace
138	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    2);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	57	None	add
139	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]      AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    2);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	57	None	add
140	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    2);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	57	None	add
141	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    2);    Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);	  	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	57	None	add
142	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    reflectUpToClass,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	39	None	replace
143	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    reflectUpToClass,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	39	None	replace
144	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectUpToClass,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    reflectUpToClass,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	39	None	replace
145	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  testTransients;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  testTransients;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  testTransients;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectionHashCode;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	93	None	replace
146	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  reflectUpToClass);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,Class<CAP#1>)  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  reflectUpToClass);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    reflectUpToClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,Class<CAP#1>)	69	None	replace
147	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,Class<CAP#1>)  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    reflectUpToClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,Class<CAP#1>)	69	None	replace
148	[BUG]  [BUGGY]  int  iConstant  =  initialNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber;  [CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  initialNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  initialNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber;	          int    iConstant    =    multiplierNonZeroOddNumber;    int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	35	None	replace
149	[BUG]  [BUGGY]  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Integer    initialNonZeroOddNumber    =    new    Integer(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	23	None	replace
150	[BUG]  [BUGGY]  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Integer    initialNonZeroOddNumber    =    new    Integer(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	23	None	replace
151	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Integer    initialNonZeroOddNumber    =    new    Integer(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	23	None	replace
152	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierN  [CE]  ')'  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierN  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Integer  initialNonZeroOddNumber  =  new  Integer(initialNonZeroOddNumber,  multiplierN	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Integer    initialNonZeroOddNumber    =    new    Integer(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  ')'  expected	23	None	replace
153	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  testTransients);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    testTransients,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	33	None	replace
154	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    testTransients,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	33	None	replace
155	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  IllegalArgumentException  	116	4	replace
156	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber);  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  IllegalArgumentException  	116	4	replace
157	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber,  object);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T)  [FE]      AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber,  object);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber,  object);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T)	116	None	replace
158	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  2);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  2);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  IllegalArgumentException  	116	4	replace
159	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  2);  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  2);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  2);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  IllegalArgumentException  	116	4	replace
160	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  index;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  index;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  index;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    index;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	113	None	replace
161	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  2;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  2;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    index;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	113	None	replace
162	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    testTransients,    excludeFields);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean,String[])	31	None	replace
163	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    testTransients,    excludeFields);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean,String[])	31	None	replace
164	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  reflectUpToClass,  excludeFields);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean,Class<CAP#1>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  reflectUpToClass,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  reflectUpToClass,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    testTransients,    excludeFields);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean,Class<CAP#1>,String[])	31	None	replace
165	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  object,  reflectUpToClass,  excludeFields);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,T,Class<CAP#1>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  object,  reflectUpToClass,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  object,  reflectUpToClass,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    testTransients,    excludeFields);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,boolean,T,Class<CAP#1>,String[])	31	None	replace
166	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.length;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.length;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.length;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    object;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	19	None	replace
167	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  object;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  object;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  object;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    object;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	19	None	replace
168	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.testTransients;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.testTransients;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.testTransients;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    object;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	19	None	replace
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(numberNonZeroOddNumber,    multiplierNonZeroOddNumber);    	compilable	  [FE]  AssertionFailedError  	73	4	replace
170	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(numberNonZeroOddNumber,    multiplierNonZeroOddNumber);    	compilable	  [FE]  AssertionFailedError  	73	4	replace
171	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multipleNonZeroOddNumber);  [CE]  cannot  find  symbol  multipleNonZeroOddNumber  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multipleNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multipleNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(numberNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol  multipleNonZeroOddNumber	73	None	replace
172	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	10	None	replace
173	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  testTransients);	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	17	None	replace
174	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	17	None	replace
175	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  total;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  total;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  *  total;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    total;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	89	None	replace
176	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	46	None	replace
177	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	46	None	replace
178	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	46	None	replace
179	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  Integer    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	62	None	replace
180	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)+  2;	  int    multiplierNonZeroOddNumber    =    Math.min(multiperNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	91	None	replace
181	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  int    multiplierNonZeroOddNumber    =    Math.min(multiperNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	98	None	replace
182	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  null);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  null);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  null);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    null);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	75	None	replace
183	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  null);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  null);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  null);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    null);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	75	None	replace
184	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  null);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  null);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  null);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    null);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	75	None	replace
185	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.length);  [CE]  cannot  find  symbol  length  [FE]        IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.length);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.length);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  cannot  find  symbol  length	20	None	replace
186	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  testTransients);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean)  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  testTransients);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  testTransients);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    testTransients);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean)	6	None	replace
187	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean)  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    testTransients);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean)	6	None	replace
188	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  3);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  3);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    2);    	compilable	  [FE]  IllegalArgumentException  	58	4	replace
189	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  3);  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  3);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  3);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    2);    	compilable	  [FE]  IllegalArgumentException  	58	4	replace
190	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  /  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  /  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  /  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass    -    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	94	None	replace
191	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  -  2;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  -  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  -  2;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass    -    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	94	None	replace
192	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  testTransients  -  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  testTransients  -  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  testTransients  -  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass    -    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	94	None	replace
193	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean,Class<CAP#1>)  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    testTransients,    reflectUpToClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean,Class<CAP#1>)	120	None	replace
194	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean,Class<CAP#1>)  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    testTransients,    reflectUpToClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(T,int,int,boolean,Class<CAP#1>)	120	None	replace
195	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multierNonZeroOddNumber  +  1);  [CE]  cannot  find  symbol  multierNonZeroOddNumber  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multipleNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  cannot  find  symbol  multierNonZeroOddNumber	72	None	replace
196	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multipleNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  IllegalArgumentException  	72	4	replace
197	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber  +  1);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  initialNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multipleNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	compilable	  [FE]  IllegalArgumentException  	72	4	replace
198	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  testTransients  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  testTransients  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  testTransients  +  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass    +    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	18	None	replace
199	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  +  3;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  +  3;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  +  3;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass    +    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	18	None	replace
200	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	84	None	replace
201	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  *  2;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  *  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  *  2;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass    +    2;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	119	None	replace
202	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  /  2;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  /  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  /  2;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass    +    2;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	119	None	replace
203	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  target);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  target);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  target);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    target);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	76	None	replace
204	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  target,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  target,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  target,  multiplierNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    target);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	76	None	replace
205	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  target);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  target);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  target);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    target);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	76	None	replace
206	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  *  initialNonZeroOddNumber;  [CE]  cannot  find  symbol  builder  [FE]          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  *  initialNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  *  initialNonZeroOddNumber;	  int    iConstant    =    initialNonZeroOddNumber    +    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	4	None	replace
207	[BUG]  [BUGGY]  int  iConstant  =  initialNonZeroOddNumber  +  1;  [CE]  cannot  find  symbol  builder  [FE]        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  initialNonZeroOddNumber  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  initialNonZeroOddNumber  +  1;	  int    iConstant    =    multiplierNonZeroOddNumber    +    1;    	non-compiled	[CE]  cannot  find  symbol  builder	77	None	replace
208	[BUG]  [BUGGY]  int  iConstant  =  initialNonZeroOddNumber  +  2;  [CE]  cannot  find  symbol  builder  [FE]          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  initialNonZeroOddNumber  +  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  initialNonZeroOddNumber  +  2;	  int    iConstant    =    multiplierNonZeroOddNumber    +    1;    	non-compiled	[CE]  cannot  find  symbol  builder	77	None	replace
209	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  initialNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  initialNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  initialNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	103	None	replace
210	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	103	None	replace
211	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplierNonZeroOddNumber,    multiplierNonZeroOddNumber);    HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	106	None	add
212	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  Integer  multiplierNonZeroOddNumber  =  new  Integer(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]      AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  Integer  multiplierNonZeroOddNumber  =  new  Integer(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplierNonZeroOddNumber,    multiplierNonZeroOddNumber);    Integer  multiplierNonZeroOddNumber  =  new  Integer(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);	  	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	106	None	add
213	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  clazz  =  object.getClass();  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  clazz  =  object.getClass();  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplierNonZeroOddNumber,    multiplierNonZeroOddNumber);    HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  clazz  =  object.getClass();	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	106	None	add
214	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class  <?>  clazz  =  multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class  <?>  clazz  =  multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplierNonZeroOddNumber,    multiplierNonZeroOddNumber);    Class  <?>  clazz  =  multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);	  	non-compiled	[CE]  ';'  expected	106	None	add
215	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplierNonZeroOddNumber,    multiplierNonZeroOddNumber);    Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	106	None	add
216	[BUG]  [BUGGY]  int  iConstant  =  initialNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  initialNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  initialNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber);	          int    iConstant    =    multiplierNonZeroOddNumber;    int    iConstant    =    multiplierNonZeroOddNumber);    	non-compiled	[CE]  ';'  expected	37	None	replace
217	[BUG]  [BUGGY]  Integer  iConstant  =  initialNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  iConstant  =  initialNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  iConstant  =  initialNonZeroOddNumber;  int  iConstant  =  multiplierNonZeroOddNumber);	          int    iConstant    =    multiplierNonZeroOddNumber;    int    iConstant    =    multiplierNonZeroOddNumber);    	non-compiled	[CE]  ';'  expected	37	None	replace
218	[BUG]  [BUGGY]  Integer  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	95	None	replace
219	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	95	None	replace
220	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    reflectionHashCode,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	40	None	replace
221	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  multiplierNonZeroOddNumber,  testTransients);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    reflectionHashCode,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	40	None	replace
222	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber)/    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	117	None	replace
223	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(numberNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(numberNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(numberNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber)/    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	117	None	replace
224	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  iTotal  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  iTotal  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  iTotal  +  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    iTotal;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	42	None	replace
225	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);	  Integer    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	25	None	replace
226	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  testTransients,  reflectUpToClass);	  Integer    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	25	None	replace
227	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);	  Integer    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	25	None	replace
228	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "The    object    to    build    a    hash    code    for    	non-compiled	[CE]  unclosed  string  literal	105	None	replace
229	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [CE]  unclosed  string  literal  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "The    object    to    build    a    hash    code    for    	non-compiled	[CE]  unclosed  string  literal	105	None	replace
230	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    initialNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	15	None	replace
231	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    initialNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	15	None	replace
232	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	61	None	replace
233	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  iConstant,  object);  [CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  iConstant,  object);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  iConstant,  object);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    iTotal,    object);    	non-compiled	[CE]  non-static  variable  iConstant  cannot  be  referenced  from  a  static  context	65	None	replace
234	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.max(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	111	None	replace
235	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    initialNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	45	None	replace
236	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multierNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multierNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multierNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	67	None	replace
237	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multierNonZeroOddNumber,  testTransients,  reflectUpToClass);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	67	None	replace
238	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	26	None	replace
239	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.toString(),  reflectUpToClass);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,String,Class<CAP#1>)  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.toString(),  reflectUpToClass);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.toString(),  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    object.toString());    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,String,Class<CAP#1>)	60	None	replace
240	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  int    multiplierNonZeroOddNumber    =    Math.min(multiperNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	98	None	replace
241	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    reflectionHashCode,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	40	None	replace
242	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  reflectionHashCode,  multiplierNonZeroOddNumber,  testTransients);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    reflectionHashCode,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	40	None	replace
243	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  0;  [CE]  cannot  find  symbol  builder  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  0;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  0;	          int    iConstant    =    multiplierNonZeroOddNumber;    int    iCONstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	122	None	replace
244	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  initialNonZeroOddNumber;  [CE]  cannot  find  symbol  builder  [FE]      AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  initialNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  initialNonZeroOddNumber;	          int    iConstant    =    multiplierNonZeroOddNumber;    int    iCONstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	122	None	replace
245	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber  +  1;  [CE]  cannot  find  symbol  builder  [FE]        AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber;  int  iCONstant  =  multiplierNonZeroOddNumber  +  1;	          int    iConstant    =    multiplierNonZeroOddNumber;    int    iCONstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  builder	122	None	replace
246	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  reflectUpToClass);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	102	None	replace
247	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  reflectUpToClass,  excludeFields);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,Class<CAP#1>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  reflectUpToClass,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  reflectUpToClass,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    reflectUpToClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,Class<CAP#1>,String[])	69	None	replace
248	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	97	None	replace
249	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	97	None	replace
250	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  -  1  +  initialNonZeroOddNumber;  [CE]  cannot  find  symbol  builder  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  -  1  +  initialNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  -  1  +  initialNonZeroOddNumber;	  int    iConstant    =    multiplierNonZeroOddNumber    -    1;    	non-compiled	[CE]  cannot  find  symbol  builder	79	None	replace
251	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  -  2;  [CE]  cannot  find  symbol  builder  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  -  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  -  2;	  int    iConstant    =    multiplierNonZeroOddNumber    -    1;    	non-compiled	[CE]  cannot  find  symbol  builder	79	None	replace
252	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  multiplierNonZeroOddNumber);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int)  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(numberNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int)	73	None	replace
253	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  -  1,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  -  1,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(numberNonZeroOddNumber,    multiplierNonZeroOddNumber);    	compilable	  [FE]  IllegalArgumentException  	73	4	replace
254	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  -  1,  multiplierNonZeroOddNumber);  [FE]  IllegalArgumentException  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  -  1,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  -  1,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(numberNonZeroOddNumber,    multiplierNonZeroOddNumber);    	compilable	  [FE]  IllegalArgumentException  	73	4	replace
255	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber.initialNonZeroOddNumber;  [CE]  int  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber.initialNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber.initialNonZeroOddNumber;	  int    iConstant    =    initialNonZeroOddNumber;    	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	replace
256	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	34	None	replace
257	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	104	None	replace
258	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  *  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  *  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectUpToClass  *  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass    +    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	18	None	replace
259	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	123	None	replace
260	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	123	None	replace
261	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber  +  1,  initialNonZeroOddNumber  +  1);  [CE]  cannot  find  symbol  multiplyerNonZeroOddNumber  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber  +  1,  initialNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber  +  1,  initialNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  cannot  find  symbol  multiplyerNonZeroOddNumber	116	None	replace
262	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber  +  1,  object  +  1);  [CE]  cannot  find  symbol  multiplyerNonZeroOddNumber  [FE]      AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber  +  1,  object  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber  +  1,  object  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  cannot  find  symbol  multiplyerNonZeroOddNumber	116	None	replace
263	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  Integer    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	11	None	replace
264	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients);	  Integer    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	25	None	replace
265	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  excludeFields);	  Integer    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	25	None	replace
266	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);	  Integer    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	25	None	replace
267	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  testTransients);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    null);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	75	None	replace
268	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	66	None	replace
269	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplierNonZeroOddNumber,    multiplierNonZeroOddNumber);    	compilable	  [FE]  IllegalArgumentException  	107	4	replace
270	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplierNonZeroOddNumber,    multiplierNonZeroOddNumber);    	compilable	  [FE]  IllegalArgumentException  	107	4	replace
271	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  tokenNonZeroOddNumber;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  tokenNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  tokenNonZeroOddNumber;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    tokenNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	44	None	replace
272	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  tokenNonZeroOddNumber  -  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  tokenNonZeroOddNumber  -  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  tokenNonZeroOddNumber  -  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    tokenNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	44	None	replace
273	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  1);  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  [CE]  cannot  find  symbol  multiplyerNonZeroOddNumber  [FE]        IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  1);  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  1);  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    1;    	non-compiled	[CE]  cannot  find  symbol  multiplyerNonZeroOddNumber	95	None	replace
274	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
275	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	16	None	replace
276	[BUG]  [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  [CE]  cannot  find  symbol  multipleNonZeroOddNumber  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol  multipleNonZeroOddNumber	21	None	replace
277	[BUG]  [BUGGY]  ReflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  cannot  find  symbol  clazz  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  ReflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	ReflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol  clazz	21	None	replace
278	[BUG]  [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  [CE]  cannot  find  symbol  multiplyNonZeroOddNumber  [FE]              IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol  multiplyNonZeroOddNumber	21	None	replace
279	[BUG]  [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  ReflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  [CE]  cannot  find  symbol  multipleNonZeroOddNumber  [FE]                IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  ReflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  ReflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol  multipleNonZeroOddNumber	21	None	replace
280	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    exclude    	non-compiled	[CE]  ')'  expected	12	None	replace
281	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    exclude    	non-compiled	[CE]  ')'  expected	12	None	replace
282	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	13	None	replace
283	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multipleNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multipleNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multipleNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	67	None	replace
284	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass  +  2;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass  +  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass  +  2;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    /    reflectUpToClass;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	118	None	replace
285	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    2);    int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);	  	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	57	None	add
286	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  int  iConstant  =  0;  [CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  int  iConstant  =  0;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber;  int  iConstant  =  0;	          int    iConstant    =    multiplierNonZeroOddNumber;    int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  variable  iConstant  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	35	None	replace
287	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);	  int    multiplierNonZeroOddNumber    =    Math.min(multiperNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	100	None	replace
288	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multierNonZeroOddNumber,  initialNonZeroOddNumber);  [CE]  cannot  find  symbol  multierNonZeroOddNumber  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multierNonZeroOddNumber,  initialNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(multierNonZeroOddNumber,  initialNonZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multierNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol  multierNonZeroOddNumber	29	None	replace
289	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNONZeroOddNumber);  [CE]  cannot  find  symbol  multiplierNONZeroOddNumber  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNONZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNONZeroOddNumber);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multierNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol  multiplierNONZeroOddNumber	29	None	replace
290	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	61	None	replace
291	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	61	None	replace
292	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	61	None	replace
293	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  2;  [CE]  cannot  find  symbol  builder  [FE]        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  2;	  int    iConstant    =    multiplierNonZeroOddNumber    +    1;    	non-compiled	[CE]  cannot  find  symbol  builder	77	None	replace
294	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  3;  [CE]  cannot  find  symbol  builder  [FE]          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  3;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  3;	  int    iConstant    =    multiplierNonZeroOddNumber    +    1;    	non-compiled	[CE]  cannot  find  symbol  builder	77	None	replace
295	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  1L;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  1L;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  1L;	  int    iConstant    =    multiplierNonZeroOddNumber    +    1;    	non-compiled	[CE]  possible  loss  of  precision	77	None	replace
296	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multipleNonZeroOddNumber  +  1);  [CE]  cannot  find  symbol  multipleNonZeroOddNumber  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multipleNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multipleNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(multipleNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  cannot  find  symbol  multipleNonZeroOddNumber	72	None	replace
297	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  object);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,T)  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  object);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  object);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    iTotal,    object);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,T)	65	None	replace
298	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  ')'  expected	87	None	replace
299	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	87	None	replace
300	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  indices;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  indices;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  indices;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    index;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	113	None	replace
301	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  InitialNonZeroOddNumber;  [CE]  cannot  find  symbol  InitialNonZeroOddNumber  [FE]          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  InitialNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  InitialNonZeroOddNumber;	  int    iConstant    =    initialNonZeroOddNumber    +    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  InitialNonZeroOddNumber	4	None	replace
302	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  initialNonZeroOddNumber,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	80	None	replace
303	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  refTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  refTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  refTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    multiplierNonZeroOddNumber,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	80	None	replace
304	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	103	None	replace
305	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  initialNonZeroOddNumber;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  initialNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  initialNonZeroOddNumber;	          int    iConstant    =    multiplierNonZeroOddNumber;    Int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
306	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  multiplierNonZeroOddNumber  +  1;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  multiplierNonZeroOddNumber  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  multiplierNonZeroOddNumber  +  1;	          int    iConstant    =    multiplierNonZeroOddNumber;    Int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
307	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(target,  multiplierNonZeroOddNumber,  object);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(target,  multiplierNonZeroOddNumber,  object);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(target,  multiplierNonZeroOddNumber,  object);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    target);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	76	None	replace
308	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  target,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  target,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  target,  testTransients);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    target);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	76	None	replace
309	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	83	None	replace
310	[BUG]  [BUGGY]  Integer  initialNonZeroOddNumber  =  new  Integer(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  1);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  initialNonZeroOddNumber  =  new  Integer(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  initialNonZeroOddNumber  =  new  Integer(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Integer    initialNonZeroOddNumber    =    new    Integer(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	23	None	replace
311	[BUG]  [BUGGY]  Integer  initialNonZeroOddNumber  =  new  Integer(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  initialNonZeroOddNumber  =  new  Integer(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  initialNonZeroOddNumber  =  new  Integer(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Integer    initialNonZeroOddNumber    =    new    Integer(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	23	None	replace
312	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  initialNonZeroOddNumber,  reflectUpToClass);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	126	None	replace
313	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.hashCode());  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)  [FE]                IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.hashCode());  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object.hashCode());	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)	24	None	replace
314	[BUG]  [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZ  [CE]  ')'  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZ  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZ	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  ')'  expected	24	None	replace
315	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi	  int    multiplierNonZeroOddNumber    =    Math.min(multipleNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  ')'  expected	88	None	replace
316	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  excludeFields,  testTransients);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,String[],boolean)  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  excludeFields,  testTransients);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  excludeFields,  testTransients);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    objects,    testTransients);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,String[],boolean)	125	None	replace
317	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(multiplyNonZeroOddNumber,  object);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(multiplyNonZeroOddNumber,  object);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(multiplyNonZeroOddNumber,  object);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	47	None	replace
318	[BUG]  [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients  [CE]  ')'  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	ReflectionBuilder  builder  =  new  ReflectionBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class    <?>    clazz    =    object.getClass();    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  ')'  expected	22	None	replace
319	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( " ");  }	  Integer    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	14	None	replace
320	[BUG]  [BUGGY]  Integer  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  incompatible  types  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    clazz    =    object.getClass();    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  incompatible  types	96	None	replace
321	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  2.0  +  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    /    2.0;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	2	None	replace
322	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  3;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  3;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  3;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	1	None	replace
323	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);	  int    multiplierNonZeroOddNumber    =    Math.min(multipleNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	101	None	replace
324	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    object);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	74	None	replace
325	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "The    object    to    build    a    hash    code    for    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	105	None	replace
326	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [CE]  unclosed  string  literal  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "The    object    to    build    a    hash    code    for    	non-compiled	[CE]  unclosed  string  literal	105	None	replace
327	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  reflectionHashCode);  [CE]  cannot  find  symbol  reflectionHashCode  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  reflectionHashCode);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  reflectionHashCode);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    object);    	non-compiled	[CE]  cannot  find  symbol  reflectionHashCode	59	None	replace
328	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  initialNonZeroOddNumber)/  1;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  initialNonZeroOddNumber)/  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  initialNonZeroOddNumber)/  1;	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber)/    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	117	None	replace
329	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	124	None	replace
330	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  objects);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  objects);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  objects);	  Integer    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	53	None	replace
331	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  2);  [CE]  cannot  find  symbol  multiplyerNonZeroOddNumber  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  2);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyerNonZeroOddNumber,  initialNonZeroOddNumber  +  2);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    2);    	non-compiled	[CE]  cannot  find  symbol  multiplyerNonZeroOddNumber	58	None	replace
332	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(object,  multiplierNonZeroOddNumber  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class    <?>    object    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	109	None	replace
333	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)/    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	50	None	replace
334	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)/    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	50	None	replace
335	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)/    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	50	None	replace
336	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;	  int    multiplierNonZeroOddNumber    =    Math.min(multiperNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	91	None	replace
337	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode  +  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectionHashCode;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	93	None	replace
338	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  iTotal;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  iTotal;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  iTotal;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    iTotal;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	42	None	replace
339	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber  -  1);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber  -  1);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber  -  1);	  Integer    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	48	None	replace
340	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	10	None	replace
341	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  inputNonZeroOddNumber;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  inputNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  inputNonZeroOddNumber;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    initialNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	43	None	replace
342	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  target;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  target;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  target;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    initialNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	43	None	replace
343	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  inputNonZeroOddNumber;  [CE]  cannot  find  symbol  inputNonZeroOddNumber  [FE]          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  inputNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  inputNonZeroOddNumber;	  int    iConstant    =    multiplierNonZeroOddNumber    +    initialNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  inputNonZeroOddNumber	78	None	replace
344	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode  -  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode  -  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode  -  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass    -    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	94	None	replace
345	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  hashCodeBuilder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  hashCodeBuilder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplierNonZeroOddNumber,    multiplierNonZeroOddNumber);    HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  hashCodeBuilder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	106	None	add
346	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]      AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplierNonZeroOddNumber,    multiplierNonZeroOddNumber);    HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	106	None	add
347	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  hashCodeBuilder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddN  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  hashCodeBuilder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddN  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplierNonZeroOddNumber,    multiplierNonZeroOddNumber);    HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  hashCodeBuilder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddN	  	non-compiled	[CE]  ')'  expected	106	None	add
348	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFi    	non-compiled	[CE]  ')'  expected	112	None	replace
349	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);	  	non-compiled	[CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	115	None	add
350	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]      AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	115	None	add
351	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  2);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]        AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  2);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  2);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	115	None	add
352	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  excludeFields,  reflectUpToClass);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean,String[],Class<CAP#1>)  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  excludeFields,  reflectUpToClass);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  testTransients,  excludeFields,  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    testTransients,    excludeFields);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean,String[],Class<CAP#1>)	31	None	replace
353	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  Integer    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	62	None	replace
354	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  total;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  total;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  total;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    total;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	89	None	replace
355	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  '/';  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  '/';  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  '/';	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    total;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	89	None	replace
356	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass  -  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass  -  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  reflectUpToClass  -  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass    -    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	94	None	replace
357	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for	  int    multiplierNonZeroOddNumber    =    Math.min(multiperNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	98	None	replace
358	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [CE]  unclosed  string  literal  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a	  int    multiplierNonZeroOddNumber    =    Math.min(multiperNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	98	None	replace
359	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  must  not  be  nu  [CE]  unclosed  string  literal  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  must  not  be  nu  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiperNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  must  not  be  nu	  int    multiplierNonZeroOddNumber    =    Math.min(multiperNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	98	None	replace
360	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  iTotal;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  iTotal;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  iTotal;	          int    iConstant    =    multiplierNonZeroOddNumber;    Int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
361	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  iConstant;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  iConstant;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  iConstant;	          int    iConstant    =    multiplierNonZeroOddNumber;    Int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
362	[BUG]  [BUGGY]  Int  iConstant  =  multiplierNonZeroOddNumber;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Int  iConstant  =  multiplierNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Int  iConstant  =  multiplierNonZeroOddNumber;	          int    iConstant    =    multiplierNonZeroOddNumber;    Int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
363	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  0;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  0;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber;  Int  iConstant  =  0;	          int    iConstant    =    multiplierNonZeroOddNumber;    Int    iConstant    =    multiplierNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
364	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  index;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  index;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  /  index;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    index;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	113	None	replace
365	[BUG]  [BUGGY]  if(testTransients!=  null)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierN  [CE]  ')'  expected  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  if(testTransients!=  null)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierN  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	if(testTransients!=  null)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierN	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  ')'  expected	21	None	replace
366	[BUG]  [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  [CE]  cannot  find  symbol  clazz  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	if(testTransients)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol  clazz	21	None	replace
367	[BUG]  [BUGGY]  if(testTransients!=  null)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]              IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  if(testTransients!=  null)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	if(testTransients!=  null)  {  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplyNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	21	None	replace
368	[BUG]  [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  object.initialNonZeroOddNumber;  [CE]  cannot  find  symbol  initialNonZeroOddNumber  [FE]          AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  iConstant  =  multiplierNonZeroOddNumber  +  object.initialNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  iConstant  =  multiplierNonZeroOddNumber  +  object.initialNonZeroOddNumber;	  int    iConstant    =    multiplierNonZeroOddNumber    +    initialNonZeroOddNumber;    	non-compiled	[CE]  cannot  find  symbol  initialNonZeroOddNumber	78	None	replace
369	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  object);  [CE]  cannot  find  symbol  objects  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  object);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  object);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    iTotal,    object);    	non-compiled	[CE]  cannot  find  symbol  objects	65	None	replace
370	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  testTransients,  reflectUpToClass);  [CE]  cannot  find  symbol  objects  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  testTransients,  reflectUpToClass);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  testTransients,  reflectUpToClass);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    testTransients,    reflectUpToClass);    	non-compiled	[CE]  cannot  find  symbol  objects	7	None	replace
371	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFi    	non-compiled	[CE]  ')'  expected	112	None	replace
372	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  reflectUpToClass);	  Integer    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	25	None	replace
373	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients);	  Integer    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	25	None	replace
374	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    object);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	74	None	replace
375	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  toInteger(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    toInteger(initialNonZeroOddNumber);    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	114	None	replace
376	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber)/  1;	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber)+    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	90	None	replace
377	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    2);    int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	57	None	add
378	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]      AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    2);    Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  2);	  	non-compiled	[CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	57	None	add
379	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  objects,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  objects,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  objects,  testTransients,  excludeFields);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	26	None	replace
380	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]              AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  testTransients,  reflectUpToClass);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    initialNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	46	None	replace
381	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  Integer    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	62	None	replace
382	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ObjectUtilities.invoke(object,  multiplierNonZeroOddNumber,  object,  testTransients,  reflectUpToClass);	  int    multiplierNonZeroOddNumber    =    ObjectUtilities.invoke(object,    initialNonZeroOddNumber,    testTransients,    reflectUpToClass);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	34	None	replace
383	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
384	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  must  not  be  nu  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  must  not  be  nu  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  must  not  be  nu	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
385	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	97	None	replace
386	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	97	None	replace
387	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  must  not  be  nu  [CE]  unclosed  string  literal  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  must  not  be  nu  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multiplyerNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  must  not  be  nu	  int    multiplierNonZeroOddNumber    =    Math.min(multiplyerNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	97	None	replace
388	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects);  [CE]  cannot  find  symbol  objects  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(object,    multiplierNonZeroOddNumber,    initialNonZeroOddNumber);    	non-compiled	[CE]  cannot  find  symbol  objects	63	None	replace
389	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.intValue();  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.intValue();  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.intValue();	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    object;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	19	None	replace
390	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object,  multiplierNonZeroOddNumber);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object,  multiplierNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object,  multiplierNonZeroOddNumber);	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    object;    	non-compiled	[CE]  ';'  expected	19	None	replace
391	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode(initialNonZeroOddNumber);  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode(initialNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  reflectionHashCode(initialNonZeroOddNumber);	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectionHashCode;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	93	None	replace
392	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for	  Integer    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
393	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [CE]  unclosed  string  literal  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a	  Integer    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
394	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  reflectUpToClass,  testTransients);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,Class<CAP#1>,boolean)  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  reflectUpToClass,  testTransients);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  object,  reflectUpToClass,  testTransients);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    object,    testTransients);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,Class<CAP#1>,boolean)	6	None	replace
395	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields,  object);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,String[],T)  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields,  object);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  reflectUpToClass,  excludeFields,  object);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    testTransients,    object);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,Class<CAP#1>,String[],T)	64	None	replace
396	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  multiplierNonZeroOddNumber,  initialNonZeroOddNumber);	  Integer    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	53	None	replace
397	[BUG]  [BUGGY]  int  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  incompatible  types  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    clazz    =    object.getClass();    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  incompatible  types	96	None	replace
398	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  if(testTransients)  {  throw  new  IllegalArgumentException( "The  object  to  build  a  hash  code  for	  int    multiplierNonZeroOddNumber    =    Math.max(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    if(testTransients)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	13	None	replace
399	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  iTotal);  [CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  iTotal);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  iTotal);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    object);    	non-compiled	[CE]  non-static  variable  iTotal  cannot  be  referenced  from  a  static  context	59	None	replace
400	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  null);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  null);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  null);	  int    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    initialNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	45	None	replace
401	[BUG]  [BUGGY]  Instance  <  T>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Instance  <  T>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Instance  <  T>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class    <?>    clazz    =    object.getClass();    reflectionAppend(object,    clazz,    builder,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
402	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  object);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  object);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  initialNonZeroOddNumber,  object);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    multiplierNonZeroOddNumber,    target);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	76	None	replace
403	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.max(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  2;	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber)/    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	117	None	replace
404	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1)/  1;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                      AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1)/  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1)/  1;	  int    multiplierNonZeroOddNumber    =    Math.min(multierNonZeroOddNumber,    multiplierNonZeroOddNumber)/    1;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	117	None	replace
405	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.initialNonZeroOddNumber;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.initialNonZeroOddNumber;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object.initialNonZeroOddNumber;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    initialNonZeroOddNumber;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	43	None	replace
406	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class  <?>  object  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class  <?>  object  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(multiplierNonZeroOddNumber,    multiplierNonZeroOddNumber);    Class  <?>  object  =  new  HashCodeBuilder(multiplierNonZeroOddNumber,  multiplierNonZeroOddNumber);	  	non-compiled	[CE]  variable  object  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	106	None	add
407	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  2);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)  [FE]                IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  2);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  2);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,int)	24	None	replace
408	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  multiplierNonZeroOddNumber,  object);  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,T)  [FE]            AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  multiplierNonZeroOddNumber,  object);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  multiplierNonZeroOddNumber,  object);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(numberNonZeroOddNumber,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,T)	73	None	replace
409	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  reflectUpToClass);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  reflectUpToClass);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  ReflectionUtil.getMultiply(object,  multiplierNonZeroOddNumber,  reflectUpToClass);	  Integer    multiplierNonZeroOddNumber    =    ReflectionUtil.getMultiply(object,    multiplierNonZeroOddNumber);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	48	None	replace
410	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  initialNonZeroOddNumber,  testTransients);  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  initialNonZeroOddNumber,  testTransients);  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  ReflectionUtilities.invoke(object,  null,  initialNonZeroOddNumber,  testTransients);	  int    multiplierNonZeroOddNumber    =    ReflectionUtilities.invoke(object,    null,    multiplierNonZeroOddNumber,    testTransients);    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	123	None	replace
411	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber,  object  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber,  object  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber,  object  +  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	116	None	replace
412	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]    AssertionFailedError    [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber    +    1,    multiplierNonZeroOddNumber    +    1);    int  iConstant  =  multiplierNonZeroOddNumber  +  1;  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber  +  1,  multiplierNonZeroOddNumber  +  1);	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	115	None	add
413	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  testTransients,  object.toString());  [CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean,String)  [FE]            IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  testTransients,  object.toString());  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1,  object,  testTransients,  object.toString());	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1,    object.toString());    	non-compiled	[CE]  no  suitable  constructor  found  for  HashCodeBuilder(int,int,T,boolean,String)	60	None	replace
414	[BUG]  [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object  +  1;  [CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object  +  1;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  initialNonZeroOddNumber  =  multiplierNonZeroOddNumber  +  object  +  1;	  int    initialNonZeroOddNumber    =    multiplierNonZeroOddNumber    +    reflectUpToClass    +    1;    	non-compiled	[CE]  variable  initialNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	18	None	replace
415	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  testTransients,  excludeFields);  [CE]  cannot  find  symbol  objects  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  testTransients,  excludeFields);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber,  objects,  testTransients,  excludeFields);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  cannot  find  symbol  objects	9	None	replace
416	[BUG]  [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	Integer  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  excludeFi	  Integer    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  ')'  expected	11	None	replace
417	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  3;  [CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])  [FE]                        AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  3;  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multierNonZeroOddNumber,  multiplierNonZeroOddNumber)/  3;	  int    multiplierNonZeroOddNumber    =    Math.min(initialNonZeroOddNumber,    multiplierNonZeroOddNumber)+    3;    	non-compiled	[CE]  variable  multiplierNonZeroOddNumber  is  already  defined  in  method  <T>reflectionHashCode(int,int,T,boolean,Class<?  super  T>,String[])	51	None	replace
418	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +  1);  Class  <?>  object  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  +	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    Class    <?>    object    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multiplierNonZeroOddNumber    +    1);    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
419	[BUG]  [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude  [BUGGY]      HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber);  Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	int  multiplierNonZeroOddNumber  =  Math.min(multipleNonZeroOddNumber,  multiplierNonZeroOddNumber);  reflectionAppend(object,  initialNonZeroOddNumber,  testTransients,  exclude	  int    multiplierNonZeroOddNumber    =    Math.min(multipleNonZeroOddNumber,    multiplierNonZeroOddNumber);    reflectionAppend(object,    initialNonZeroOddNumber,    testTransients,    excludeFields);    	non-compiled	[CE]  ')'  expected	88	None	replace
420	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	add	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multierNonZeroOddNumber);    	compilable	  [FE]  IllegalArgumentException  	29	4	replace
421	[BUG]  [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);  [FE]  IllegalArgumentException  [FE]                AssertionFailedError      [CONTEXT]      public  static  <T>  int  reflectionHashCode(int  initialNonZeroOddNumber,  int  multiplierNonZeroOddNumber,  T  object,  boolean  testTransients,  Class<?  super  T>  reflectUpToClass,  String[]  excludeFields)  {  if  (object  ==  null)  {  throw  new  IllegalArgumentException(     "The  object  to  build  a  hash  code  for  must  not  be  null     ");  }      [BUGGY]  HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);  [BUGGY]      Class<?>  clazz  =  object.getClass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  while  (clazz.getSuperclass()  !=  null  &&  clazz  !=  reflectUpToClass)  {  clazz  =  clazz.getSuperclass();  reflectionAppend(object,  clazz,  builder,  testTransients,  excludeFields);  }  return  builder.toHashCode();  }  [CLASS]  HashCodeBuilder  1  [METHOD]  reflectionHashCode  [RETURN_TYPE]  <T>  int  initialNonZeroOddNumber  int  multiplierNonZeroOddNumber  T  object  boolean  testTransients  Class<?  super  T>  reflectUpToClass  String[]  excludeFields  [VARIABLES]  boolean  testTransients  T  object  ThreadLocal  REGISTRY  HashCodeBuilder  builder  Class  clazz  reflectUpToClass  String[]  excludeFields  int  iConstant  iTotal  initialNonZeroOddNumber  multiplierNonZeroOddNumber  	projects/Lang32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java	0.35355339059327373	359	359	1	replace	HashCodeBuilder  builder  =  new  HashCodeBuilder(initialNonZeroOddNumber,  multiplierNonZeroOddNumber  -  1);	  HashCodeBuilder    builder    =    new    HashCodeBuilder(initialNonZeroOddNumber,    multierNonZeroOddNumber);    	compilable	  [FE]  IllegalArgumentException  	29	4	replace
