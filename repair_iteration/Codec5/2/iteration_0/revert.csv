projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byteb=in[inPos++];
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byteb=DECODE_TABLE[inPos++];
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561intb=in[inPos++];
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byteb=this.in[inPos++];
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byteb=in[inPos++]+1;
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byteb=in[inAvail++];
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byteb=out[inPos++];
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byteb=in[inPos++]+4;
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561decodeBase64(inPos,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561inPos=in.length;
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561inAvail+=inPos;
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561inPos=inAvail;
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561inPos=(inPos<<1)?0:inPos;
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561decodeBase64(inPos,inAvail);break;
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561if(inPos>=inAvail){inPos=inPos;}
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561decodeBase64(in,inPos,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561decodeBase64(inPos,inAvailable);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561inPos=(inPos+1)%4;
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byteb=data[inPos++];
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byteb=in[0];
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561DecodeBase64.decodeBase64(inPos,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561decodeBase64(inPos);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561System.arraycopy(in,0,inPos,0,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561DecodeBase64.decode(inPos,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561System.arraycopy(in,0,inPos,4,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561DecodeBase64.decodeBase64(inPos,x,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561DecodeBase64.decode(in,inPos,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byteb=inAvail+inPos++;
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561System.arraycopy(in,0,inPos,1,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byte[]in=decodeBase64(inPos,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561System.arraycopy(in,0,inPos,2,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561byte[]in=decodeBase64(inPos);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561System.arraycopy(in,0,inPos,3,inAvail);
projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java561if(inPos>=inAvail){inPos+=inAvail;}
