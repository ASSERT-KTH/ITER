bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  inPos  +=  inAvail;  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  inPos  +=  inAvail;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  inAvail;	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
2	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  4;  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  4;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  4;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
3	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  6;  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  6;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  6;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
4	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  8;  }  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  8;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  8;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
5	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  3;  }  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  3;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  3;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
6	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  10;  }  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  10;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  10;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
7	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  1;  }  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  1;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  1;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
8	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  INVALID_POP;  }  [CE]  ';'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  INVALID_POP;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  INVALID_POP;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
9	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
10	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
11	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
12	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
13	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
14	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
15	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
16	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[0];  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  DECODE_TABLE[0];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[0];	  byte    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
17	[BUG]  [BUGGY]  byte  b  =  in[1];  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[1];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[1];	  byte    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
18	[BUG]  [BUGGY]  byte  b  =  this.in[0];  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  this.in[0];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[0];	  byte    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
19	[BUG]  [BUGGY]  byte  b  =  DECODE_BASE64[0];  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  DECODE_BASE64[0];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BASE64[0];	  byte    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
20	[BUG]  [BUGGY]  int  b  =  in[0];  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  in[0];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[0];	  byte    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
21	[BUG]  [BUGGY]  byte  b  =  in[0]  +  1;  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[0]  +  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[0]  +  1;	  byte    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
22	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
23	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
24	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
25	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
26	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  PAD);  break;  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvail,  PAD);  break;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  PAD);  break;	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
27	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
28	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module);  break;  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvail,  module);  break;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module);  break;	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
29	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  modulus);  break;  [CE]  ';'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvail,  modulus);  break;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  modulus);  break;	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
30	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  /  4;  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inPos++]  /  4;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  /  4;	  byte    b    =    in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	7	None	replace
31	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  -  4;  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inPos++]  -  4;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  -  4;	  byte    b    =    in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	7	None	replace
32	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  4;  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inPos++]  &  4;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  4;	  byte    b    =    in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	7	None	replace
33	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  1;  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inPos++]  &  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  1;	  byte    b    =    in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	7	None	replace
34	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  %  4;  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inPos++]  %  4;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  %  4;	  byte    b    =    in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	7	None	replace
35	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  +  2;  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inPos++]  +  2;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  +  2;	  byte    b    =    in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	7	None	replace
36	[BUG]  [BUGGY]  inPos  =  in.length  -  1;  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  in.length  -  1;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  -  1;	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
37	[BUG]  [BUGGY]  inPos  =  in.length  -  4;  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  in.length  -  4;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  -  4;	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
38	[BUG]  [BUGGY]  inPos  =  in.length  -  6;  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  in.length  -  6;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  -  6;	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
39	[BUG]  [BUGGY]  inPos  =  in.length  -  3;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  in.length  -  3;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  -  3;	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
40	[BUG]  [BUGGY]  inPos  =  inAvail  +  in.length;  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  inAvail  +  in.length;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  +  in.length;	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
41	[BUG]  [BUGGY]  inPos  =  in.length  -  2;  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  in.length  -  2;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  -  2;	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
42	[BUG]  [BUGGY]  inPos  =  in.length  -  5;  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  in.length  -  5;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  -  5;	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
43	[BUG]  [BUGGY]  byte  b  =  inPos++;  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inPos++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos++;	  byte    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	6	None	replace
44	[BUG]  [BUGGY]  int  b  =  out[inPos++];  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  out[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  out[inPos++];	  byte    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	6	None	replace
45	[BUG]  [BUGGY]  byte  b  =  this.out[inPos++];  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  this.out[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.out[inPos++];	  byte    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	6	None	replace
46	[BUG]  [BUGGY]  byte  b  =  out[inPos++]  +  1;  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  out[inPos++]  +  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  out[inPos++]  +  1;	  byte    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	6	None	replace
47	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  x);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  x);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  x);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
48	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  inAvail);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
49	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos,  inAvail);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
50	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  inAvail);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
51	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  modulus);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail,  modulus);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
52	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  module);  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  module);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail,  module);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
53	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  module);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  module);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
54	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  0,  inAvail);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
55	[BUG]  [BUGGY]  eof  =  true;  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  eof  =  true;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  true;	      	non-compiled	[CE]  ';'  expected	8	None	replace
56	[BUG]  [BUGGY]  eof  =  false;  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  eof  =  false;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  false;	      	non-compiled	[CE]  ';'  expected	8	None	replace
57	[BUG]  [BUGGY]  eof  =  true;  break;  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  eof  =  true;  break;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  true;  break;	      	non-compiled	[CE]  ';'  expected	8	None	replace
58	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
59	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
60	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvailil);  [CE]  ';'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvailil);  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  inAvailil);	      	non-compiled	[CE]  ';'  expected	8	None	replace
61	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
62	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException    [CONTEXT]      [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
63	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvailil);  [CE]  ';'  expected  [FE]                                      NullPointerException    [CONTEXT]      [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvailil);  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  inAvailil);	      	non-compiled	[CE]  ';'  expected	8	None	replace
64	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  modulus);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvailable,  modulus);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  modulus);	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
65	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  module);  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvailable,  module);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  module);	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
66	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
67	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvailable);	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
68	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
69	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
70	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  PAD);  [CE]  ';'  expected  [FE]                                    NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvailable,  PAD);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  PAD);	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
71	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  0);  [CE]  ';'  expected  [FE]                                      NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvailable,  0);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  0);	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
72	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                                        NullPointerException    [CONTEXT]      [BUGGY]  _decodeBase64(inPos,  inAvailable);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvailable);	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
73	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  1;  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  +  1;	  byte    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	1	None	replace
74	[BUG]  [BUGGY]  int  b  =  DECODE_TABLE[inPos++];  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  DECODE_TABLE[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_TABLE[inPos++];	  byte    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	1	None	replace
75	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inAvail  +  1];  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  DECODE_TABLE[inAvail  +  1];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inAvail  +  1];	  byte    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	1	None	replace
76	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inAvailil++];  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  DECODE_TABLE[inAvailil++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inAvailil++];	  byte    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	1	None	replace
77	[BUG]  [BUGGY]  char  b  =  DECODE_TABLE[inPos++];  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  char  b  =  DECODE_TABLE[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_TABLE[inPos++];	  byte    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	1	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  +  1);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inAvail  +  1);	      System.arraycopy(in,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	29	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  3);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  3);	      System.arraycopy(in,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	29	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  5,  inAvail);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  5,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  5,  inAvail);	      System.arraycopy(in,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	29	None	replace
81	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4);	      System.arraycopy(in,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	29	None	replace
82	[BUG]  [BUGGY]  char  b  =  in[inPos++];  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  char  b  =  in[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[inPos++];	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
83	[BUG]  [BUGGY]  int  b  =  in[inPos++]  +  1;  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  in[inPos++]  +  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  +  1;	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
84	[BUG]  [BUGGY]  int  b  =  this.in[inPos++];  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  this.in[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.in[inPos++];	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
85	[BUG]  [BUGGY]  int  b  =  in[inAvail++];  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  in[inAvail++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inAvail++];	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
86	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0xff;  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  in[inPos++]  &  0xff;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0xff;	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
87	[BUG]  [BUGGY]  int  b  =  in[inPos++]  +  4;  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  in[inPos++]  +  4;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  +  4;	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
88	[BUG]  [BUGGY]  byte  b  =  inPos  +  inAvail++;  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inPos  +  inAvail++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  inAvail++;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
89	[BUG]  [BUGGY]  byte  b  =  inAvail  +  4;  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  4;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  4;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
90	[BUG]  [BUGGY]  byte  b  =  inAvail  +  1;  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  1;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
91	[BUG]  [BUGGY]  byte  b  =  inAvail  +  3++;  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  3++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  3++;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
92	[BUG]  [BUGGY]  byte  b  =  inAvail  +  6;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  6;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  6;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
93	[BUG]  [BUGGY]  byte  b  =  inAvail  +  3;  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  3;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  3;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
94	[BUG]  [BUGGY]  byte  b  =  inAvail  +  4++;  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  4++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  4++;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
95	[BUG]  [BUGGY]  byte  b  =  inAvail  +  8++;  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  8++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  8++;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
96	[BUG]  [BUGGY]  byte  b  =  inAvail  +  6++;  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  6++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  6++;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
97	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvail,  modulus);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  modulus);	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
98	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvail,  module);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module);	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
99	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
100	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
101	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  eof  =  decodeBase64(inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail);	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
102	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  0);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvail,  0);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  0);	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
103	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
104	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
105	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  _decodeBase64(inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail);	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
106	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  0  :  inAvail;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  <  <  1)?  0  :  inAvail;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  0  :  inAvail;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
107	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inPos;  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inPos;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  1  :  inPos;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
108	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  3  :  inPos;  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  <  <  1)?  3  :  inPos;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  3  :  inPos;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
109	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inPos  +  1;  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inPos  +  1;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  1  :  inPos  +  1;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
110	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  0  :  inPos;  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  +  1)?  0  :  inPos;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  0  :  inPos;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
111	[BUG]  [BUGGY]  inPos  =(inPos  <  <  2)?  0  :  inPos;  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  <  <  2)?  0  :  inPos;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  2)?  0  :  inPos;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
112	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  4  :  inPos;  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  <  <  1)?  4  :  inPos;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  4  :  inPos;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
113	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  -1  :  inPos;  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  <  <  1)?  -1  :  inPos;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  -1  :  inPos;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
114	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inAvail;  [CE]  ';'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inAvail;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  1  :  inAvail;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
115	[BUG]  [BUGGY]  inPos  =  inPos;  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  inPos;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inPos;	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
116	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
117	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
118	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
119	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  INVALID_POP;  }  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  INVALID_POP;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  INVALID_POP;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
120	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  1;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  1;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
121	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  4;  }  [CE]  ';'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  4;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  4;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
122	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  10;  }  [CE]  ';'  expected  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  10;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  10;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
123	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  6;  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  +  1)%  6;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  6;	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
124	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  2;  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  +  1)%  2;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  2;	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
125	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  3;  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  +  1)%  3;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  3;	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
126	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  4  +  1;  [CE]  ';'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  +  1)%  4  +  1;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  4  +  1;	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
127	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  5;  [CE]  ';'  expected  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  +  1)%  5;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  5;	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
128	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  8;  [CE]  ';'  expected  [FE]                                    NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  +  1)%  8;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  8;	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
129	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  7;  [CE]  ';'  expected  [FE]                                      NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  +  1)%  7;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  7;	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
130	[BUG]  [BUGGY]  inPos  =(inPos  +  1)/  4;  [CE]  ';'  expected  [FE]                                        NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  +  1)/  4;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)/  4;	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
131	[BUG]  [BUGGY]  inPos  =  0;  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  0;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  0;	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
132	[BUG]  [BUGGY]  inPos  =  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  Integer.MAX_VALUE;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.MAX_VALUE;	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
133	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inAvail;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  inAvail;  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
134	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  inAvail;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  inAvail;  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
135	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE.length);	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
136	[BUG]  [BUGGY]  inPos  =  4;  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  4;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  4;	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
137	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  inAvail;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  =  inAvail;  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
138	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
139	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(inPos);  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  Integer.parseInt(inPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(inPos);	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
140	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inAvail  +  1);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  3,  inAvail  +  1);	      System.arraycopy(in,    0,    inPos,    3,    inAvail);    	non-compiled	[CE]  ';'  expected	33	None	replace
141	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  modulus);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  modulus);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  3,  modulus);	      System.arraycopy(in,    0,    inPos,    3,    inAvail);    	non-compiled	[CE]  ';'  expected	33	None	replace
142	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  1);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
143	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  modulus);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  modulus);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
144	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(in,  inPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
145	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  3);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
146	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  4);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
147	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  6);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  6);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
148	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
149	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  0);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  0);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  0);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
150	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  -  1;  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inPos++]  -  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  -  1;	  byte    b    =    in[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	4	None	replace
151	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  /  1;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inPos++]  /  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  /  1;	  byte    b    =    in[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	4	None	replace
152	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  +  3;  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inPos++]  +  3;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  +  3;	  byte    b    =    in[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	4	None	replace
153	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  PAD);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  PAD);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  PAD);	      byte[]    in    =    decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	32	None	replace
154	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  1);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos  +  1);	      byte[]    in    =    decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	32	None	replace
155	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  3);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  3);	      byte[]    in    =    decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	32	None	replace
156	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos++);  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos++);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos++);	      byte[]    in    =    decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	32	None	replace
157	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  4);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  4);	      byte[]    in    =    decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	32	None	replace
158	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos);	      byte[]    in    =    decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	32	None	replace
159	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos);  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  this.decodeBase64(inPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos);	      byte[]    in    =    decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	32	None	replace
160	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  32);  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  32);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  32);	      byte[]    in    =    decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	32	None	replace
161	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
162	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
163	[BUG]  [BUGGY]  inAvail  +=  4;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  inAvail  +=  4;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  4;	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
164	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
165	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
166	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
167	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
168	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos);  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
169	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  +  1;  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  this.in[inPos++]  +  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  +  1;	  byte    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	3	None	replace
170	[BUG]  [BUGGY]  char  b  =  this.in[inPos++];  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  char  b  =  this.in[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  this.in[inPos++];	  byte    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	3	None	replace
171	[BUG]  [BUGGY]  byte  b  =  this.in[inAvail++];  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  this.in[inAvail++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inAvail++];	  byte    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	3	None	replace
172	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  +  4;  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  this.in[inPos++]  +  4;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  +  4;	  byte    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	3	None	replace
173	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  4);  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos,  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  4);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
174	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  3);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos,  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  3);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
175	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  0);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos,  0);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  0);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
176	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  1);  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos,  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  1);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
177	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  2);  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos,  2);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  2);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
178	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail);  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  0,  inAvail);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
179	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  10);  [CE]  ';'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos,  10);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  10);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
180	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  8);  [CE]  ';'  expected  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos,  8);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  8);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
181	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  6);  [CE]  ';'  expected  [FE]                                    NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos,  6);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  6);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
182	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  1);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  inAvail  +  1);	      System.arraycopy(in,    0,    inPos,    4,    inAvail);    	non-compiled	[CE]  ';'  expected	25	None	replace
183	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  6,  inAvail);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  6,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  6,  inAvail);	      System.arraycopy(in,    0,    inPos,    4,    inAvail);    	non-compiled	[CE]  ';'  expected	25	None	replace
184	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  1);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  +  1);	      System.arraycopy(in,    0,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	23	None	replace
185	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  3);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  +  3);	      System.arraycopy(in,    0,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	23	None	replace
186	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inAvail,  0,  inPos);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inAvail,  0,  inPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inAvail,  0,  inPos);	      System.arraycopy(in,    0,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	23	None	replace
187	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  4);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  +  4);	      System.arraycopy(in,    0,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	23	None	replace
188	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
189	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  1);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
190	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  modulus);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  modulus);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
191	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  module);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  module);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
192	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  PAD);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  PAD);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  PAD);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
193	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  0);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  0);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  0);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
194	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  4);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
195	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  -  1);  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail  -  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  -  1);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
196	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  3);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
197	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  +  1;  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  data[inPos++]  +  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  +  1;	  byte    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	19	None	replace
198	[BUG]  [BUGGY]  int  b  =  data[inPos++];  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  data[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[inPos++];	  byte    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	19	None	replace
199	[BUG]  [BUGGY]  byte  b  =  this.data[inPos++];  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  this.data[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.data[inPos++];	  byte    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	19	None	replace
200	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  +  4;  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  data[inPos++]  +  4;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  +  4;	  byte    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	19	None	replace
201	[BUG]  [BUGGY]  byte  b  =  data[inAvailable++];  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  data[inAvailable++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inAvailable++];	  byte    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	19	None	replace
202	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inAvail++];  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  DECODE_TABLE[inAvail++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inAvail++];	  byte    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	5	None	replace
203	[BUG]  [BUGGY]  byte  b  =  inPos[inAvail++];  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inPos[inAvail++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[inAvail++];	  byte    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	5	None	replace
204	[BUG]  [BUGGY]  char  b  =  in[inAvail++];  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  char  b  =  in[inAvail++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[inAvail++];	  byte    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	5	None	replace
205	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  PAD);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  PAD);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  PAD);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
206	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  +  1);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
207	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  module);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  module);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
208	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  inAvail);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
209	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  modulus);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  modulus);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
210	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  4);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
211	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  inAvail);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
212	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  3);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  3);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
213	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  3);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(in,  inPos,  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  3);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
214	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  4);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(in,  inPos,  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  4);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
215	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  inAvail);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
216	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  0);  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(in,  inPos,  0);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  0);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
217	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  1);  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(in,  inPos,  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  1);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
218	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  _decodeBase64(in,  inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  inAvail);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
219	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  2);  [CE]  ';'  expected  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(in,  inPos,  2);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  2);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
220	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  10);  [CE]  ';'  expected  [FE]                                    NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(in,  inPos,  10);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  10);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
221	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  6);  [CE]  ';'  expected  [FE]                                      NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(in,  inPos,  6);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  6);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
222	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  +  1);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  2,  inAvail  +  1);	      System.arraycopy(in,    0,    inPos,    2,    inAvail);    	non-compiled	[CE]  ';'  expected	31	None	replace
223	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  2);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  2);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  2);	      System.arraycopy(in,    0,    inPos,    2,    inAvail);    	non-compiled	[CE]  ';'  expected	31	None	replace
224	[BUG]  [BUGGY]  byte  b  =  inPos  +  6++;  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inPos  +  6++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  6++;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
225	[BUG]  [BUGGY]  byte  b  =  inAvail  +  7++;  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  7++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  7++;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
226	[BUG]  [BUGGY]  byte  b  =  inPos  +  1;  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inPos  +  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  1;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
227	[BUG]  [BUGGY]  int  b  =  inAvail[inPos++];  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  inAvail[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail[inPos++];	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
228	[BUG]  [BUGGY]  int  b  =  inAvail  +  inPos++;  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  inAvail  +  inPos++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail  +  inPos++;	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
229	[BUG]  [BUGGY]  int  b  =  inAvail  +  inPos;  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  inAvail  +  inPos;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail  +  inPos;	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
230	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  1;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  in[inPos++]  &  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  1;	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
231	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail);  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  inAvail);	      	non-compiled	[CE]  ';'  expected	8	None	replace
232	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  ((  Base64)modulus).decodeBase64(inPos);  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos);	      	non-compiled	[CE]  ';'  expected	8	None	replace
233	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvail);  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvail);  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  inAvail);	      	non-compiled	[CE]  ';'  expected	8	None	replace
234	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos);  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  ((  Base64)modulus).decode(inPos);  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos);	      	non-compiled	[CE]  ';'  expected	8	None	replace
235	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  super.decodeBase64(inPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos);	      byte[]    in    =    decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	32	None	replace
236	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos);	      byte[]    in    =    decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	32	None	replace
237	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;	  byte    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	3	None	replace
238	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;	  byte    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	3	None	replace
239	[BUG]  [BUGGY]  byte  b  =  3[inPos++];  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  3[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  3[inPos++];	  byte    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	1	None	replace
240	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  4;  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  4;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  +  4;	  byte    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	1	None	replace
241	[BUG]  [BUGGY]  byte  b  =  this.decode[inPos++];  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  this.decode[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.decode[inPos++];	  byte    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	1	None	replace
242	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  4);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvailable,  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  4);	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
243	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  3);  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvailable,  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  3);	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
244	[BUG]  [BUGGY]  decodeBase64(inPos,  0);  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  0);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  0);	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
245	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
246	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  ==  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
247	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
248	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
249	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  ==  0)  {  inPos  =  inAvail;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  inAvail;  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
250	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inPos  +=  inAvail;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  inAvail;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
251	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inPos  +=  Integer.MAX_VALUE;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  Integer.MAX_VALUE;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
252	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  <  inAvail)  {  inPos  +=  inAvail;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  +=  inAvail;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
253	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  1;  }  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inPos  +=  1;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  1;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
254	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inPos  +=  Integer.MIN_VALUE;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  Integer.MIN_VALUE;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
255	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  0;  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inPos  =  0;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  0;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
256	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  inPos;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  =  inPos;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
257	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  inPos;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  inPos;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
258	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  -  1);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  -  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  inAvail  -  1);	      System.arraycopy(in,    0,    inPos,    4,    inAvail);    	non-compiled	[CE]  ';'  expected	25	None	replace
259	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  -  1);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  -  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  -  1);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
260	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  2);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  2);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  2);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
261	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  outPos);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  outPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  outPos);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
262	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  5);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  5);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  5);	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
263	[BUG]  [BUGGY]  byte  b  =  inAvail  +  out[inPos++];  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  out[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  out[inPos++];	  byte    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	6	None	replace
264	[BUG]  [BUGGY]  byte  b  =  inPos  +  out[inPos++];  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inPos  +  out[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  out[inPos++];	  byte    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	6	None	replace
265	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  4  +  3;  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  +  1)%  4  +  3;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  4  +  3;	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
266	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(in,  inPos,  inAvail,  modulus);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  modulus);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
267	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  module);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
268	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  PAD);  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(in,  inPos,  PAD);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  PAD);	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
269	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  4);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
270	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  6);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  6);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
271	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  2);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  2);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  2);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
272	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  outPos);  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  outPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  outPos);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
273	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  0);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  0);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  0);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
274	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  2,  inAvail);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  2,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  2,  inAvail);	      System.arraycopy(in,    0,    inPos,    2,    inAvail);    	non-compiled	[CE]  ';'  expected	31	None	replace
275	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  1,  inAvail);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  1,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  1,  inAvail);	      System.arraycopy(in,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	29	None	replace
276	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  -  1);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  -  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inAvail  -  1);	      System.arraycopy(in,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	29	None	replace
277	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  +  2);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  +  2);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inAvail  +  2);	      System.arraycopy(in,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	29	None	replace
278	[BUG]  [BUGGY]  byte  b  =  inPos[0];  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inPos[0];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[0];	  byte    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
279	[BUG]  [BUGGY]  byte  b  =  DECODE_BACKSLASH[0];  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  DECODE_BACKSLASH[0];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BACKSLASH[0];	  byte    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
280	[BUG]  [BUGGY]  byte  b  =  in[4];  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[4];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[4];	  byte    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
281	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(x,  inPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
282	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  inAvail);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
283	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  1);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  1);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
284	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  inAvail  +  1);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
285	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  3);  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  3);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
286	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  4);  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  4);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
287	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  -  1);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  -  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  -  1);	      System.arraycopy(in,    0,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	23	None	replace
288	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  2);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  2);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  +  2);	      System.arraycopy(in,    0,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	23	None	replace
289	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  outPos);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  outPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  outPos);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
290	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  +  3);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
291	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  inAvail);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
292	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  +  4);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
293	[BUG]  [BUGGY]  inPos  =(inPos  >=  1)?  0  :  inPos;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  >=  1)?  0  :  inPos;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >=  1)?  0  :  inPos;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
294	[BUG]  [BUGGY]  inPos  =(inPos  <  <  6)?  0  :  inPos;  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  <  <  6)?  0  :  inPos;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  6)?  0  :  inPos;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
295	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
296	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail  +  1);  break;  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvail  +  1);  break;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail  +  1);  break;	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
297	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail);  break;  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  _decodeBase64(inPos,  inAvail);  break;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail);  break;	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
298	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
299	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  3,  inAvail);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  3,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  3,  inAvail);	      System.arraycopy(in,    0,    inPos,    3,    inAvail);    	non-compiled	[CE]  ';'  expected	33	None	replace
300	[BUG]  [BUGGY]  byte  b  =  in[5++];  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[5++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[5++];	  byte    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	5	None	replace
301	[BUG]  [BUGGY]  byte  b  =  data[0];  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  data[0];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[0];	  byte    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	19	None	replace
302	[BUG]  [BUGGY]  byte  b  =  data[inAvailil++];  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  data[inAvailil++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inAvailil++];	  byte    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	19	None	replace
303	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  +  3;  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  data[inPos++]  +  3;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  +  3;	  byte    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	19	None	replace
304	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
305	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
306	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
307	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
308	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
309	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  %  1;  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inPos++]  %  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  %  1;	  byte    b    =    in[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	4	None	replace
310	[BUG]  [BUGGY]  _decodeBase64(inPos);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  _decodeBase64(inPos);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos);	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
311	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
312	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
313	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
314	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
315	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
316	[BUG]  [BUGGY]  inAvail  +=  inPos  +  1;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  inAvail  +=  inPos  +  1;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  inPos  +  1;	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
317	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  inAvail  +  1);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
318	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  PAD);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  inPos,  PAD);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  PAD);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
319	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(in,  0,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0,  inAvail);	      DecodeBase64.decode(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	27	None	replace
320	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvail  +  1);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail  +  1);	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
321	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvail,  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  4);	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
322	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  3);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvail,  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  3);	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
323	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  8);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  decodeBase64(inPos,  inAvail,  8);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  8);	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
324	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
325	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
326	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
327	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
328	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }	      inPos    =(inPos    +    1)%    4;    	non-compiled	[CE]  ';'  expected	18	None	replace
329	[BUG]  [BUGGY]  byte  b  =  inAvail  +  this.in[inPos++];  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  this.in[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  this.in[inPos++];	  byte    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	3	None	replace
330	[BUG]  [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  inAvail;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  inAvail;	  byte    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	3	None	replace
331	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inPos;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inPos;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inPos;	  byte    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	3	None	replace
332	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail;	  byte    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	3	None	replace
333	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  3;  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inPos++]  &  3;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  3;	  byte    b    =    in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	7	None	replace
334	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
335	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
336	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
337	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }	      decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	16	None	replace
338	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
339	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
340	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
341	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }	      decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
342	[BUG]  [BUGGY]  byte  b  =  in[inAvail++]  +  1;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[inAvail++]  +  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inAvail++]  +  1;	  byte    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	5	None	replace
343	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  inAvail);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  inPos,  inAvail);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
344	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  inAvail);	      byte[]    in    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	30	None	replace
345	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
346	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
347	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1,  modulus);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1,  modulus);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  1,  modulus);	      DecodeBase64.decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	24	None	replace
348	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  inPos);  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
349	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
350	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }	      inAvail    +=    inPos;    	non-compiled	[CE]  ';'  expected	11	None	replace
351	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
352	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
353	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
354	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  inPos,  3);  }	      decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	22	None	replace
355	[BUG]  [BUGGY]  inPos  =  inAvail  +  6;  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  inPos  =  inAvail  +  6;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  +  6;	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
356	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  =  inPos;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  =  inPos;  }	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
357	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }	      inPos    =    in.length;    	non-compiled	[CE]  ';'  expected	10	None	replace
358	[BUG]  [BUGGY]  byte  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  inAvail;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  inAvail;	  byte    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	1	None	replace
359	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  inAvail;  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  inAvail;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  +  inAvail;	  byte    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	1	None	replace
360	[BUG]  [BUGGY]  byte  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  1;  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  1;	  byte    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	1	None	replace
361	[BUG]  [BUGGY]  byte  b  =  in[6];  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  in[6];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[6];	  byte    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
362	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
363	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }	      decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	17	None	replace
364	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0xFF;  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  in[inPos++]  &  0xFF;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0xFF;	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
365	[BUG]  [BUGGY]  int  b  =  in[inPos++]  -  1;  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  in[inPos++]  -  1;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  -  1;	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
366	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  ';';  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  in[inPos++]  &  ';';  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  ';';	  int    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	2	None	replace
367	[BUG]  [BUGGY]  byte  b  =  inPos  +  3++;  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inPos  +  3++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  3++;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
368	[BUG]  [BUGGY]  byte  b  =  inPos  +  4++;  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inPos  +  4++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  4++;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
369	[BUG]  [BUGGY]  byte  b  =  inPos  +  8++;  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inPos  +  8++;  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  8++;	  byte    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	28	None	replace
370	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
371	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
372	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  return;  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  return;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  return;  }	      decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	9	None	replace
373	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
374	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
375	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
376	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
377	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  inPos  =  inPos;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  inPos  =  inPos;  }	      DecodeBase64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	21	None	replace
378	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  0  :  inPos  +  1;  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  <  <  1)?  0  :  inPos  +  1;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  0  :  inPos  +  1;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
379	[BUG]  [BUGGY]  inPos  =(inPos  <  <  4)?  0  :  inPos;  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  inPos  =(inPos  <  <  4)?  0  :  inPos;  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  4)?  0  :  inPos;	      inPos    =(inPos    <    <    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	13	None	replace
380	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  7;  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  7;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  7;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
381	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  +=  4;  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  1)  {  inPos  +=  4;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  +=  4;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
382	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  4;  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  4;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  4;  }	      if(inPos    >=    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
383	[BUG]  [BUGGY]  byte  b  =  inAvail  +  data[inPos++];  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvail  +  data[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  data[inPos++];	  byte    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	19	None	replace
384	[BUG]  [BUGGY]  byte  b  =  inAvailable[inPos++];  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  byte  b  =  inAvailable[inPos++];  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvailable[inPos++];	  byte    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	19	None	replace
385	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
386	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
387	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  4);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  4);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  4);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
388	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  3);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  3);  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  3);	      DecodeBase64.decodeBase64(inPos,    x,    inAvail);    	non-compiled	[CE]  ';'  expected	26	None	replace
389	[BUG]  [BUGGY]  int  b  =  decodeBase64(modulus);  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  int  b  =  decodeBase64(modulus);  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  decodeBase64(modulus);	      	non-compiled	[CE]  ';'  expected	8	None	replace
390	[BUG]  [BUGGY]  b  =  decodeBase64(modulus);  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  b  =  decodeBase64(modulus);  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus);	      	non-compiled	[CE]  ';'  expected	8	None	replace
391	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  b  =  decodeBase64(inPos,  inAvail);  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail);	      	non-compiled	[CE]  ';'  expected	8	None	replace
392	[BUG]  [BUGGY]  int  b  =(int)Math.floor(modulus);  [CE]  ';'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  int  b  =(int)Math.floor(modulus);  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(int)Math.floor(modulus);	      	non-compiled	[CE]  ';'  expected	8	None	replace
393	[BUG]  [BUGGY]  byte[]  b  =  decodeBase64(modulus);  [CE]  ';'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  byte[]  b  =  decodeBase64(modulus);  [BUGGY]    if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  decodeBase64(modulus);	      	non-compiled	[CE]  ';'  expected	8	None	replace
394	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
395	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
396	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }	      inPos    =    inAvail;    	non-compiled	[CE]  ';'  expected	12	None	replace
397	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos  +  1;  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos  +  1;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  inPos  +  1;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
398	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inPos;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
399	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  6;  }  [CE]  ';'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  6;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  6;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
400	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  inPos;  }  [BUGGY]    byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inPos  =  inPos;  }	      if(inPos    >=    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
